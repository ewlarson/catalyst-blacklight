beans:jhu-blacklight-rails ewlarson$ bundle exec rake inquisition:all
Logging Deprecations from Blacklight and Deprecation gem...
I, [2020-07-22T10:55:29.843871 #54862]  INFO -- : Celluloid 0.17.4 is running in BACKPORTED mode. [ http://git.io/vJf3J ]
######################################################################################################
#                                                                                                    #
#                                           BUNDLER_AUDIT                                            #
#                                                                                                    #
######################################################################################################

Updating ruby-advisory-db ...
From https://github.com/rubysec/ruby-advisory-db
 * branch            master     -> FETCH_HEAD
Already up to date.
Updated ruby-advisory-db
ruby-advisory-db: 458 advisories
No vulnerabilities found

######################################################################################################
#                                                                                                    #
#                                                ERD                                                 #
#                                                                                                    #
######################################################################################################

Loading application in 'jhu-blacklight-rails'...
Logging Deprecations from Blacklight and Deprecation gem...
I, [2020-07-22T10:55:43.538605 #54891]  INFO -- : Celluloid 0.17.4 is running in BACKPORTED mode. [ http://git.io/vJf3J ]
/Users/ewlarson/Rails/jhu-blacklight-rails/config/initializers/bento_search.rb:104: warning: already initialized constant BentoSearch::EbscoHostEngine::HttpTimeout
/Users/ewlarson/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/bento_search-1.7.0/app/search_engines/bento_search/ebsco_host_engine.rb:115: warning: previous definition of HttpTimeout was here
Generating entity-relationship diagram for 10 models...
Warning: Ignoring invalid model ActiveStorage::Attachment (table active_storage_attachments does not exist)
Warning: Ignoring invalid model ActiveStorage::Blob (table active_storage_blobs does not exist)
Warning: Ignoring invalid association :document on Bookmark (polymorphic interface Document does not exist)
Diagram saved to 'doc/erd.svg'.

######################################################################################################
#                                                                                                    #
#                                             RAILROADY                                              #
#                                                                                                    #
######################################################################################################

Processing Models...
Logging Deprecations from Blacklight and Deprecation gem...
I, [2020-07-22T10:55:59.332814 #54901]  INFO -- : Celluloid 0.17.4 is running in BACKPORTED mode. [ http://git.io/vJf3J ]
/Users/ewlarson/Rails/jhu-blacklight-rails/config/initializers/bento_search.rb:104: warning: already initialized constant BentoSearch::EbscoHostEngine::HttpTimeout
/Users/ewlarson/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/bento_search-1.7.0/app/search_engines/bento_search/ebsco_host_engine.rb:115: warning: previous definition of HttpTimeout was here
Warning: exception Unable to autoload constant YbossSpell, expected /Users/ewlarson/Rails/jhu-blacklight-rails/app/models/yboss_spell.rb to define it raised while trying to load model class app/models/yboss_spell.rb
Logging Deprecations from Blacklight and Deprecation gem...
I, [2020-07-22T10:56:09.814830 #54914]  INFO -- : Celluloid 0.17.4 is running in BACKPORTED mode. [ http://git.io/vJf3J ]
/Users/ewlarson/Rails/jhu-blacklight-rails/config/initializers/bento_search.rb:104: warning: already initialized constant BentoSearch::EbscoHostEngine::HttpTimeout
/Users/ewlarson/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/bento_search-1.7.0/app/search_engines/bento_search/ebsco_host_engine.rb:115: warning: previous definition of HttpTimeout was here
Warning: exception Unable to autoload constant YbossSpell, expected /Users/ewlarson/Rails/jhu-blacklight-rails/app/models/yboss_spell.rb to define it raised while trying to load model class app/models/yboss_spell.rb
Processing Controllers...
Logging Deprecations from Blacklight and Deprecation gem...
I, [2020-07-22T10:56:21.342006 #54930]  INFO -- : Celluloid 0.17.4 is running in BACKPORTED mode. [ http://git.io/vJf3J ]
/Users/ewlarson/Rails/jhu-blacklight-rails/config/initializers/bento_search.rb:104: warning: already initialized constant BentoSearch::EbscoHostEngine::HttpTimeout
/Users/ewlarson/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/bento_search-1.7.0/app/search_engines/bento_search/ebsco_host_engine.rb:115: warning: previous definition of HttpTimeout was here

######################################################################################################
#                                                                                                    #
#                                                REEK                                                #
#                                                                                                    #
######################################################################################################

Inspecting 124 file(s):
SSS...SSSSSSSSSSSS.SSSSSSSSSSS.SSSSS.SSS.S...........S..........S........SSSSSSS.SSSSSSSS.......S........S......SSS.SSS.S...

app/controllers/application_controller.rb -- 17 warnings:
  [49, 49]:DuplicateMethodCall: ApplicationController#current_user calls 'session[:current_user_horizon_id]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [42, 48]:DuplicateMethodCall: ApplicationController#current_user calls 'session[:current_user_id]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [78, 78]:DuplicateMethodCall: ApplicationController#guest_user calls 'session[:guest_user_id]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [182, 182]:DuplicateMethodCall: ApplicationController#log_error_with_context calls 'request.referer' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [207, 212, 215]:DuplicateMethodCall: ApplicationController#sanitize_redirect_url calls 'Rails.logger' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [200, 200]:DuplicateMethodCall: ApplicationController#sanitize_redirect_url calls 'params[:referer]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [202, 203, 205]:DuplicateMethodCall: ApplicationController#sanitize_redirect_url calls 'request.host' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [203, 205]:DuplicateMethodCall: ApplicationController#sanitize_redirect_url calls 'request.port' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [99, 100, 101]:FeatureEnvy: ApplicationController#create_guest_user! refers to 'u' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [185]:ManualDispatch: ApplicationController#log_error_with_context manually dispatches method call [https://github.com/troessner/reek/blob/v6.0.1/docs/Manual-Dispatch.md]
  [91]:MissingSafeMethod: ApplicationController has missing safe method 'create_guest_user!' [https://github.com/troessner/reek/blob/v6.0.1/docs/Missing-Safe-Method.md]
  [42]:NilCheck: ApplicationController#current_user performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [9]:TooManyInstanceVariables: ApplicationController has at least 5 instance variables [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Instance-Variables.md]
  [178]:TooManyStatements: ApplicationController#log_error_with_context has approx 9 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [199]:TooManyStatements: ApplicationController#sanitize_redirect_url has approx 11 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [35]:UncommunicativeMethodName: ApplicationController#show404 has the name 'show404' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Method-Name.md]
  [98]:UncommunicativeVariableName: ApplicationController#create_guest_user! has the variable name 'u' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
app/controllers/borrow_direct_controller.rb -- 4 warnings:
  [29, 30]:DuplicateMethodCall: BorrowDirectController#borrow_direct_url calls 'request.query_string' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [47, 67]:DuplicateMethodCall: BorrowDirectController#verify_user calls 'current_user.horizon_borrower_id' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [21]:TooManyStatements: BorrowDirectController#borrow_direct_url has approx 6 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [37]:TooManyStatements: BorrowDirectController#verify_user has approx 8 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
app/controllers/catalog_controller.rb -- 21 warnings:
  [420, 421]:DuplicateMethodCall: CatalogController#copy calls '@document.to_dlf_expanded_for_holdingset(params[:copy_id])' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [412, 415, 420, 421]:DuplicateMethodCall: CatalogController#copy calls 'params[:copy_id]' 4 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [420, 421]:DuplicateMethodCall: CatalogController#copy calls 'render :text =>  @document.to_dlf_expanded_for_holdingset(params[:copy_id])' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [526, 526, 529, 533]:DuplicateMethodCall: CatalogController#redirect_legacy_advanced_search calls 'params[:f_inclusive]' 4 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [516, 516, 516, 517]:DuplicateMethodCall: CatalogController#redirect_legacy_values calls 'params[:f]' 4 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [516, 516, 517]:DuplicateMethodCall: CatalogController#redirect_legacy_values calls 'params[:f][:format]' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [553, 559]:DuplicateMethodCall: CatalogController#remove_unused_facet_limits calls 'params[:f]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [453, 459]:DuplicateMethodCall: CatalogController#sms_send calls 'params[:carrier]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [438, 441]:DuplicateMethodCall: CatalogController#sms_send calls 'params[:id]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [450, 450, 460]:DuplicateMethodCall: CatalogController#sms_send calls 'params[:to]' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [457, 463]:DuplicateMethodCall: CatalogController#sms_send calls 'render "sms_form"' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [526]:ManualDispatch: CatalogController#redirect_legacy_advanced_search manually dispatches method call [https://github.com/troessner/reek/blob/v6.0.1/docs/Manual-Dispatch.md]
  [414]:NilCheck: CatalogController#copy performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [452]:NilCheck: CatalogController#sms_send performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [16]:TooManyInstanceVariables: CatalogController has at least 6 instance variables [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Instance-Variables.md]
  [16]:TooManyMethods: CatalogController has at least 16 methods [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Methods.md]
  [410]:TooManyStatements: CatalogController#copy has approx 9 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [604]:TooManyStatements: CatalogController#require_login has approx 9 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [437]:TooManyStatements: CatalogController#sms_send has approx 18 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [559]:UncommunicativeVariableName: CatalogController#remove_unused_facet_limits has the variable name 'f' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [445]:UncommunicativeVariableName: CatalogController#sms_send has the variable name 'h' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
app/controllers/multi_search_controller.rb -- 22 warnings:
  [13, 30]:DuplicateMethodCall: MultiSearchController#index calls 'params[:q]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [179, 180, 181]:DuplicateMethodCall: MultiSearchController#log_bento_errors calls 'r.error' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [180, 181]:DuplicateMethodCall: MultiSearchController#log_bento_errors calls 'r.error[:exception]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [112, 118]:DuplicateMethodCall: MultiSearchController#refworks_callback calls 'params[:encrypted_id]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [112, 117]:DuplicateMethodCall: MultiSearchController#refworks_callback calls 'params[:engine]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [113, 127, 130]:DuplicateMethodCall: MultiSearchController#refworks_callback calls 'render(:status => 404)' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [68, 97]:DuplicateMethodCall: MultiSearchController#search calls 'params[:engine]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [75, 80]:DuplicateMethodCall: MultiSearchController#search calls 'params[:q]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [178, 178, 179, 179, 179, 180, 181]:FeatureEnvy: MultiSearchController#log_bento_errors refers to 'r' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [146, 146, 148, 150]:FeatureEnvy: MultiSearchController#search_context refers to 'hash' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [146]:ManualDispatch: MultiSearchController#search_context manually dispatches method call [https://github.com/troessner/reek/blob/v6.0.1/docs/Manual-Dispatch.md]
  [5]:TooManyInstanceVariables: MultiSearchController has at least 6 instance variables [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Instance-Variables.md]
  [10]:TooManyStatements: MultiSearchController#index has approx 12 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [111]:TooManyStatements: MultiSearchController#refworks_callback has approx 12 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [58]:TooManyStatements: MultiSearchController#search has approx 13 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [143]:TooManyStatements: MultiSearchController#search_context has approx 6 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [177, 178]:UncommunicativeVariableName: MultiSearchController#log_bento_errors has the variable name 'r' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [69]:UncommunicativeVariableName: MultiSearchController#search has the variable name 'e' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [150]:UncommunicativeVariableName: MultiSearchController#search_context has the variable name 'k' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [150]:UncommunicativeVariableName: MultiSearchController#search_context has the variable name 'v' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [165]:UtilityFunction: MultiSearchController#decrypt_record_id doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [157]:UtilityFunction: MultiSearchController#encrypt_record_id doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
app/controllers/requests_controller.rb -- 10 warnings:
  [45, 47]:DuplicateMethodCall: RequestsController#init_hip_pilot calls 'current_user.horizon_borrower_id' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [58, 66]:DuplicateMethodCall: RequestsController#init_hip_pilot calls 'flash[:notice] = "Please log in to place a request."' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [16, 21]:DuplicateMethodCall: RequestsController#new calls 'params[:item_id]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [3]:TooManyInstanceVariables: RequestsController has at least 7 instance variables [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Instance-Variables.md]
  [70]:TooManyStatements: RequestsController#catch_request_failure has approx 7 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [27]:TooManyStatements: RequestsController#create has approx 6 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [44]:TooManyStatements: RequestsController#init_hip_pilot has approx 7 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [11]:TooManyStatements: RequestsController#new has approx 6 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [72, 75]:UncommunicativeVariableName: RequestsController#catch_request_failure has the variable name 'e' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [16]:UncommunicativeVariableName: RequestsController#new has the variable name 'h' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
app/controllers/reserves_controller.rb -- 8 warnings:
  [29, 30]:DuplicateMethodCall: ReservesController#index calls 'params[:location]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [43]:NestedIterators: ReservesController#index contains iterators nested 3 deep [https://github.com/troessner/reek/blob/v6.0.1/docs/Nested-Iterators.md]
  [1]:TooManyInstanceVariables: ReservesController has at least 9 instance variables [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Instance-Variables.md]
  [17]:TooManyStatements: ReservesController#index has approx 13 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [52]:TooManyStatements: ReservesController#show has approx 7 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [85]:UncommunicativeVariableName: ReservesController#default_sort_field has the variable name 'd' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [43]:UncommunicativeVariableName: ReservesController#index has the variable name 'i' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [56]:UncommunicativeVariableName: ReservesController#show has the variable name 'j' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
app/controllers/spellcheck_behavior.rb -- 7 warnings:
  [60, 70]:ClassVariable: SpellcheckBehavior declares the class variable '@@probably_bot_regexp' [https://github.com/troessner/reek/blob/v6.0.1/docs/Class-Variable.md]
  [70, 70]:DuplicateMethodCall: SpellcheckBehavior#probably_bot? calls 'request.env' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [70, 70]:DuplicateMethodCall: SpellcheckBehavior#probably_bot? calls 'request.env["HTTP_USER_AGENT"]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [55, 55]:DuplicateMethodCall: SpellcheckBehavior#should_spell_check? calls 'params[:format]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [51, 51]:DuplicateMethodCall: SpellcheckBehavior#should_spell_check? calls 'params[:page]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [51, 51]:DuplicateMethodCall: SpellcheckBehavior#should_spell_check? calls 'params[:q]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [51]:NilCheck: SpellcheckBehavior#should_spell_check? performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
app/controllers/user_sessions_controller.rb -- 15 warnings:
  [31, 56]:DuplicateMethodCall: UserSessionsController#create calls 'flash.now' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [32, 57]:DuplicateMethodCall: UserSessionsController#create calls 'render :action => :index' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [192, 195]:DuplicateMethodCall: UserSessionsController#create_new_account calls 'borrower[:horizon_borrower_id]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [192, 197]:DuplicateMethodCall: UserSessionsController#create_new_account calls 'borrower[:jhed_lid]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [76, 76]:DuplicateMethodCall: UserSessionsController#shibboleth_create calls 'Rails.env' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [97, 98, 126]:DuplicateMethodCall: UserSessionsController#shibboleth_create calls 'borrower[:horizon_borrower_id]' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [111, 146]:DuplicateMethodCall: UserSessionsController#shibboleth_create calls 'redirect_to :action => :index, :referer => @referer' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [75, 85, 86, 87]:DuplicateMethodCall: UserSessionsController#shibboleth_create calls 'request.env' 4 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [219, 219, 220]:FeatureEnvy: UserSessionsController#log_error refers to 'exception' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [203]:MissingSafeMethod: UserSessionsController has missing safe method 'login!' [https://github.com/troessner/reek/blob/v6.0.1/docs/Missing-Safe-Method.md]
  [76, 108]:NilCheck: UserSessionsController#shibboleth_create performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [16]:TooManyStatements: UserSessionsController#create has approx 18 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [66]:TooManyStatements: UserSessionsController#shibboleth_create has approx 34 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [191]:UtilityFunction: UserSessionsController#create_new_account doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [177]:UtilityFunction: UserSessionsController#find_existing_account doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
app/controllers/users_controller.rb -- 26 warnings:
  [52, 55]:DuplicateMethodCall: UsersController#itemsout calls 'a.date_complete' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [59, 62]:DuplicateMethodCall: UsersController#itemsout calls 'a.date_initiated' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [52, 55]:DuplicateMethodCall: UsersController#itemsout calls 'b.date_complete' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [59, 62]:DuplicateMethodCall: UsersController#itemsout calls 'b.date_initiated' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [98, 100]:DuplicateMethodCall: UsersController#renew calls 'item_list.length == 1' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [98, 100, 102, 105]:DuplicateMethodCall: UsersController#renew calls 'item_list.length' 4 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [90, 91]:DuplicateMethodCall: UsersController#renew calls 'params[:item_out]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [98, 100, 102, 103, 105]:DuplicateMethodCall: UsersController#renew calls 'renewed.length' 5 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [39, 42]:DuplicateMethodCall: UsersController#update calls 'redirect_to :action => :show' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [140, 140]:FeatureEnvy: UsersController#add_solr_documents! refers to 'item' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [137, 139]:FeatureEnvy: UsersController#add_solr_documents! refers to 'transactions' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [122]:ManualDispatch: UsersController#show_connection_error manually dispatches method call [https://github.com/troessner/reek/blob/v6.0.1/docs/Manual-Dispatch.md]
  [136]:MissingSafeMethod: UsersController has missing safe method 'add_solr_documents!' [https://github.com/troessner/reek/blob/v6.0.1/docs/Missing-Safe-Method.md]
  [52, 52, 59, 59]:NilCheck: UsersController#itemsout performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [3]:TooManyInstanceVariables: UsersController has at least 12 instance variables [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Instance-Variables.md]
  [136]:TooManyStatements: UsersController#add_solr_documents! has approx 6 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [45]:TooManyStatements: UsersController#itemsout has approx 10 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [88]:TooManyStatements: UsersController#renew has approx 12 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [31]:TooManyStatements: UsersController#update has approx 7 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [121]:UncommunicativeParameterName: UsersController#show_connection_error has the parameter name 'e' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Parameter-Name.md]
  [140]:UncommunicativeVariableName: UsersController#add_solr_documents! has the variable name 'd' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [137]:UncommunicativeVariableName: UsersController#add_solr_documents! has the variable name 'i' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [48]:UncommunicativeVariableName: UsersController#itemsout has the variable name 'a' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [48]:UncommunicativeVariableName: UsersController#itemsout has the variable name 'b' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [69]:UncommunicativeVariableName: UsersController#itemsout has the variable name 'e' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [40]:UncommunicativeVariableName: UsersController#update has the variable name 'e' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
app/helpers/application_helper.rb -- 25 warnings:
  [92, 93]:DuplicateMethodCall: ApplicationHelper#bootstrap_pill_link_to calls 'html_options[:class]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [142, 144]:DuplicateMethodCall: ApplicationHelper#current_search_area calls 'p[:controller] == "multi_search"' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [134, 134, 136, 138, 140, 142, 144]:DuplicateMethodCall: ApplicationHelper#current_search_area calls 'p[:controller]' 7 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [142, 143]:DuplicateMethodCall: ApplicationHelper#current_search_area calls 'p[:engine]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [23, 26, 28]:DuplicateMethodCall: ApplicationHelper#remove_specified_facet_params calls 'facet.to_sym' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [26, 28]:DuplicateMethodCall: ApplicationHelper#remove_specified_facet_params calls 'my_params[:f]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [54, 56, 59]:DuplicateMethodCall: ApplicationHelper#render_kaminari_info calls 'entry_name.pluralize' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [54, 59]:DuplicateMethodCall: ApplicationHelper#render_kaminari_info calls 'h(entry_name.pluralize)' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [46, 53]:DuplicateMethodCall: ApplicationHelper#render_kaminari_info calls 'pageable_list.length' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [165, 165]:DuplicateMethodCall: ApplicationHelper#search_url_context calls 'params[:q]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [166, 166]:DuplicateMethodCall: ApplicationHelper#search_url_context calls 'params[:search_field]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [134, 134, 136, 138, 140, 142, 142, 143, 144]:FeatureEnvy: ApplicationHelper#current_search_area refers to 'p' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [106, 108, 111]:FeatureEnvy: ApplicationHelper#document_to_marc refers to 'document' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [111, 111, 112]:FeatureEnvy: ApplicationHelper#document_to_marc refers to 'e' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [39, 40, 41, 43, 46, 50, 50, 53]:FeatureEnvy: ApplicationHelper#render_kaminari_info refers to 'pageable_list' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [165, 165, 166, 166]:FeatureEnvy: ApplicationHelper#search_url_context refers to 'params' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [106]:ManualDispatch: ApplicationHelper#document_to_marc manually dispatches method call [https://github.com/troessner/reek/blob/v6.0.1/docs/Manual-Dispatch.md]
  [26, 28]:NestedIterators: ApplicationHelper#remove_specified_facet_params contains iterators nested 2 deep [https://github.com/troessner/reek/blob/v6.0.1/docs/Nested-Iterators.md]
  [133]:TooManyStatements: ApplicationHelper#current_search_area has approx 7 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [19]:TooManyStatements: ApplicationHelper#remove_specified_facet_params has approx 9 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [38]:TooManyStatements: ApplicationHelper#render_kaminari_info has approx 14 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [133]:UncommunicativeParameterName: ApplicationHelper#current_search_area has the parameter name 'p' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Parameter-Name.md]
  [109]:UncommunicativeVariableName: ApplicationHelper#document_to_marc has the variable name 'e' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [26]:UncommunicativeVariableName: ApplicationHelper#remove_specified_facet_params has the variable name 'h' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [28]:UncommunicativeVariableName: ApplicationHelper#remove_specified_facet_params has the variable name 'v' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
app/helpers/holdings_helper.rb -- 1 warning:
  [5]:ControlParameter: HoldingsHelper#run_type_label_for is controlled by argument 'run_type' [https://github.com/troessner/reek/blob/v6.0.1/docs/Control-Parameter.md]
app/helpers/local_catalog_helper.rb -- 16 warnings:
  [25, 27]:ControlParameter: LocalCatalogHelper#render_document_partial is controlled by argument 'action_name' [https://github.com/troessner/reek/blob/v6.0.1/docs/Control-Parameter.md]
  [112, 112, 113, 116, 116, 116]:DuplicateMethodCall: LocalCatalogHelper#holding_status_classes calls 'holding.status' 6 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [116, 116]:DuplicateMethodCall: LocalCatalogHelper#holding_status_classes calls 'holding.status.display_label' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [112, 113]:DuplicateMethodCall: LocalCatalogHelper#holding_status_classes calls 'holding.status.dlf_expanded_code' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [66, 67]:DuplicateMethodCall: LocalCatalogHelper#link_to_document calls 'opts[:counter]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [92, 92]:DuplicateMethodCall: LocalCatalogHelper#related_links_type calls 'document["format"]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [25, 27]:DuplicateMethodCall: LocalCatalogHelper#render_document_partial calls 'document_to_marc(document)' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [150, 152]:DuplicateMethodCall: LocalCatalogHelper#show_borrow_direct? calls 'h.collection' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [199, 200]:DuplicateMethodCall: LocalCatalogHelper#update_marc_for_citation calls 'record['264']' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [179, 179, 180, 180]:FeatureEnvy: LocalCatalogHelper#borrow_direct_search_url refers to 'ou_metadata' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [176]:ManualDispatch: LocalCatalogHelper#borrow_direct_search_url manually dispatches method call [https://github.com/troessner/reek/blob/v6.0.1/docs/Manual-Dispatch.md]
  [145, 147]:ManualDispatch: LocalCatalogHelper#show_borrow_direct? manually dispatches method call [https://github.com/troessner/reek/blob/v6.0.1/docs/Manual-Dispatch.md]
  [48]:TooManyStatements: LocalCatalogHelper#document_heading has approx 6 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [65]:TooManyStatements: LocalCatalogHelper#link_to_document has approx 7 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [35]:UncommunicativeMethodName: LocalCatalogHelper#link_out_to_856 has the name 'link_out_to_856' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Method-Name.md]
  [148]:UncommunicativeVariableName: LocalCatalogHelper#show_borrow_direct? has the variable name 'h' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
app/helpers/marc_heading_helper.rb -- 22 warnings:
  [58, 62]:DuplicateMethodCall: MarcHeadingHelper#heading_linked_titles calls 'field.find_all' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [59, 63]:DuplicateMethodCall: MarcHeadingHelper#heading_linked_titles calls 'subfield.code' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [60, 64]:DuplicateMethodCall: MarcHeadingHelper#heading_linked_titles calls 'sv.value' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [167, 171]:DuplicateMethodCall: MarcHeadingHelper#join_marc_lines calls 'options[:seperator]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [236, 238]:DuplicateMethodCall: MarcHeadingHelper#shortened_contents calls 'contents_presenter.lines' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [215, 218]:DuplicateMethodCall: MarcHeadingHelper#shortened_summary calls 'summary_presenter.lines' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [136, 139, 143]:FeatureEnvy: MarcHeadingHelper#heading_main_entry refers to 'line' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [157, 161]:FeatureEnvy: MarcHeadingHelper#marc_presenter refers to 'descr' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [241, 242, 243, 244]:FeatureEnvy: MarcHeadingHelper#shortened_contents refers to 'text' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [221, 222, 223]:FeatureEnvy: MarcHeadingHelper#shortened_summary refers to 'text' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [58, 62]:NestedIterators: MarcHeadingHelper#heading_linked_titles contains iterators nested 2 deep [https://github.com/troessner/reek/blob/v6.0.1/docs/Nested-Iterators.md]
  [157, 161]:NilCheck: MarcHeadingHelper#marc_presenter performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [179]:NilCheck: MarcHeadingHelper#render_marc_line performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [54]:TooManyStatements: MarcHeadingHelper#heading_linked_titles has approx 10 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [187]:TooManyStatements: MarcHeadingHelper#marc_index_title has approx 8 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [231]:TooManyStatements: MarcHeadingHelper#shortened_contents has approx 9 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [210]:TooManyStatements: MarcHeadingHelper#shortened_summary has approx 7 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [28, 40]:UncommunicativeVariableName: MarcHeadingHelper has the variable name 'a' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [203]:UncommunicativeVariableName: MarcHeadingHelper#all_subject_lines has the variable name 'p' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [122]:UncommunicativeVariableName: MarcHeadingHelper#heading_stmt_resp has the variable name 'f' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [171]:UncommunicativeVariableName: MarcHeadingHelper#join_marc_lines has the variable name 'l' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [158]:UncommunicativeVariableName: MarcHeadingHelper#marc_presenter has the variable name 'h' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
app/helpers/multi_search_helper.rb -- 5 warnings:
  [23, 29]:DuplicateMethodCall: MultiSearchHelper#bento_pagination_info calls 'pagination.count_records' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [8, 8, 8]:DuplicateMethodCall: MultiSearchHelper#more_link calls 'bento_engine.configuration' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [8, 8]:DuplicateMethodCall: MultiSearchHelper#more_link calls 'bento_engine.configuration.id' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [23, 29, 29, 29]:FeatureEnvy: MultiSearchHelper#bento_pagination_info refers to 'pagination' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [8, 8, 8]:FeatureEnvy: MultiSearchHelper#more_link refers to 'bento_engine' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
app/helpers/requests_helper.rb -- 12 warnings:
  [48, 49]:DuplicateMethodCall: RequestsHelper#request_done_path calls '@ils_request.bib_id' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [34, 38]:DuplicateMethodCall: RequestsHelper#request_done_path calls 'params["referer"]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [45, 45]:DuplicateMethodCall: RequestsHelper#request_done_path calls 'request.headers' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [68, 68]:DuplicateMethodCall: RequestsHelper#special_collection_request_url calls 'document['author_display']' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [70, 70]:DuplicateMethodCall: RequestsHelper#special_collection_request_url calls 'document['pub_date']' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [69, 69]:DuplicateMethodCall: RequestsHelper#special_collection_request_url calls 'document['published_display']' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [63, 63]:DuplicateMethodCall: RequestsHelper#special_collection_request_url calls 'holding.copy_string' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [66, 67]:DuplicateMethodCall: RequestsHelper#special_collection_request_url calls 'holding.localInfo' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [33]:TooManyStatements: RequestsHelper#request_done_path has approx 9 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [56]:TooManyStatements: RequestsHelper#special_collection_request_url has approx 15 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [44]:UncommunicativeVariableName: RequestsHelper#request_done_path has the variable name 'e' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [38]:UncommunicativeVariableName: RequestsHelper#request_done_path has the variable name 'u' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
app/helpers/users_helper.rb -- 3 warnings:
  [11, 12]:DuplicateMethodCall: UsersHelper#relative_due_date calls 'Time.now' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [13, 15, 17]:FeatureEnvy: UsersHelper#relative_due_date refers to 'date_or_time' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [7]:TooManyStatements: UsersHelper#relative_due_date has approx 9 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
app/models/application_record.rb -- 1 warning:
  [1]:IrresponsibleModule: ApplicationRecord has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
app/models/bento_article_decorator.rb -- 9 warnings:
  [60, 78]:DuplicateMethodCall: BentoArticleDecorator#render_authors_list calls 'self.authors' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [109, 112]:DuplicateMethodCall: BentoArticleDecorator#render_source_info calls 'parts << ". "' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [110, 111]:DuplicateMethodCall: BentoArticleDecorator#render_source_info calls 'self.publisher' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [102, 107]:DuplicateMethodCall: BentoArticleDecorator#render_source_info calls 'self.source_title' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [89, 91]:DuplicateMethodCall: BentoArticleDecorator#source_title_openurl_link calls 'self.issn' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [91, 93]:DuplicateMethodCall: BentoArticleDecorator#source_title_openurl_link calls 'self.source_title' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [16]:TooManyStatements: BentoArticleDecorator#other_links has approx 8 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [57]:TooManyStatements: BentoArticleDecorator#render_authors_list has approx 9 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [99]:TooManyStatements: BentoArticleDecorator#render_source_info has approx 9 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
app/models/holding.rb -- 22 warnings:
  [7]:Attribute: Holding#call_number is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [7]:Attribute: Holding#collection is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [7]:Attribute: Holding#copy_string is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [9]:Attribute: Holding#due_date is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [8]:Attribute: Holding#id is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [7]:Attribute: Holding#location is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [7]:Attribute: Holding#notes is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [7]:Attribute: Holding#run_statements is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [10]:Attribute: Holding#staff_notes_html is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [7]:Attribute: Holding#status is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [87]:Attribute: Holding::KeyLabel#display_label is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [87]:Attribute: Holding::KeyLabel#internal_code is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [74]:Attribute: Holding::Run#display_statement is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [74]:Attribute: Holding::Run#marc_type is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [74]:Attribute: Holding::Run#note is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [64]:Attribute: Holding::Status#display_label is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [64]:Attribute: Holding::Status#dlf_expanded_code is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [64]:Attribute: Holding::Status#internal_code is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [15, 43, 46]:ClassVariable: Holding declares the class variable '@@special_collections' [https://github.com/troessner/reek/blob/v6.0.1/docs/Class-Variable.md]
  [18]:ClassVariable: Holding declares the class variable '@@stackmap_collections' [https://github.com/troessner/reek/blob/v6.0.1/docs/Class-Variable.md]
  [6]:TooManyInstanceVariables: Holding has at least 9 instance variables [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Instance-Variables.md]
  [27]:UncommunicativeVariableName: Holding has the variable name '@localInfo' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
app/models/jh_sms_send.rb -- 6 warnings:
  [22, 22]:DuplicateMethodCall: JhSmsSend#sms_record calls 'document.to_semantic_values' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [22, 22]:DuplicateMethodCall: JhSmsSend#sms_record calls 'document.to_semantic_values[:title]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [24, 24]:DuplicateMethodCall: JhSmsSend#sms_record calls 'holding.call_number' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [23, 23]:DuplicateMethodCall: JhSmsSend#sms_record calls 'holding.collection' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [10, 25]:DuplicateMethodCall: JhSmsSend#sms_record calls 'options[:url_gen_params]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [9]:TooManyStatements: JhSmsSend#sms_record has approx 9 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
app/models/reserves_course.rb -- 2 warnings:
  [1]:IrresponsibleModule: ReservesCourse has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [8]:UncommunicativeVariableName: ReservesCourse has the variable name 'l' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
app/models/reserves_course_bib.rb -- 1 warning:
  [1]:IrresponsibleModule: ReservesCourseBib has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
app/models/reserves_course_instructor.rb -- 1 warning:
  [1]:IrresponsibleModule: ReservesCourseInstructor has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
app/models/search_builder.rb -- 1 warning:
  [2]:IrresponsibleModule: SearchBuilder has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
app/models/solr_document.rb -- 2 warnings:
  [5]:IrresponsibleModule: SolrDocument has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [22]:TooManyStatements: SolrDocument::LoadMarcEscapeFix#load_marc has approx 6 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
app/models/stackmap_fetcher.rb -- 21 warnings:
  [76]:Attribute: StackmapFetcher::MapInfo#error is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [76]:Attribute: StackmapFetcher::MapInfo#floor_name is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [76]:Attribute: StackmapFetcher::MapInfo#map_url is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [76]:Attribute: StackmapFetcher::MapInfo#range_name is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [76]:Attribute: StackmapFetcher::MapInfo#status is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [13, 16, 26]:ClassVariable: StackmapFetcher declares the class variable '@@stackmap_collections' [https://github.com/troessner/reek/blob/v6.0.1/docs/Class-Variable.md]
  [31, 34]:DuplicateMethodCall: StackmapFetcher#fetch_map_info calls '@holding.call_number' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [31, 35]:DuplicateMethodCall: StackmapFetcher#fetch_map_info calls '@holding.collection' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [31, 35]:DuplicateMethodCall: StackmapFetcher#fetch_map_info calls '@holding.collection.internal_code' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [45, 46]:DuplicateMethodCall: StackmapFetcher#fetch_map_info calls 'response.status' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [56, 58, 59, 60, 61]:DuplicateMethodCall: StackmapFetcher#fetch_map_info calls 'stackmap["results"]' 5 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [56, 58, 59, 60, 61]:DuplicateMethodCall: StackmapFetcher#fetch_map_info calls 'stackmap["results"]["maps"]' 5 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [58, 59, 60]:DuplicateMethodCall: StackmapFetcher#fetch_map_info calls 'stackmap["results"]["maps"].first' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [56, 61]:DuplicateMethodCall: StackmapFetcher#fetch_map_info calls 'stackmap["results"]["maps"].size' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [52, 53, 55, 57]:DuplicateMethodCall: StackmapFetcher#fetch_map_info calls 'stackmap["stat"]' 4 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [25, 26, 26]:DuplicateMethodCall: StackmapFetcher#map_available? calls '@holding.collection' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [26, 26]:DuplicateMethodCall: StackmapFetcher#map_available? calls '@holding.collection.internal_code' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [52, 53, 54, 55, 56, 57, 58, 59, 60, 61]:FeatureEnvy: StackmapFetcher#fetch_map_info refers to 'stackmap' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [4]:IrresponsibleModule: StackmapFetcher has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [75]:IrresponsibleModule: StackmapFetcher::MapInfo has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [30]:TooManyStatements: StackmapFetcher#fetch_map_info has approx 15 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
app/models/yboss_spell.rb -- 32 warnings:
  [188]:Attribute: YBossSpell::OAuth#base_str is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [188]:Attribute: YBossSpell::OAuth#callback_url is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [187]:Attribute: YBossSpell::OAuth#consumer_key is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [187]:Attribute: YBossSpell::OAuth#consumer_secret is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [188]:Attribute: YBossSpell::OAuth#oauth_version is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [188]:Attribute: YBossSpell::OAuth#params is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [187]:Attribute: YBossSpell::OAuth#req_method is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [188]:Attribute: YBossSpell::OAuth#req_url is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [188]:Attribute: YBossSpell::OAuth#sig_method is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [187]:Attribute: YBossSpell::OAuth#token is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [187]:Attribute: YBossSpell::OAuth#token_secret is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [37, 40, 41, 42]:ClassVariable: YBossSpell declares the class variable '@@timeout' [https://github.com/troessner/reek/blob/v6.0.1/docs/Class-Variable.md]
  [75, 81]:DuplicateMethodCall: YBossSpell#get_suggestion_from_response calls 'hash.inspect' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [74, 78]:DuplicateMethodCall: YBossSpell#get_suggestion_from_response calls 'hash["bossresponse"]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [74, 78]:DuplicateMethodCall: YBossSpell#get_suggestion_from_response calls 'hash["bossresponse"].try' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [252, 253]:DuplicateMethodCall: YBossSpell::OAuth#sign calls 'parsed_url.query' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [74, 75, 78, 81]:FeatureEnvy: YBossSpell#get_suggestion_from_response refers to 'hash' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [286]:IrresponsibleModule: YBossSpell::Error has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [103]:NilCheck: YBossSpell#build_query performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [185]:TooManyInstanceVariables: YBossSpell::OAuth has at least 11 instance variables [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Instance-Variables.md]
  [51]:TooManyStatements: YBossSpell#get_suggestion has approx 11 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [73]:TooManyStatements: YBossSpell#get_suggestion_from_response has approx 9 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [239]:TooManyStatements: YBossSpell::OAuth#sign has approx 11 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [103, 103]:UncommunicativeVariableName: YBossSpell#build_query has the variable name 'k' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [103, 103]:UncommunicativeVariableName: YBossSpell#build_query has the variable name 'v' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [65]:UncommunicativeVariableName: YBossSpell#get_suggestion has the variable name 'e' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [74, 78]:UncommunicativeVariableName: YBossSpell#get_suggestion_from_response has the variable name 'h' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [253]:UncommunicativeVariableName: YBossSpell::OAuth#sign has the variable name 'k' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [253]:UncommunicativeVariableName: YBossSpell::OAuth#sign has the variable name 'v' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [111]:UtilityFunction: YBossSpell#extract_suggestion doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [151]:UtilityFunction: YBossSpell#pre_escape_query doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [207]:UtilityFunction: YBossSpell::OAuth#percent_encode doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
app/search_builder_filters/home_page_solr_params_logic.rb -- 1 warning:
  [18, 18]:DuplicateMethodCall: HomePageSolrParamsLogic#home_page_solr_params calls 'blacklight_params[:format]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
app/search_builder_filters/journal_title_apply_limit.rb -- 4 warnings:
  [14, 15]:DuplicateMethodCall: JournalTitleApplyLimit#journal_title_apply_limit calls 'solr_params[:fq]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [14, 15]:FeatureEnvy: JournalTitleApplyLimit#journal_title_apply_limit refers to 'solr_params' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [1]:IrresponsibleModule: JournalTitleApplyLimit has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [4]:UncommunicativeVariableName: JournalTitleApplyLimit#self.included has the variable name 'i' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
app/search_builder_filters/unstem_solr_params.rb -- 1 warning:
  [7]:UncommunicativeVariableName: UnstemSolrParams#self.included has the variable name 'i' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
test/application_system_test_case.rb -- 1 warning:
  [22]:IrresponsibleModule: ApplicationSystemTestCase has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
test/system/catalogs_test.rb -- 1 warning:
  [3]:IrresponsibleModule: CatalogsTest has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
test/system/homepage_test.rb -- 1 warning:
  [3]:IrresponsibleModule: HomepageTest has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
test/test_helper.rb -- 1 warning:
  [5]:IrresponsibleModule: ActiveSupport::TestCase has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
config/application.rb -- 1 warning:
  [24]:IrresponsibleModule: Catalyst::Application has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
config/initializers/bento_search.rb -- 2 warnings:
  [64, 66]:DuplicateMethodCall: GoogleBooksDecorator#other_links calls 'custom_data[:viewability]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [57]:TooManyStatements: GoogleBooksDecorator#other_links has approx 6 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
config/initializers/logging.rb -- 4 warnings:
  [12, 13, 13]:DuplicateMethodCall: ActionView::LogSubscriber#render_template calls 'event.payload' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [13, 13]:DuplicateMethodCall: ActionView::LogSubscriber#render_template calls 'event.payload[:layout]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [12, 13, 13, 14]:FeatureEnvy: ActionView::LogSubscriber#render_template refers to 'event' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [10]:IrresponsibleModule: ActionView::LogSubscriber has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
marc_display/app/helpers/marc_display_helper.rb -- 6 warnings:
  [1]:IrresponsibleModule: MarcDisplayHelper has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [20]:UncommunicativeMethodName: MarcDisplayHelper#link_out_to_856 has the name 'link_out_to_856' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Method-Name.md]
  [25]:UncommunicativeParameterName: MarcDisplayHelper#split_505_contents has the parameter name 'marc505' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Parameter-Name.md]
  [13]:UtilityFunction: MarcDisplayHelper#linked_marc_fields doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [25]:UtilityFunction: MarcDisplayHelper#split_505_contents doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [37]:UtilityFunction: MarcDisplayHelper#url_display_as doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
marc_display/app/helpers/marc_display_logic.rb -- 87 warnings:
  [283, 314, 396, 434, 485]:DataClump: MarcDisplayLogic takes parameters ['hash', 'link', 'options'] to 5 methods [https://github.com/troessner/reek/blob/v6.0.1/docs/Data-Clump.md]
  [350, 356]:DuplicateMethodCall: MarcDisplayLogic#extract_7xx_pieces calls 'marc_line.tag' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [353, 359, 360]:DuplicateMethodCall: MarcDisplayLogic#extract_7xx_pieces calls 'marc_line['a']' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [357, 358, 361]:DuplicateMethodCall: MarcDisplayLogic#extract_7xx_pieces calls 'marc_line['t']' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [364, 364]:DuplicateMethodCall: MarcDisplayLogic#extract_7xx_pieces calls 'marc_line['x']' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [365, 365]:DuplicateMethodCall: MarcDisplayLogic#extract_7xx_pieces calls 'marc_line['z']' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [415, 416]:DuplicateMethodCall: MarcDisplayLogic#link_7xx calls 'hash[:q]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [413, 415, 415]:DuplicateMethodCall: MarcDisplayLogic#link_7xx calls 'parts[:author]' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [404, 408]:DuplicateMethodCall: MarcDisplayLogic#link_7xx calls 'parts[:isbn]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [410, 411]:DuplicateMethodCall: MarcDisplayLogic#link_7xx calls 'parts[:issn]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [413, 416, 416]:DuplicateMethodCall: MarcDisplayLogic#link_7xx calls 'parts[:title]' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [328, 331]:DuplicateMethodCall: MarcDisplayLogic#link_add_main_entry calls 'presenter.lines' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [451, 453]:DuplicateMethodCall: MarcDisplayLogic#link_cql_7xx calls 'options[:cql_author]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [462, 463]:DuplicateMethodCall: MarcDisplayLogic#link_cql_7xx calls 'options[:cql_isbn]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [458, 459]:DuplicateMethodCall: MarcDisplayLogic#link_cql_7xx calls 'options[:cql_issn]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [466, 467]:DuplicateMethodCall: MarcDisplayLogic#link_cql_7xx calls 'options[:cql_lccn]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [470, 471]:DuplicateMethodCall: MarcDisplayLogic#link_cql_7xx calls 'options[:cql_oclcnum]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [451, 454]:DuplicateMethodCall: MarcDisplayLogic#link_cql_7xx calls 'options[:cql_title]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [451, 453, 453]:DuplicateMethodCall: MarcDisplayLogic#link_cql_7xx calls 'parts[:author]' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [462, 463]:DuplicateMethodCall: MarcDisplayLogic#link_cql_7xx calls 'parts[:isbn]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [458, 459]:DuplicateMethodCall: MarcDisplayLogic#link_cql_7xx calls 'parts[:issn]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [466, 467]:DuplicateMethodCall: MarcDisplayLogic#link_cql_7xx calls 'parts[:lccn]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [470, 471]:DuplicateMethodCall: MarcDisplayLogic#link_cql_7xx calls 'parts[:oclcnum]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [451, 454, 454]:DuplicateMethodCall: MarcDisplayLogic#link_cql_7xx calls 'parts[:title]' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [138, 138, 138, 140, 140, 140]:DuplicateMethodCall: MarcDisplayLogic#prefix_heading calls 'field.tag' 6 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [131, 132]:DuplicateMethodCall: MarcDisplayLogic#prefix_heading calls 'options[:controlled_relator]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [130, 130]:DuplicateMethodCall: MarcDisplayLogic#prefix_heading calls 'options[:materials]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [134, 135]:DuplicateMethodCall: MarcDisplayLogic#prefix_heading calls 'options[:uncontrolled_relator]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [195, 199, 204, 204]:DuplicateMethodCall: MarcDisplayLogic#prefix_with_3 calls 'field['3']' 4 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [194, 196]:DuplicateMethodCall: MarcDisplayLogic#prefix_with_3 calls 'options[:prefix]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [518, 523]:DuplicateMethodCall: MarcDisplayLogic::MarcLogicProcs#marc_logic calls 'MarcDisplayLogic::DisplaySingleton.instance' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [518, 523]:DuplicateMethodCall: MarcDisplayLogic::MarcLogicProcs#marc_logic calls 'MarcDisplayLogic::DisplaySingleton.instance.method(method_ref)' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [404, 408, 410, 411, 413, 413, 415, 415, 416, 416]:FeatureEnvy: MarcDisplayLogic#link_7xx refers to 'parts' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [451, 451, 453, 453, 454, 454, 458, 459, 462, 463, 466, 467, 470, 471]:FeatureEnvy: MarcDisplayLogic#link_cql_7xx refers to 'parts' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [130, 132, 135, 138, 138, 138, 139, 140, 140, 140]:FeatureEnvy: MarcDisplayLogic#prefix_heading refers to 'field' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [194, 195, 196, 199, 201]:FeatureEnvy: MarcDisplayLogic#prefix_with_3 refers to 'options' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [196, 200, 201, 204, 206]:FeatureEnvy: MarcDisplayLogic#prefix_with_3 refers to 'value' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [508]:IrresponsibleModule: MarcDisplayLogic::MarcLogicProcs has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [266]:NestedIterators: MarcDisplayLogic#map_prefix_lcsh contains iterators nested 2 deep [https://github.com/troessner/reek/blob/v6.0.1/docs/Nested-Iterators.md]
  [257]:NilCheck: MarcDisplayLogic#delete_if_no_t performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [42]:NilCheck: MarcDisplayLogic#format_strip_edge_punctuation performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [347]:TooManyStatements: MarcDisplayLogic#extract_7xx_pieces has approx 19 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [65]:TooManyStatements: MarcDisplayLogic#format_aacr2_abbrev has approx 13 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [51]:TooManyStatements: MarcDisplayLogic#format_instr_048 has approx 7 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [396]:TooManyStatements: MarcDisplayLogic#link_7xx has approx 11 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [314]:TooManyStatements: MarcDisplayLogic#link_add_main_entry has approx 8 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [434]:TooManyStatements: MarcDisplayLogic#link_cql_7xx has approx 16 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [283]:TooManyStatements: MarcDisplayLogic#link_lcsh_subd has approx 10 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [172]:TooManyStatements: MarcDisplayLogic#prefix_024 has approx 7 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [227]:TooManyStatements: MarcDisplayLogic#prefix_780 has approx 8 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [212]:TooManyStatements: MarcDisplayLogic#prefix_785 has approx 10 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [124]:TooManyStatements: MarcDisplayLogic#prefix_heading has approx 12 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [192]:TooManyStatements: MarcDisplayLogic#prefix_with_3 has approx 7 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [51]:UncommunicativeMethodName: MarcDisplayLogic#format_instr_048 has the name 'format_instr_048' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Method-Name.md]
  [172]:UncommunicativeMethodName: MarcDisplayLogic#prefix_024 has the name 'prefix_024' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Method-Name.md]
  [165]:UncommunicativeMethodName: MarcDisplayLogic#prefix_246 has the name 'prefix_246' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Method-Name.md]
  [241]:UncommunicativeMethodName: MarcDisplayLogic#prefix_521 has the name 'prefix_521' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Method-Name.md]
  [248]:UncommunicativeMethodName: MarcDisplayLogic#prefix_545 has the name 'prefix_545' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Method-Name.md]
  [155]:UncommunicativeMethodName: MarcDisplayLogic#prefix_760 has the name 'prefix_760' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Method-Name.md]
  [159]:UncommunicativeMethodName: MarcDisplayLogic#prefix_762 has the name 'prefix_762' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Method-Name.md]
  [227]:UncommunicativeMethodName: MarcDisplayLogic#prefix_780 has the name 'prefix_780' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Method-Name.md]
  [212]:UncommunicativeMethodName: MarcDisplayLogic#prefix_785 has the name 'prefix_785' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Method-Name.md]
  [192]:UncommunicativeMethodName: MarcDisplayLogic#prefix_with_3 has the name 'prefix_with_3' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Method-Name.md]
  [485]:UnusedParameters: MarcDisplayLogic#clean_up_8xx_d has unused parameter 'link' [https://github.com/troessner/reek/blob/v6.0.1/docs/Unused-Parameters.md]
  [485]:UnusedParameters: MarcDisplayLogic#clean_up_8xx_d has unused parameter 'options' [https://github.com/troessner/reek/blob/v6.0.1/docs/Unused-Parameters.md]
  [283]:UnusedParameters: MarcDisplayLogic#link_lcsh_subd has unused parameter 'options' [https://github.com/troessner/reek/blob/v6.0.1/docs/Unused-Parameters.md]
  [485]:UtilityFunction: MarcDisplayLogic#clean_up_8xx_d doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [256]:UtilityFunction: MarcDisplayLogic#delete_if_no_t doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [347]:UtilityFunction: MarcDisplayLogic#extract_7xx_pieces doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [90]:UtilityFunction: MarcDisplayLogic#format_245h doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [33]:UtilityFunction: MarcDisplayLogic#format_260c doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [65]:UtilityFunction: MarcDisplayLogic#format_aacr2_abbrev doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [51]:UtilityFunction: MarcDisplayLogic#format_instr_048 doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [100]:UtilityFunction: MarcDisplayLogic#format_lccn_normalize doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [82]:UtilityFunction: MarcDisplayLogic#format_marc_lang doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [37]:UtilityFunction: MarcDisplayLogic#format_strip_edge_punctuation doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [94]:UtilityFunction: MarcDisplayLogic#format_url_to_anchor doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [314]:UtilityFunction: MarcDisplayLogic#link_add_main_entry doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [283]:UtilityFunction: MarcDisplayLogic#link_lcsh_subd doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [172]:UtilityFunction: MarcDisplayLogic#prefix_024 doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [241]:UtilityFunction: MarcDisplayLogic#prefix_521 doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [248]:UtilityFunction: MarcDisplayLogic#prefix_545 doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [155]:UtilityFunction: MarcDisplayLogic#prefix_760 doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [159]:UtilityFunction: MarcDisplayLogic#prefix_762 doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [227]:UtilityFunction: MarcDisplayLogic#prefix_780 doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [212]:UtilityFunction: MarcDisplayLogic#prefix_785 doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [528]:UtilityFunction: MarcDisplayLogic::MarcLogicProcs#marc_logic_map doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
marc_display/app/models/marc_display/field_presenter.rb -- 42 warnings:
  [47]:Attribute: MarcDisplay::FieldPresenter#config is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [47]:Attribute: MarcDisplay::FieldPresenter#lines is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [47]:Attribute: MarcDisplay::FieldPresenter#marc is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [155, 155]:DuplicateMethodCall: MarcDisplay::FieldPresenter#css_classes calls '@config[:css_classes]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [156, 156]:DuplicateMethodCall: MarcDisplay::FieldPresenter#css_classes calls '@config[:id]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [74, 79]:DuplicateMethodCall: MarcDisplay::FieldPresenter#initialize calls 'fields.collect' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [109, 110]:DuplicateMethodCall: MarcDisplay::FieldPresenter#initialize calls 'line.marc_field' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [65, 65, 67, 67]:DuplicateMethodCall: MarcDisplay::FieldPresenter#initialize calls 'spec[:indicators]' 4 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [65, 65]:DuplicateMethodCall: MarcDisplay::FieldPresenter#initialize calls 'spec[:indicators][0]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [67, 67]:DuplicateMethodCall: MarcDisplay::FieldPresenter#initialize calls 'spec[:indicators][1]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [82, 83]:DuplicateMethodCall: MarcDisplay::FieldPresenter#initialize calls 'spec[:solr_field]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [61, 63, 63]:DuplicateMethodCall: MarcDisplay::FieldPresenter#initialize calls 'spec[:tag]' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [61, 63]:DuplicateMethodCall: MarcDisplay::FieldPresenter#initialize calls 'spec[:tag].nil?' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [194, 194]:DuplicateMethodCall: MarcDisplay::FieldPresenter#normalize_definition calls '$3[0..0]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [195, 195]:DuplicateMethodCall: MarcDisplay::FieldPresenter#normalize_definition calls '$3[1..1]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [190, 190, 192]:DuplicateMethodCall: MarcDisplay::FieldPresenter#normalize_definition calls 'el[:load_marc]' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [199, 200]:DuplicateMethodCall: MarcDisplay::FieldPresenter#normalize_definition calls 'el[:subfields]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [219, 220]:DuplicateMethodCall: MarcDisplay::FieldPresenter#self.find_linked_fields calls 'f['6']' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [120, 124]:FeatureEnvy: MarcDisplay::FieldPresenter#lines_values_uniq! refers to 'hash' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [44]:InstanceVariableAssumption: MarcDisplay::FieldPresenter assumes too much for instance variable '@_classes' [https://github.com/troessner/reek/blob/v6.0.1/docs/Instance-Variable-Assumption.md]
  [44]:InstanceVariableAssumption: MarcDisplay::FieldPresenter assumes too much for instance variable '@_label' [https://github.com/troessner/reek/blob/v6.0.1/docs/Instance-Variable-Assumption.md]
  [44]:InstanceVariableAssumption: MarcDisplay::FieldPresenter assumes too much for instance variable '@_should_display' [https://github.com/troessner/reek/blob/v6.0.1/docs/Instance-Variable-Assumption.md]
  [3]:IrresponsibleModule: MarcDisplay::DiscoverCallable has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [44]:IrresponsibleModule: MarcDisplay::FieldPresenter has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [116]:MissingSafeMethod: MarcDisplay::FieldPresenter has missing safe method 'lines_values_uniq!' [https://github.com/troessner/reek/blob/v6.0.1/docs/Missing-Safe-Method.md]
  [62, 74, 79, 87]:NestedIterators: MarcDisplay::FieldPresenter#initialize contains iterators nested 2 deep [https://github.com/troessner/reek/blob/v6.0.1/docs/Nested-Iterators.md]
  [119]:NestedIterators: MarcDisplay::FieldPresenter#lines_values_uniq! contains iterators nested 2 deep [https://github.com/troessner/reek/blob/v6.0.1/docs/Nested-Iterators.md]
  [22, 26, 28]:NilCheck: MarcDisplay::ConfigInvokeMapping#load_value_from_config performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [61, 63, 65, 67]:NilCheck: MarcDisplay::FieldPresenter#initialize performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [182]:NilCheck: MarcDisplay::FieldPresenter#normalize_definition performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [214]:NilCheck: MarcDisplay::FieldPresenter#self.find_linked_fields performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [44]:TooManyInstanceVariables: MarcDisplay::FieldPresenter has at least 6 instance variables [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Instance-Variables.md]
  [17]:TooManyStatements: MarcDisplay::ConfigInvokeMapping#load_value_from_config has approx 11 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [116]:TooManyStatements: MarcDisplay::FieldPresenter#lines_values_uniq! has approx 7 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [181]:TooManyStatements: MarcDisplay::FieldPresenter#normalize_definition has approx 11 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [97]:UncommunicativeVariableName: MarcDisplay::FieldPresenter#initialize has the variable name 'l' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [87]:UncommunicativeVariableName: MarcDisplay::FieldPresenter#initialize has the variable name 'v' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [119]:UncommunicativeVariableName: MarcDisplay::FieldPresenter#lines_values_uniq! has the variable name 'p' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [217]:UncommunicativeVariableName: MarcDisplay::FieldPresenter#self.find_linked_fields has the variable name 'f' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [213]:UnusedParameters: MarcDisplay::FieldPresenter#self.find_linked_fields has unused parameter 'options' [https://github.com/troessner/reek/blob/v6.0.1/docs/Unused-Parameters.md]
  [4]:UtilityFunction: MarcDisplay::DiscoverCallable#callable? doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [181]:UtilityFunction: MarcDisplay::FieldPresenter#normalize_definition doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
marc_display/app/models/marc_display/line.rb -- 20 warnings:
  [9]:Attribute: MarcDisplay::Line#marc_field is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [9]:Attribute: MarcDisplay::Line#marc_record is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [9]:Attribute: MarcDisplay::Line#raw_data is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [78, 78]:DuplicateMethodCall: MarcDisplay::Line#css_classes calls '@config_hash[:css_classes]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [86, 86]:DuplicateMethodCall: MarcDisplay::Line#link calls '@data_spec[:link]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [85, 94]:DuplicateMethodCall: MarcDisplay::Line#link calls '@link == false' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [39, 39]:DuplicateMethodCall: MarcDisplay::Line#map_key calls '@marc_field.tag' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [23, 26]:DuplicateMethodCall: MarcDisplay::Line#parts calls '@data_spec[:subfields]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [5]:InstanceVariableAssumption: MarcDisplay::Line assumes too much for instance variable '@_classes' [https://github.com/troessner/reek/blob/v6.0.1/docs/Instance-Variable-Assumption.md]
  [5]:InstanceVariableAssumption: MarcDisplay::Line assumes too much for instance variable '@_delete_if_filter' [https://github.com/troessner/reek/blob/v6.0.1/docs/Instance-Variable-Assumption.md]
  [5]:InstanceVariableAssumption: MarcDisplay::Line assumes too much for instance variable '@_label' [https://github.com/troessner/reek/blob/v6.0.1/docs/Instance-Variable-Assumption.md]
  [5]:InstanceVariableAssumption: MarcDisplay::Line assumes too much for instance variable '@_prefix' [https://github.com/troessner/reek/blob/v6.0.1/docs/Instance-Variable-Assumption.md]
  [5]:InstanceVariableAssumption: MarcDisplay::Line assumes too much for instance variable '@link' [https://github.com/troessner/reek/blob/v6.0.1/docs/Instance-Variable-Assumption.md]
  [5]:InstanceVariableAssumption: MarcDisplay::Line assumes too much for instance variable '@parts' [https://github.com/troessner/reek/blob/v6.0.1/docs/Instance-Variable-Assumption.md]
  [86]:NilCheck: MarcDisplay::Line#link performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [23]:NilCheck: MarcDisplay::Line#parts performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [5]:TooManyInstanceVariables: MarcDisplay::Line has at least 11 instance variables [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Instance-Variables.md]
  [83]:TooManyStatements: MarcDisplay::Line#link has approx 6 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [20]:TooManyStatements: MarcDisplay::Line#parts has approx 7 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [98]:UncommunicativeVariableName: MarcDisplay::Line#join has the variable name 'p' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
marc_display/app/models/marc_display/line_part.rb -- 11 warnings:
  [8]:Attribute: MarcDisplay::LinePart#marc_field is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [8]:Attribute: MarcDisplay::LinePart#marc_subfield is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [85, 85]:DuplicateMethodCall: MarcDisplay::LinePart#css_classes calls '@config_hash[:css_classes]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [33, 38]:DuplicateMethodCall: MarcDisplay::LinePart#map_key calls '@marc_field.tag' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [35, 38]:DuplicateMethodCall: MarcDisplay::LinePart#map_key calls '@marc_subfield.code' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [4]:InstanceVariableAssumption: MarcDisplay::LinePart assumes too much for instance variable '@_classes' [https://github.com/troessner/reek/blob/v6.0.1/docs/Instance-Variable-Assumption.md]
  [4]:InstanceVariableAssumption: MarcDisplay::LinePart assumes too much for instance variable '@_formatted_value' [https://github.com/troessner/reek/blob/v6.0.1/docs/Instance-Variable-Assumption.md]
  [4]:InstanceVariableAssumption: MarcDisplay::LinePart assumes too much for instance variable '@_label' [https://github.com/troessner/reek/blob/v6.0.1/docs/Instance-Variable-Assumption.md]
  [4]:InstanceVariableAssumption: MarcDisplay::LinePart assumes too much for instance variable '@_prefix' [https://github.com/troessner/reek/blob/v6.0.1/docs/Instance-Variable-Assumption.md]
  [4]:InstanceVariableAssumption: MarcDisplay::LinePart assumes too much for instance variable '@_raw_prefix' [https://github.com/troessner/reek/blob/v6.0.1/docs/Instance-Variable-Assumption.md]
  [4]:TooManyInstanceVariables: MarcDisplay::LinePart has at least 10 instance variables [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Instance-Variables.md]
marc_display/app/models/marc_display/link.rb -- 16 warnings:
  [7]:Attribute: MarcDisplay::Link#line is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [9, 19]:ClassVariable: MarcDisplay::Link declares the class variable '@@default_link_text' [https://github.com/troessner/reek/blob/v6.0.1/docs/Class-Variable.md]
  [49, 50]:DuplicateMethodCall: MarcDisplay::Link#hash_for_url calls '@config_hash[:custom]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [39, 39]:DuplicateMethodCall: MarcDisplay::Link#hash_for_url calls '@config_hash[:query_field]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [33, 34, 35]:DuplicateMethodCall: MarcDisplay::Link#hash_for_url calls 'hash[:f]' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [34, 35]:DuplicateMethodCall: MarcDisplay::Link#hash_for_url calls 'hash[:f][facet]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [15, 16]:DuplicateMethodCall: MarcDisplay::Link#initialize calls 'config_hash[:subfields]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [92, 92]:DuplicateMethodCall: MarcDisplay::Link#query calls '@config_hash[:formatter]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [79, 81]:DuplicateMethodCall: MarcDisplay::Link#query calls '@config_hash[:subfields]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [80, 81]:DuplicateMethodCall: MarcDisplay::Link#query calls 'part.marc_subfield' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [14, 15, 16, 16, 18, 19, 23, 24]:FeatureEnvy: MarcDisplay::Link#initialize refers to 'config_hash' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [5]:InstanceVariableAssumption: MarcDisplay::Link assumes too much for instance variable '@query' [https://github.com/troessner/reek/blob/v6.0.1/docs/Instance-Variable-Assumption.md]
  [79, 80]:NilCheck: MarcDisplay::Link#query performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [29]:TooManyStatements: MarcDisplay::Link#hash_for_url has approx 9 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [73]:TooManyStatements: MarcDisplay::Link#query has approx 6 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [102]:UtilityFunction: MarcDisplay::Link#clean_query doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb -- 3 warnings:
  [30, 33]:DuplicateMethodCall: MarcDisplay::Blacklight::MarcToOpenUrlExtension#to_openurl calls 'self.class' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [30, 33]:DuplicateMethodCall: MarcDisplay::Blacklight::MarcToOpenUrlExtension#to_openurl calls 'self.class.extension_parameters' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [41]:UnusedParameters: MarcDisplay::Blacklight::MarcToOpenUrlExtension#export_as_openurl_ctx_kev has unused parameter 'ignored_param' [https://github.com/troessner/reek/blob/v6.0.1/docs/Unused-Parameters.md]
marc_display/lib/marc_display/default_presenters.rb -- 2 warnings:
  [241, 242, 243, 244]:UncommunicativeVariableName: MarcDisplay::DefaultPresenters has the variable name 'f' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [55, 107]:UncommunicativeVariableName: MarcDisplay::DefaultPresenters has the variable name 's' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
marc_display/lib/marc_display/marc_to_open_url.rb -- 14 warnings:
  [21]:Attribute: MarcDisplay::MarcToOpenUrl#mappings is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [21]:Attribute: MarcDisplay::MarcToOpenUrl#marc is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [25]:ControlParameter: MarcDisplay::MarcToOpenUrl#initialize is controlled by argument 'a_mappings' [https://github.com/troessner/reek/blob/v6.0.1/docs/Control-Parameter.md]
  [40, 41]:DuplicateMethodCall: MarcDisplay::MarcToOpenUrl#build_openurl calls 'au_first_choice.lines' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [34, 35, 41, 43, 48, 55, 57, 58, 64, 66, 67, 68, 69, 72]:DuplicateMethodCall: MarcDisplay::MarcToOpenUrl#build_openurl calls 'ctx.referent' 14 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [34, 62, 70]:DuplicateMethodCall: MarcDisplay::MarcToOpenUrl#build_openurl calls 'self.openurl_format' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [130, 132]:DuplicateMethodCall: MarcDisplay::MarcToOpenUrl#first_line calls 'presenter.lines' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [103, 108]:DuplicateMethodCall: MarcDisplay::MarcToOpenUrl#openurl_genre calls '["a", "t"].include?(marc.leader.slice(6,1))' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [103, 108]:DuplicateMethodCall: MarcDisplay::MarcToOpenUrl#openurl_genre calls 'marc.leader' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [103, 108]:DuplicateMethodCall: MarcDisplay::MarcToOpenUrl#openurl_genre calls 'marc.leader.slice(6,1)' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [29]:NilCheck: MarcDisplay::MarcToOpenUrl#build_openurl performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [28]:TooManyStatements: MarcDisplay::MarcToOpenUrl#build_openurl has approx 20 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [23]:UncommunicativeParameterName: MarcDisplay::MarcToOpenUrl#initialize has the parameter name 'aMarc' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Parameter-Name.md]
  [129]:UtilityFunction: MarcDisplay::MarcToOpenUrl#first_line doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
marc_display/lib/marc_display/open_url_default_mappings.rb -- 9 warnings:
  [78, 79, 80, 81]:DuplicateMethodCall: MarcDisplay::OpenUrlDefaultMappings#self.produce! calls 'field['a']' 4 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [79, 80]:DuplicateMethodCall: MarcDisplay::OpenUrlDefaultMappings#self.produce! calls 'field['a'][0..2]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [14, 33, 91, 95, 99]:DuplicateMethodCall: MarcDisplay::OpenUrlDefaultMappings#self.produce! calls 'marc_logic(:format_strip_edge_punctuation)' 5 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [50, 65]:DuplicateMethodCall: MarcDisplay::OpenUrlDefaultMappings#self.produce! calls 'value.gsub(/[^\dX]/, '')' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [23, 24]:DuplicateMethodCall: MarcDisplay::OpenUrlDefaultMappings#self.produce! calls 'value.split(/\s/)' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [2]:IrresponsibleModule: MarcDisplay::OpenUrlDefaultMappings has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [107]:NestedIterators: MarcDisplay::OpenUrlDefaultMappings#self.produce! contains iterators nested 2 deep [https://github.com/troessner/reek/blob/v6.0.1/docs/Nested-Iterators.md]
  [7]:TooManyStatements: MarcDisplay::OpenUrlDefaultMappings#self.produce! has approx 35 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [107]:UncommunicativeVariableName: MarcDisplay::OpenUrlDefaultMappings#self.produce! has the variable name 'p' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
marc_display/lib/marc_display/util.rb -- 2 warnings:
  [2]:IrresponsibleModule: MarcDisplay::Util has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [7]:NilCheck: MarcDisplay::Util#self.html_escape performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
marc_display/lib/marc_display.rb -- 1 warning:
  [3]:IrresponsibleModule: MarcDisplay::Engine has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
marc_display/spec/app_root/app/controllers/application_controller.rb -- 1 warning:
  [1]:IrresponsibleModule: ApplicationController has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
marc_display/spec/app_root/config/boot.rb -- 7 warnings:
  [101]:ControlParameter: Rails::GemBoot#parse_gem_version is controlled by argument 'text' [https://github.com/troessner/reek/blob/v6.0.1/docs/Control-Parameter.md]
  [92, 97]:DuplicateMethodCall: Rails::GemBoot#load_rubygems calls 'exit 1' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [9]:IrresponsibleModule: Rails has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [39]:IrresponsibleModule: Rails::Boot has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [54]:IrresponsibleModule: Rails::GemBoot has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [46]:IrresponsibleModule: Rails::VendorBoot has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [87]:TooManyStatements: Rails::GemBoot#load_rubygems has approx 6 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
marc_display/spec/app_root/config/environment.rb -- 1 warning:
  [10]:UtilityFunction: plugins doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
marc_display/spec/lib/marc_to_open_url_spec.rb -- 2 warnings:
  [91]:UtilityFunction: chomsky_book_marc doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [99]:UtilityFunction: social_journal_marc doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
features/support/cucumber_api.rb -- 3 warnings:
  [6]:Attribute: ExternalApi#hip_host is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [6]:Attribute: ExternalApi#horizon_servlet_root is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [4]:IrresponsibleModule: ExternalApi has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
lib/custom_log_formatter.rb -- 9 warnings:
  [5, 24, 25]:ClassVariable: CustomLogFormatter declares the class variable '@@datetime_format' [https://github.com/troessner/reek/blob/v6.0.1/docs/Class-Variable.md]
  [4, 35]:ClassVariable: CustomLogFormatter declares the class variable '@@format_str' [https://github.com/troessner/reek/blob/v6.0.1/docs/Class-Variable.md]
  [1]:IrresponsibleModule: CustomLogFormatter has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [7]:LongParameterList: CustomLogFormatter#call has 4 parameters [https://github.com/troessner/reek/blob/v6.0.1/docs/Long-Parameter-List.md]
  [8]:NilCheck: CustomLogFormatter#call performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [7]:TooManyStatements: CustomLogFormatter#call has approx 7 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [33]:UncommunicativeVariableName: CustomLogFormatter#call has the variable name 'matchData' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [7]:UnusedParameters: CustomLogFormatter#call has unused parameter 'progname' [https://github.com/troessner/reek/blob/v6.0.1/docs/Unused-Parameters.md]
  [7]:UtilityFunction: CustomLogFormatter#call doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
lib/dlf_expanded_passthrough/document_extension.rb -- 15 warnings:
  [205, 248, 259]:DuplicateMethodCall: DlfExpandedPassthrough::DocumentExtension#self.bulk_load calls 'Rails.logger' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [179, 259]:DuplicateMethodCall: DlfExpandedPassthrough::DocumentExtension#self.bulk_load calls 'Time.now' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [197, 198]:DuplicateMethodCall: DlfExpandedPassthrough::DocumentExtension#self.bulk_load calls 'doc.send(:dlf_base_url)' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [25]:IrresponsibleModule: DlfExpandedPassthrough::DocumentExtension has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [192]:ManualDispatch: DlfExpandedPassthrough::DocumentExtension#self.bulk_load manually dispatches method call [https://github.com/troessner/reek/blob/v6.0.1/docs/Manual-Dispatch.md]
  [225]:NestedIterators: DlfExpandedPassthrough::DocumentExtension#self.bulk_load contains iterators nested 2 deep [https://github.com/troessner/reek/blob/v6.0.1/docs/Nested-Iterators.md]
  [59]:NilCheck: DlfExpandedPassthrough::DocumentExtension#export_as_dlf_expanded performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [197]:NilCheck: DlfExpandedPassthrough::DocumentExtension#self.bulk_load performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [89]:TooManyStatements: DlfExpandedPassthrough::DocumentExtension#enhance_dlf has approx 18 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [178]:TooManyStatements: DlfExpandedPassthrough::DocumentExtension#self.bulk_load has approx 32 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [43]:TooManyStatements: DlfExpandedPassthrough::DocumentExtension#to_dlf_expanded_for_holdingset has approx 6 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [74]:UncommunicativeMethodName: DlfExpandedPassthrough::DocumentExtension#dlf_bibId has the name 'dlf_bibId' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Method-Name.md]
  [160]:UncommunicativeVariableName: DlfExpandedPassthrough::DocumentExtension#dlf_lookup has the variable name 'e' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [247]:UncommunicativeVariableName: DlfExpandedPassthrough::DocumentExtension#self.bulk_load has the variable name 'e' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [48]:UncommunicativeVariableName: DlfExpandedPassthrough::DocumentExtension#to_dlf_expanded_for_holdingset has the variable name 'e' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
lib/dlf_expanded_passthrough/to_holdings_extension.rb -- 27 warnings:
  [113, 119]:DuplicateMethodCall: DlfExpandedPassthrough::ToHoldingsExtension#self.fetch_item_holding calls 'fake_error_holdings.first' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [223, 234]:DuplicateMethodCall: DlfExpandedPassthrough::ToHoldingsExtension#self.fill_in_holding_from_xml calls 'ToHoldingsExtension.xml_namespaces' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [182, 188]:DuplicateMethodCall: DlfExpandedPassthrough::ToHoldingsExtension#self.fill_in_holding_from_xml calls 'holding.collection' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [170, 177]:DuplicateMethodCall: DlfExpandedPassthrough::ToHoldingsExtension#self.fill_in_holding_from_xml calls 'holding.location' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [201, 202]:DuplicateMethodCall: DlfExpandedPassthrough::ToHoldingsExtension#self.fill_in_holding_from_xml calls 'holding.notes' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [205, 206, 207]:DuplicateMethodCall: DlfExpandedPassthrough::ToHoldingsExtension#self.fill_in_holding_from_xml calls 'holding.status' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [159, 163]:DuplicateMethodCall: DlfExpandedPassthrough::ToHoldingsExtension#self.fill_in_holding_from_xml calls 'xml_entity.name' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [43, 68]:DuplicateMethodCall: DlfExpandedPassthrough::ToHoldingsExtension#to_holdings calls 'Rails.logger' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [31, 68]:DuplicateMethodCall: DlfExpandedPassthrough::ToHoldingsExtension#to_holdings calls 'Time.now' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [40, 51, 54]:DuplicateMethodCall: DlfExpandedPassthrough::ToHoldingsExtension#to_holdings calls 'ToHoldingsExtension.xml_namespaces' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [2]:IrresponsibleModule: DlfExpandedPassthrough has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [113]:NilCheck: DlfExpandedPassthrough::ToHoldingsExtension#self.fetch_item_holding performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [248]:NilCheck: DlfExpandedPassthrough::ToHoldingsExtension#suppress_holding? performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [34]:NilCheck: DlfExpandedPassthrough::ToHoldingsExtension#to_holdings performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [100]:TooManyStatements: DlfExpandedPassthrough::ToHoldingsExtension#self.fetch_item_holding has approx 11 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [157]:TooManyStatements: DlfExpandedPassthrough::ToHoldingsExtension#self.fill_in_holding_from_xml has approx 22 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [255]:TooManyStatements: DlfExpandedPassthrough::ToHoldingsExtension#self.first_non_blank_xpath has approx 6 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [29]:TooManyStatements: DlfExpandedPassthrough::ToHoldingsExtension#to_holdings has approx 18 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [76]:TooManyStatements: DlfExpandedPassthrough::ToHoldingsExtension#to_holdings_for_holdingset has approx 10 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [116]:UncommunicativeVariableName: DlfExpandedPassthrough::ToHoldingsExtension#self.fetch_item_holding has the variable name 'e' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [108]:UncommunicativeVariableName: DlfExpandedPassthrough::ToHoldingsExtension#self.fetch_item_holding has the variable name 'h' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [42]:UncommunicativeVariableName: DlfExpandedPassthrough::ToHoldingsExtension#to_holdings has the variable name 'e' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [59]:UncommunicativeVariableName: DlfExpandedPassthrough::ToHoldingsExtension#to_holdings has the variable name 'h' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [84]:UncommunicativeVariableName: DlfExpandedPassthrough::ToHoldingsExtension#to_holdings_for_holdingset has the variable name 'h' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [142]:UtilityFunction: DlfExpandedPassthrough::ToHoldingsExtension#fake_error_holdings doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [150]:UtilityFunction: DlfExpandedPassthrough::ToHoldingsExtension#fill_in_holding_from_xml doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [244]:UtilityFunction: DlfExpandedPassthrough::ToHoldingsExtension#suppress_holding? doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
lib/hip_pilot.rb -- 110 warnings:
  [15]:Attribute: HipPilot#current_user is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [664]:Attribute: HipPilot::Note#date is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [664]:Attribute: HipPilot::Note#fee is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [664]:Attribute: HipPilot::Note#note is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [664]:Attribute: HipPilot::Note#reason is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [711]:Attribute: HipPilot::PickupLocation#code is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [711]:Attribute: HipPilot::PickupLocation#description is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [673]:Attribute: HipPilot::Profile#address_array is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [673]:Attribute: HipPilot::Profile#card_expiration is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [673]:Attribute: HipPilot::Profile#email is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [673]:Attribute: HipPilot::Profile#home_library is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [673]:Attribute: HipPilot::Profile#name is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [673]:Attribute: HipPilot::Profile#phone is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [753]:Attribute: HipPilot::ProfileUpdateFailure#public_message is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [684]:Attribute: HipPilot::Request#available_locations is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [680]:Attribute: HipPilot::Request#bib_id is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [692]:Attribute: HipPilot::Request#closed_stack_access_location is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [685]:Attribute: HipPilot::Request#comment is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [683]:Attribute: HipPilot::Request#expire_date is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [686]:Attribute: HipPilot::Request#item_display is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [680]:Attribute: HipPilot::Request#item_id is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [682]:Attribute: HipPilot::Request#notification_method is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [681]:Attribute: HipPilot::Request#pickup_location is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [682]:Attribute: HipPilot::Request#queue_position is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [615]:Attribute: HipPilot::Transaction#bib_id is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [615]:Attribute: HipPilot::Transaction#collection_str is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [615]:Attribute: HipPilot::Transaction#date_complete is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [615]:Attribute: HipPilot::Transaction#date_initiated is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [615]:Attribute: HipPilot::Transaction#due_date is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [615]:Attribute: HipPilot::Transaction#item_barcode is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [615]:Attribute: HipPilot::Transaction#item_id is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [617]:Attribute: HipPilot::Transaction#item_status is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [614]:Attribute: HipPilot::Transaction#label is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [617]:Attribute: HipPilot::Transaction#pickup_location is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [617]:Attribute: HipPilot::Transaction#queue_position is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [618]:Attribute: HipPilot::Transaction#solr_document is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [615]:Attribute: HipPilot::Transaction#times_renewed is a writable attribute [https://github.com/troessner/reek/blob/v6.0.1/docs/Attribute.md]
  [18, 371]:ClassVariable: HipPilot declares the class variable '@@renewal_timeout' [https://github.com/troessner/reek/blob/v6.0.1/docs/Class-Variable.md]
  [17, 411, 433]:ClassVariable: HipPilot declares the class variable '@@timeout' [https://github.com/troessner/reek/blob/v6.0.1/docs/Class-Variable.md]
  [414, 418]:DuplicateMethodCall: HipPilot#get_xml_with_current_session calls 'Rails.logger' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [418, 419]:DuplicateMethodCall: HipPilot#get_xml_with_current_session calls 'e.message' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [414, 418, 419]:DuplicateMethodCall: HipPilot#get_xml_with_current_session calls 'url.to_s' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [452, 464, 476]:DuplicateMethodCall: HipPilot#get_xml_with_login calls 'Nokogiri::XML(http.get(url).content)' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [450, 459, 485]:DuplicateMethodCall: HipPilot#get_xml_with_login calls 'Rails.logger' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [485, 490]:DuplicateMethodCall: HipPilot#get_xml_with_login calls 'e.message' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [452, 464, 476]:DuplicateMethodCall: HipPilot#get_xml_with_login calls 'http.get(url)' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [452, 464, 476]:DuplicateMethodCall: HipPilot#get_xml_with_login calls 'http.get(url).content' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [450, 490]:DuplicateMethodCall: HipPilot#get_xml_with_login calls 'url.to_s' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [456, 459]:DuplicateMethodCall: HipPilot#get_xml_with_login calls 'xml.xpath("//exception")' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [456, 459]:DuplicateMethodCall: HipPilot#get_xml_with_login calls 'xml.xpath("//exception").text()' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [188, 211]:DuplicateMethodCall: HipPilot#init_request calls 'URI.parse(@hip_base_url)' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [240, 240]:DuplicateMethodCall: HipPilot#init_request calls 'location_xml.text()' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [228, 265, 269, 270]:DuplicateMethodCall: HipPilot#init_request calls 'request.available_locations' 4 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [191, 208]:DuplicateMethodCall: HipPilot#init_request calls 'request.item_id' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [265, 269]:DuplicateMethodCall: HipPilot#init_request calls 'request.pickup_location' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [53, 55]:DuplicateMethodCall: HipPilot#items_out calls 'ixml.at_xpath("duedate")' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [506, 508]:DuplicateMethodCall: HipPilot#lookup_hip_auth calls 'borrower[:barcode]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [506, 508]:DuplicateMethodCall: HipPilot#lookup_hip_auth calls 'borrower[:pin]' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [503, 505, 506]:DuplicateMethodCall: HipPilot#lookup_hip_auth calls 'current_user.try(:horizon_borrower_id)' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [503, 505, 506]:DuplicateMethodCall: HipPilot#lookup_hip_auth calls 'current_user.try(:login)' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [141, 141]:DuplicateMethodCall: HipPilot#profile calls 'a.text()' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [537, 539, 540, 542]:DuplicateMethodCall: HipPilot#query_to_hash calls 'hash[key]' 4 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [365, 376]:DuplicateMethodCall: HipPilot#renew calls 'items.collect' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [570, 571, 574]:DuplicateMethodCall: HipPilot#safe_date_parse calls 'nokogiri_element.text()' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [626, 632]:DuplicateMethodCall: HipPilot::ItemOut#overdue? calls 'Time.now' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [190, 191, 208, 228, 246, 248, 253, 265, 265, 269, 269, 270, 270, 273, 277]:FeatureEnvy: HipPilot#init_request refers to 'request' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [121, 126, 127, 128]:FeatureEnvy: HipPilot#notes refers to 'nxml' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [356, 359, 365, 376]:FeatureEnvy: HipPilot#renew refers to 'items' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [94, 95, 96, 97, 98, 99]:FeatureEnvy: HipPilot#requests_available refers to 'ixml' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [73, 74, 75, 76, 77, 78, 79, 81, 82, 83]:FeatureEnvy: HipPilot#requests_pending refers to 'ixml' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [679]:InstanceVariableAssumption: HipPilot::Request assumes too much for instance variable '@notification_method' [https://github.com/troessner/reek/blob/v6.0.1/docs/Instance-Variable-Assumption.md]
  [747]:IrresponsibleModule: HipPilot::HipDisabled has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [620]:IrresponsibleModule: HipPilot::ItemOut has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [658]:IrresponsibleModule: HipPilot::Note has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [667]:IrresponsibleModule: HipPilot::Profile has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [740]:IrresponsibleModule: HipPilot::RequestFailure has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [559]:NestedIterators: HipPilot#hash_to_query contains iterators nested 2 deep [https://github.com/troessner/reek/blob/v6.0.1/docs/Nested-Iterators.md]
  [505]:NilCheck: HipPilot#lookup_hip_auth performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [533, 537]:NilCheck: HipPilot#query_to_hash performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [569]:NilCheck: HipPilot#safe_date_parse performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [628]:NilCheck: HipPilot::ItemOut#overdue? performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [713, 713]:NilCheck: HipPilot::PickupLocation#initialize performs a nil-check [https://github.com/troessner/reek/blob/v6.0.1/docs/Nil-Check.md]
  [14]:TooManyMethods: HipPilot has at least 27 methods [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Methods.md]
  [406]:TooManyStatements: HipPilot#get_xml_with_current_session has approx 9 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [432]:TooManyStatements: HipPilot#get_xml_with_login has approx 23 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [187]:TooManyStatements: HipPilot#init_request has approx 21 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [499]:TooManyStatements: HipPilot#lookup_hip_auth has approx 6 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [527]:TooManyStatements: HipPilot#query_to_hash has approx 11 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [353]:TooManyStatements: HipPilot#renew has approx 18 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [285]:TooManyStatements: HipPilot#submit_request has approx 8 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [315]:TooManyStatements: HipPilot#update_email has approx 7 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [621]:TooManyStatements: HipPilot::ItemOut#overdue? has approx 8 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [712]:UncommunicativeParameterName: HipPilot::PickupLocation#initialize has the parameter name 'c' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Parameter-Name.md]
  [712]:UncommunicativeParameterName: HipPilot::PickupLocation#initialize has the parameter name 'd' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Parameter-Name.md]
  [417]:UncommunicativeVariableName: HipPilot#get_xml_with_current_session has the variable name 'e' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [484]:UncommunicativeVariableName: HipPilot#get_xml_with_login has the variable name 'e' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [559]:UncommunicativeVariableName: HipPilot#hash_to_query has the variable name 'v' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [265]:UncommunicativeVariableName: HipPilot#init_request has the variable name 'l' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [502]:UncommunicativeVariableName: HipPilot#lookup_hip_auth has the variable name 'e' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [141]:UncommunicativeVariableName: HipPilot#profile has the variable name 'a' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [356, 365]:UncommunicativeVariableName: HipPilot#renew has the variable name 'i' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [101]:UncommunicativeVariableName: HipPilot#requests_available has the variable name 'a' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [101]:UncommunicativeVariableName: HipPilot#requests_available has the variable name 'b' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [85]:UncommunicativeVariableName: HipPilot#requests_pending has the variable name 'a' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [85]:UncommunicativeVariableName: HipPilot#requests_pending has the variable name 'b' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [582]:UtilityFunction: HipPilot#at_xpath_text doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [592]:UtilityFunction: HipPilot#filter_pin doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [548]:UtilityFunction: HipPilot#hash_to_query doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [527]:UtilityFunction: HipPilot#query_to_hash doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
  [568]:UtilityFunction: HipPilot#safe_date_parse doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
lib/horizon_borrower_lookup.rb -- 10 warnings:
  [6, 19, 20]:ClassVariable: HorizonBorrowerLookup declares the class variable '@@timeout' [https://github.com/troessner/reek/blob/v6.0.1/docs/Class-Variable.md]
  [19, 20, 21, 28]:FeatureEnvy: HorizonBorrowerLookup#fetch_with_auth refers to 'http' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [18, 18, 21, 22]:FeatureEnvy: HorizonBorrowerLookup#fetch_with_auth refers to 'uri' more than self (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Feature-Envy.md]
  [5]:IrresponsibleModule: HorizonBorrowerLookup has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [81]:IrresponsibleModule: HorizonBorrowerLookup::UnavailableError has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [14]:TooManyStatements: HorizonBorrowerLookup#fetch_with_auth has approx 13 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [51]:TooManyStatements: HorizonBorrowerLookup#lookup has approx 13 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
  [82]:UncommunicativeParameterName: HorizonBorrowerLookup::UnavailableError#initialize has the parameter name 'e' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Parameter-Name.md]
  [31]:UncommunicativeVariableName: HorizonBorrowerLookup#fetch_with_auth has the variable name 'e' [https://github.com/troessner/reek/blob/v6.0.1/docs/Uncommunicative-Variable-Name.md]
  [77]:UtilityFunction: HorizonBorrowerLookup#to_text doesn't depend on instance state (maybe move it to another class?) [https://github.com/troessner/reek/blob/v6.0.1/docs/Utility-Function.md]
lib/ils_status.rb -- 8 warnings:
  [5, 14, 18, 23, 31, 36, 51]:ClassVariable: IlsStatus declares the class variable '@@list' [https://github.com/troessner/reek/blob/v6.0.1/docs/Class-Variable.md]
  [31, 36, 51]:DuplicateMethodCall: IlsStatus#self.find_by_holding calls '@@list.find' 3 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [32, 39, 39, 40]:DuplicateMethodCall: IlsStatus#self.find_by_holding calls 'holding.status' 4 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [39, 40]:DuplicateMethodCall: IlsStatus#self.find_by_holding calls 'holding.status.display_label' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [37, 51]:DuplicateMethodCall: IlsStatus#self.find_by_holding calls 'item.display_label' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [32, 32]:DuplicateMethodCall: IlsStatus#self.find_by_holding calls 'item.item_status_codes' 2 times [https://github.com/troessner/reek/blob/v6.0.1/docs/Duplicate-Method-Call.md]
  [3]:IrresponsibleModule: IlsStatus has no descriptive comment [https://github.com/troessner/reek/blob/v6.0.1/docs/Irresponsible-Module.md]
  [27]:TooManyStatements: IlsStatus#self.find_by_holding has approx 11 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
lib/lcc_to_extra_label.rb -- 4 warnings:
  [21]:ClassVariable: LCCToExtraLabel declares the class variable '@@collection_code_to_set' [https://github.com/troessner/reek/blob/v6.0.1/docs/Class-Variable.md]
  [37, 38]:ClassVariable: LCCToExtraLabel declares the class variable '@@set_to_map' [https://github.com/troessner/reek/blob/v6.0.1/docs/Class-Variable.md]
  [71]:ControlParameter: LCCToExtraLabel#self.translate is controlled by argument 'lcc' [https://github.com/troessner/reek/blob/v6.0.1/docs/Control-Parameter.md]
  [62]:TooManyStatements: LCCToExtraLabel#self.translate has approx 6 statements [https://github.com/troessner/reek/blob/v6.0.1/docs/Too-Many-Statements.md]
739 total warnings

######################################################################################################
#                                                                                                    #
#                                              RUBOCOP                                               #
#                                                                                                    #
######################################################################################################

.rubocop.yml: Metrics/LineLength has the wrong namespace - should be Layout
/Users/ewlarson/Rails/jhu-blacklight-rails/.rubocop.yml: Warning: no department given for Documentation.
/Users/ewlarson/Rails/jhu-blacklight-rails/.rubocop.yml: Warning: no department given for FrozenStringLiteralComment.
The following cops were added to RuboCop, but are not configured. Please set Enabled to either `true` or `false` in your `.rubocop.yml` file:
 - Layout/EmptyLinesAroundAttributeAccessor (0.83)
 - Layout/SpaceAroundMethodCallOperator (0.82)
 - Lint/DeprecatedOpenSSLConstant (0.84)
 - Lint/DuplicateElsifCondition (0.88)
 - Lint/MixedRegexpCaptureTypes (0.85)
 - Lint/RaiseException (0.81)
 - Lint/StructNewOverride (0.81)
 - Style/AccessorGrouping (0.87)
 - Style/ArrayCoercion (0.88)
 - Style/BisectedAttrAccessor (0.87)
 - Style/CaseLikeIf (0.88)
 - Style/ExponentialNotation (0.82)
 - Style/HashAsLastArrayItem (0.88)
 - Style/HashEachMethods (0.80)
 - Style/HashLikeCase (0.88)
 - Style/HashTransformKeys (0.80)
 - Style/HashTransformValues (0.80)
 - Style/RedundantAssignment (0.87)
 - Style/RedundantFetchBlock (0.86)
 - Style/RedundantFileExtensionInRequire (0.88)
 - Style/RedundantRegexpCharacterClass (0.85)
 - Style/RedundantRegexpEscape (0.85)
 - Style/SlicingWithRange (0.83)
 - Rails/ActiveRecordCallbacksOrder (2.7)
 - Rails/FindById (2.7)
 - Rails/Inquiry (2.7)
 - Rails/MailerName (2.7)
 - Rails/MatchRoute (2.7)
 - Rails/NegateInclude (2.7)
 - Rails/Pluck (2.7)
 - Rails/PluckId (2.7)
 - Rails/PluckInWhere (2.7)
 - Rails/RenderInline (2.7)
 - Rails/RenderPlainText (2.7)
 - Rails/ShortI18n (2.7)
 - Rails/WhereExists (2.7)
For more information: https://docs.rubocop.org/rubocop/versioning.html
Inspecting 132 files
CCWCCCCCWCWWCWWCWWCWWCCWWCC..CCWCWCWWCCWWCCCCCCCC.CCW.C.CC.CCWCCCC.CCWWCWWW.CCCWWWWCWWWCCCCWCCCCWWCWWCWCWWCCC.WC......CWW.CC.WC.CCCW

Offenses:

Gemfile:13:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem 'blacklight', "= 6.21" #, :path => "../blacklight"
                  ^^^^^^^^
Gemfile:13:28: C: Layout/LeadingCommentSpace: Missing space after #.
gem 'blacklight', "= 6.21" #, :path => "../blacklight"
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:17:1: C: Layout/LeadingCommentSpace: Missing space after #.
#gem 'rake', "= 13.0.1"
^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:21:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem 'marc', ">= 0.5.0"
            ^^^^^^^^^^
Gemfile:25:21: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
gem 'marc_display', :path => "./marc_display"
                    ^^^^^^^^
Gemfile:25:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem 'marc_display', :path => "./marc_display"
                             ^^^^^^^^^^^^^^^^
Gemfile:27:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "blacklight_range_limit", "= 6.3.3" #, :github => "projectblacklight/blacklight_range_limit", :branch => "bl514"  #, :path => "../blacklight_range_limit"
    ^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:27:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "blacklight_range_limit", "= 6.3.3" #, :github => "projectblacklight/blacklight_range_limit", :branch => "bl514"  #, :path => "../blacklight_range_limit"
                              ^^^^^^^^^
Gemfile:27:41: C: Layout/LeadingCommentSpace: Missing space after #.
gem "blacklight_range_limit", "= 6.3.3" #, :github => "projectblacklight/blacklight_range_limit", :branch => "bl514"  #, :path => "../blacklight_range_limit"
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:27:121: C: Layout/LineLength: Line is too long. [157/120]
gem "blacklight_range_limit", "= 6.3.3" #, :github => "projectblacklight/blacklight_range_limit", :branch => "bl514"  #, :path => "../blacklight_range_limit"
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:29:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "blacklight_advanced_search", "= 6.0" #,  :path => "../blacklight_advanced_search"
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:29:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "blacklight_advanced_search", "= 6.0" #,  :path => "../blacklight_advanced_search"
                                  ^^^^^^^
Gemfile:29:43: C: Layout/LeadingCommentSpace: Missing space after #.
gem "blacklight_advanced_search", "= 6.0" #,  :path => "../blacklight_advanced_search"
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:31:1: C: Layout/LeadingCommentSpace: Missing space after #.
#gem "stackview_acorn_tester"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:33:22: C: Layout/SpaceBeforeComma: Space found before comma.
gem 'rails_stackview' ,  :git => "https://github.com/jhu-sheridan-libraries/rails_stackview"
                     ^
Gemfile:33:26: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
gem 'rails_stackview' ,  :git => "https://github.com/jhu-sheridan-libraries/rails_stackview"
                         ^^^^^^^
Gemfile:33:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem 'rails_stackview' ,  :git => "https://github.com/jhu-sheridan-libraries/rails_stackview"
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:35:1: C: Layout/EmptyLines: Extra blank line detected.
Gemfile:36:1: C: Layout/LeadingCommentSpace: Missing space after #.
#gem 'rails_stackview' , :path => "vendor/rails_stackview"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:38:1: C: Layout/LeadingCommentSpace: Missing space after #.
#gem "rails_stackview", path: "vendor/rails_stackview"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:40:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem 'borrow_direct', ">= 1.2.0.pre1", "< 2.0"  # for generating queries to BD
                     ^^^^^^^^^^^^^^^
Gemfile:40:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem 'borrow_direct', ">= 1.2.0.pre1", "< 2.0"  # for generating queries to BD
                                      ^^^^^^^
Gemfile:40:46: C: Layout/ExtraSpacing: Unnecessary spacing detected.
gem 'borrow_direct', ">= 1.2.0.pre1", "< 2.0"  # for generating queries to BD
                                             ^
Gemfile:42:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "chosen_assets" #, :path => "../chosen-rails" # used to add fancy combo box UI to advanced search form facets
    ^^^^^^^^^^^^^^^
Gemfile:42:21: C: Layout/LeadingCommentSpace: Missing space after #.
gem "chosen_assets" #, :path => "../chosen-rails" # used to add fancy combo box UI to advanced search form facets
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:44:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "blacklight_cql", "~> 3.0"
    ^^^^^^^^^^^^^^^^
Gemfile:44:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "blacklight_cql", "~> 3.0"
                      ^^^^^^^^
Gemfile:46:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "bento_search", "~> 1.6" #, :github => "jrochkind/bento_search", :branch => "master"  # for multi-search support, article search, google site, etc.
    ^^^^^^^^^^^^^^
Gemfile:46:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "bento_search", "~> 1.6" #, :github => "jrochkind/bento_search", :branch => "master"  # for multi-search support, article search, google site, etc.
                    ^^^^^^^^
Gemfile:46:30: C: Layout/LeadingCommentSpace: Missing space after #.
gem "bento_search", "~> 1.6" #, :github => "jrochkind/bento_search", :branch => "master"  # for multi-search support, article search, google site, etc.
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:46:121: C: Layout/LineLength: Line is too long. [151/120]
gem "bento_search", "~> 1.6" #, :github => "jrochkind/bento_search", :branch => "master"  # for multi-search support, article search, google site, etc.
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:47:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "celluloid", ">= 0.12.0" # used by bento_search for concurrent threaded fetching
    ^^^^^^^^^^^
Gemfile:47:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "celluloid", ">= 0.12.0" # used by bento_search for concurrent threaded fetching
                 ^^^^^^^^^^^
Gemfile:49:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "ipaddr_range_set"
    ^^^^^^^^^^^^^^^^^^
Gemfile:51:1: C: Layout/EmptyLines: Extra blank line detected.
Gemfile:52:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "cql-ruby" #, :path => './cql-ruby'
    ^^^^^^^^^^
Gemfile:52:16: C: Layout/LeadingCommentSpace: Missing space after #.
gem "cql-ruby" #, :path => './cql-ruby'
               ^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:53:1: C: Layout/LeadingCommentSpace: Missing space after #.
#gem "formatted_rails_logger" # for allowing giving formatter to BufferedLogger with severity etc
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:55:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "debugger", :group => :development, :platforms => [:mri_19]
    ^^^^^^^^^^
Gemfile:55:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
gem "debugger", :group => :development, :platforms => [:mri_19]
                ^^^^^^^^^
Gemfile:55:41: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
gem "debugger", :group => :development, :platforms => [:mri_19]
                                        ^^^^^^^^^^^^^
Gemfile:63:13: C: Layout/SpaceBeforeComma: Space found before comma.
gem 'mysql2' , '~> 0.5'
            ^
Gemfile:69:1: C: Layout/LeadingCommentSpace: Missing space after #.
#gem "sprockets-rails", ">= 2.3.0", "< 2.3.3"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:70:1: C: Layout/LeadingCommentSpace: Missing space after #.
#gem "sprockets", "~> 2.0"
^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:72:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem 'multi_json', "~> 1.4"
                  ^^^^^^^^
Gemfile:74:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem 'sass-rails', " ~> 5.0", ">= 5.0.6"
                  ^^^^^^^^^
Gemfile:74:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem 'sass-rails', " ~> 5.0", ">= 5.0.6"
                             ^^^^^^^^^^
Gemfile:75:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "uglifier", ">= 1.3.0"
    ^^^^^^^^^^
Gemfile:75:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "uglifier", ">= 1.3.0"
                ^^^^^^^^^^
Gemfile:76:1: C: Layout/LeadingCommentSpace: Missing space after #.
#gem 'coffee-rails', " ~> 4.2.0"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:77:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "therubyracer", '~> 0.12.3', :platforms => :ruby
    ^^^^^^^^^^^^^^
Gemfile:77:34: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
gem "therubyracer", '~> 0.12.3', :platforms => :ruby
                                 ^^^^^^^^^^^^^
Gemfile:80:1: C: Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem bootstrap-sass should appear before jquery-rails.
gem 'bootstrap-sass'
^^^^^^^^^^^^^^^^^^^^
Gemfile:84:1: C: Layout/LeadingCommentSpace: Missing space after #.
#gem 'quiet_assets', :group => :development
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:108:3: C: Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem listen should appear before web-console.
  gem 'listen', '>= 3.0.5', '< 3.2'
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:116:28: C: Style/SymbolArray: Use %i or %I for an array of symbols.
  gem 'byebug', platforms: [:mri, :mingw, :x64_mingw]
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:130:3: C: Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem capybara-screenshot should appear before selenium-webdriver.
  gem 'capybara-screenshot'
  ^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:134:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "rubycritic", require: false
    ^^^^^^^^^^^^
Gemfile:135:1: C: Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem rubocop-rails should appear before rubycritic.
gem 'rubocop-rails', require: false
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:136:1: C: Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem inquisition should appear before rubocop-rails.
gem 'inquisition', github: 'rubygarage/inquisition', group: %w(development test)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:136:61: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
gem 'inquisition', github: 'rubygarage/inquisition', group: %w(development test)
                                                            ^^^^^^^^^^^^^^^^^^^^
Rakefile:4:14: C: Style/ExpandPathArguments: Use expand_path('config/application', __dir__) instead of expand_path('../config/application', __FILE__).
require File.expand_path('../config/application', __FILE__)
             ^^^^^^^^^^^
app/controllers/application_controller.rb:9:1: C: Metrics/ClassLength: Class has too many lines. [130/100]
class ApplicationController < ActionController::Base ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:11:26: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  rescue_from Exception, :with => :handle_general_error
                         ^^^^^^^^
app/controllers/application_controller.rb:13:3: C: Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 3).
  # Adds a few additional behaviors into the application controller
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:14:1: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
   include Blacklight::Controller
^^^
app/controllers/application_controller.rb:14:4: C: Layout/IndentationConsistency: Inconsistent indentation detected.
   include Blacklight::Controller
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:25:38: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  rescue_from HipPilot::HipDisabled, :with => :hip_disabled_message
                                     ^^^^^^^^
app/controllers/application_controller.rb:27:3: C: Layout/LeadingCommentSpace: Missing space after #.
  ##TODO: review this hack that allows a security bypass (part of rails 5 upgrade)
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:31:1: C: Layout/EmptyLines: Extra blank line detected.
app/controllers/application_controller.rb:32:50: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  skip_before_action :verify_authenticity_token, :only => [:show404, :handle_general_error, :hip_disabled_message]
                                                 ^^^^^^^^
app/controllers/application_controller.rb:32:59: C: Style/SymbolArray: Use %i or %I for an array of symbols.
  skip_before_action :verify_authenticity_token, :only => [:show404, :handle_general_error, :hip_disabled_message]
                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:37:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render :file => "public/404.html", :layout => false, :status => 404
           ^^^^^^^^
app/controllers/application_controller.rb:37:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    render :file => "public/404.html", :layout => false, :status => 404
                    ^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:37:40: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render :file => "public/404.html", :layout => false, :status => 404
                                       ^^^^^^^^^^
app/controllers/application_controller.rb:37:58: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render :file => "public/404.html", :layout => false, :status => 404
                                                         ^^^^^^^^^^
app/controllers/application_controller.rb:37:69: C: Rails/HttpStatus: Prefer :not_found over 404 to define HTTP status code.
    render :file => "public/404.html", :layout => false, :status => 404
                                                                    ^^^
app/controllers/application_controller.rb:40:1: C: Layout/EmptyLines: Extra blank line detected.
app/controllers/application_controller.rb:41:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def current_user
  ^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:48:20: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      conditions = {User.primary_key.to_sym => session[:current_user_id]}
                   ^
app/controllers/application_controller.rb:48:73: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      conditions = {User.primary_key.to_sym => session[:current_user_id]}
                                                                        ^
app/controllers/application_controller.rb:53:5: C: Style/RedundantReturn: Redundant return detected.
    return @current_user
    ^^^^^^
app/controllers/application_controller.rb:78:56: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      if session[:guest_user_id] && (user = User.where(:id => session[:guest_user_id]).first)
                                                       ^^^^^^
app/controllers/application_controller.rb:85:5: C: Style/RedundantReturn: Redundant return detected.
    return @guest_user
    ^^^^^^
app/controllers/application_controller.rb:98:5: W: Lint/UselessAssignment: Useless assignment to variable - new_user.
    new_user = User.new.tap do |u|
    ^^^^^^^^
app/controllers/application_controller.rb:107:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      flash[:notice] = "Please log in to view your profile."
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:110:5: C: Style/GuardClause: Use a guard clause (return if current_user.horizon_borrower_id) instead of wrapping the code inside a conditional expression.
    unless current_user.horizon_borrower_id
    ^^^^^^
app/controllers/application_controller.rb:112:14: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render :template => "application/no_horizon_borrower_id_error"
             ^^^^^^^^^^^^
app/controllers/application_controller.rb:112:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      render :template => "application/no_horizon_borrower_id_error"
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:117:1: C: Layout/EmptyLines: Extra blank line detected.
app/controllers/application_controller.rb:120:3: C: Style/GlobalVars: Do not introduce global variables.
  $local_ip_range = IPAddrRangeSet.new(
  ^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:123:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ("128.220.0.0".."128.220.106.225"),
     ^^^^^^^^^^^^^
app/controllers/application_controller.rb:123:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ("128.220.0.0".."128.220.106.225"),
                    ^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:124:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ("128.220.106.227"..."128.221.0.0"),
     ^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:124:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ("128.220.106.227"..."128.221.0.0"),
                         ^^^^^^^^^^^^^
app/controllers/application_controller.rb:125:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "128.244.*.*",        # APL
    ^^^^^^^^^^^^^
app/controllers/application_controller.rb:126:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "162.129.*.*",        # (JHMIB)
    ^^^^^^^^^^^^^
app/controllers/application_controller.rb:127:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "65.111.76.4",        # (Howard County General Hospital)
    ^^^^^^^^^^^^^
app/controllers/application_controller.rb:128:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "192.124.118.140",    # Mt. Washington
    ^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:129:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "65.210.63.19",       # (Suburban Hospital)
    ^^^^^^^^^^^^^^
app/controllers/application_controller.rb:130:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "209.124.166.20",     # (KKI)
    ^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:131:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "67.151.28.*",        # (Sibley Hospital)
    ^^^^^^^^^^^^^
app/controllers/application_controller.rb:132:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ("193.206.22.225".."193.206.22.254"), # Internat, Bologna
     ^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:132:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ("193.206.22.225".."193.206.22.254"), # Internat, Bologna
                       ^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:133:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ("202.119.55.1".."202.119.55.28") # Internat, Nanjing
     ^^^^^^^^^^^^^^
app/controllers/application_controller.rb:133:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ("202.119.55.1".."202.119.55.28") # Internat, Nanjing
                     ^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:134:1: C: Layout/EmptyLinesAroundArguments: Empty line detected around arguments.
app/controllers/application_controller.rb:136:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #"204.91.130.*",       # (JHPIEGO)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:137:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #("12.110.113.0".."12.110.113.63"),  # (JH Healthcare)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:138:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #"151.200.174.19",     # (Suburban Hospital),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:145:21: C: Style/GlobalVars: Do not introduce global variables.
    current_user || $local_ip_range.include?( request.remote_ip )
                    ^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:145:46: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    current_user || $local_ip_range.include?( request.remote_ip )
                                             ^
app/controllers/application_controller.rb:145:64: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    current_user || $local_ip_range.include?( request.remote_ip )
                                                               ^
app/controllers/application_controller.rb:150:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @title = "Patron account features unavailable"
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:151:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @message = JHConfig.params[:disable_hip_message] || "Sorry, patron account features are currently unavailable for maintenance."
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:151:121: C: Layout/LineLength: Line is too long. [131/120]
    @message = JHConfig.params[:disable_hip_message] || "Sorry, patron account features are currently unavailable for maintenance."
                                                                                                                        ^^^^^^^^^^^
app/controllers/application_controller.rb:153:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    render "message"
           ^^^^^^^^^
app/controllers/application_controller.rb:157:3: C: Metrics/MethodLength: Method has too many lines. [12/10]
  def handle_general_error(exception) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:159:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @page_title = "Error!"
                  ^^^^^^^^
app/controllers/application_controller.rb:162:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if (Rails.application.config.consider_all_requests_local || request.local?)
    ^^
app/controllers/application_controller.rb:162:8: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
    if (Rails.application.config.consider_all_requests_local || request.local?)
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:168:5: C: Style/GuardClause: Use a guard clause (return if performed?) instead of wrapping the code inside a conditional expression.
    unless performed?
    ^^^^^^
app/controllers/application_controller.rb:170:16: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        render :file => 'public/500.html', :status => 500, :layout => false
               ^^^^^^^^
app/controllers/application_controller.rb:170:44: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        render :file => 'public/500.html', :status => 500, :layout => false
                                           ^^^^^^^^^^
app/controllers/application_controller.rb:170:55: C: Rails/HttpStatus: Prefer :internal_server_error over 500 to define HTTP status code.
        render :file => 'public/500.html', :status => 500, :layout => false
                                                      ^^^
app/controllers/application_controller.rb:170:60: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        render :file => 'public/500.html', :status => 500, :layout => false
                                                           ^^^^^^^^^^
app/controllers/application_controller.rb:172:16: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        render :text => "Unexpected fatal error, has been logged.", :status => 500, :layout => false
               ^^^^^^^^
app/controllers/application_controller.rb:172:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        render :text => "Unexpected fatal error, has been logged.", :status => 500, :layout => false
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:172:69: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        render :text => "Unexpected fatal error, has been logged.", :status => 500, :layout => false
                                                                    ^^^^^^^^^^
app/controllers/application_controller.rb:172:80: C: Rails/HttpStatus: Prefer :internal_server_error over 500 to define HTTP status code.
        render :text => "Unexpected fatal error, has been logged.", :status => 500, :layout => false
                                                                               ^^^
app/controllers/application_controller.rb:172:85: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        render :text => "Unexpected fatal error, has been logged.", :status => 500, :layout => false
                                                                                    ^^^^^^^^^^
app/controllers/application_controller.rb:178:3: C: Metrics/AbcSize: Assignment Branch Condition size for log_error_with_context is too high. [<1, 31, 2> 31.08/15]
  def log_error_with_context(exception, severity = :fatal) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:186:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    message << "  " << exception.backtrace.join("\n  ")
               ^^^^
app/controllers/application_controller.rb:199:3: C: Metrics/AbcSize: Assignment Branch Condition size for sanitize_redirect_url is too high. [<4, 34, 12> 36.28/15]
  def sanitize_redirect_url ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:199:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for sanitize_redirect_url is too high. [13/7]
  def sanitize_redirect_url ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:199:3: C: Metrics/MethodLength: Method has too many lines. [16/10]
  def sanitize_redirect_url ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:199:3: C: Metrics/PerceivedComplexity: Perceived complexity for sanitize_redirect_url is too high. [14/7]
  def sanitize_redirect_url ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:200:15: C: Rails/Presence: Use params[:referer].presence || request.referer instead of params[:referer].blank? ?  request.referer : params[:referer].
    referer = params[:referer].blank? ?  request.referer : params[:referer]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:200:39: C: Layout/SpaceAroundOperators: Operator ? should be surrounded by a single space.
    referer = params[:referer].blank? ?  request.referer : params[:referer]
                                      ^
app/controllers/application_controller.rb:200:40: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    referer = params[:referer].blank? ?  request.referer : params[:referer]
                                       ^
app/controllers/application_controller.rb:202:31: C: Style/PercentLiteralDelimiters: %r-literals should be delimited by { and }.
    if referer && (referer =~ %r|^https?://#{request.host}#{root_path}| ||
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:203:20: C: Style/PercentLiteralDelimiters: %r-literals should be delimited by { and }.
        referer =~ %r|^https?://#{request.host}:#{request.port}#{root_path}|)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:204:7: C: Layout/LeadingCommentSpace: Missing space after #.
      #self-referencing absolute url, make it relative
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:205:20: C: Style/PercentLiteralDelimiters: %r-literals should be delimited by { and }.
      referer.sub!(%r|^https?://#{request.host}(:#{request.port})?|, '')
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:206:33: C: Style/PercentLiteralDelimiters: %r-literals should be delimited by { and }.
    elsif referer && referer =~ %r|^(\w+:)?//|
                                ^^^^^^^^^^^^^^
app/controllers/application_controller.rb:211:42: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    if referer && referer_blacklist.any? {|blacklisted| referer.starts_with?(blacklisted)  }
                                         ^^
app/controllers/application_controller.rb:211:90: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    if referer && referer_blacklist.any? {|blacklisted| referer.starts_with?(blacklisted)  }
                                                                                         ^
app/controllers/application_controller.rb:214:31: C: Layout/SpaceAfterComma: Space missing after comma.
    elsif referer && referer[0,1] != '/'
                              ^
app/controllers/application_controller.rb:219:5: C: Style/RedundantReturn: Redundant return detected.
    return referer || root_path
    ^^^^^^
app/controllers/application_controller.rb:230:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/controllers/borrow_direct_controller.rb:21:3: C: Metrics/AbcSize: Assignment Branch Condition size for borrow_direct_url is too high. [<5, 16, 1> 16.79/15]
  def borrow_direct_url ...
  ^^^^^^^^^^^^^^^^^^^^^
app/controllers/borrow_direct_controller.rb:22:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    bd_library_symbol = "JOHNSHOPKINS"
                        ^^^^^^^^^^^^^^
app/controllers/borrow_direct_controller.rb:24:49: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    borrower = HorizonBorrowerLookup.new.lookup(:id => current_user.horizon_borrower_id )
                                                ^^^^^^
app/controllers/borrow_direct_controller.rb:24:88: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    borrower = HorizonBorrowerLookup.new.lookup(:id => current_user.horizon_borrower_id )
                                                                                       ^
app/controllers/borrow_direct_controller.rb:27:33: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
    url = "https://#{APP_CONFIG["borrow_direct_host"]}/?LS=#{CGI.escape bd_library_symbol}&PI=#{CGI.escape barcode}"
                                ^^^^^^^^^^^^^^^^^^^^
app/controllers/borrow_direct_controller.rb:29:5: C: Rails/Present: Use if request.query_string.present? instead of unless request.query_string.blank?.
    unless request.query_string.blank?
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/borrow_direct_controller.rb:29:5: C: Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless request.query_string.blank?
    ^^^^^^
app/controllers/borrow_direct_controller.rb:30:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      url = url + "&" + request.query_string.gsub('+', '%20')
                  ^^^
app/controllers/borrow_direct_controller.rb:33:5: C: Style/RedundantReturn: Redundant return detected.
    return url
    ^^^^^^
app/controllers/borrow_direct_controller.rb:37:3: C: Metrics/AbcSize: Assignment Branch Condition size for verify_user is too high. [<2, 23, 3> 23.28/15]
  def verify_user ...
  ^^^^^^^^^^^^^^^
app/controllers/borrow_direct_controller.rb:37:3: C: Metrics/MethodLength: Method has too many lines. [27/10]
  def verify_user ...
  ^^^^^^^^^^^^^^^
app/controllers/borrow_direct_controller.rb:43:40: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      redirect_to shibboleth_login_url(:referer => request.fullpath)
                                       ^^^^^^^^^^^
app/controllers/borrow_direct_controller.rb:49:14: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render :template => "application/no_horizon_borrower_id_error"
             ^^^^^^^^^^^^
app/controllers/borrow_direct_controller.rb:49:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      render :template => "application/no_horizon_borrower_id_error"
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/borrow_direct_controller.rb:53:5: C: Style/GuardClause: Use a guard clause (return if current_user.jhed_lid) instead of wrapping the code inside a conditional expression.
    unless current_user.jhed_lid
    ^^^^^^
app/controllers/borrow_direct_controller.rb:60:15: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
      message =  <<-EOS
              ^
app/controllers/borrow_direct_controller.rb:60:16: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      message =  <<-EOS
               ^
app/controllers/borrow_direct_controller.rb:70:1: C: Naming/HeredocDelimiterNaming: Use meaningful heredoc delimiters.
      EOS
^^^^^^^^^
app/controllers/borrow_direct_controller.rb:71:25: C: Rails/OutputSafety: Tagging a string as html safe may be a security risk.
      message = message.html_safe
                        ^^^^^^^^^
app/controllers/borrow_direct_controller.rb:75:14: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render :template => "application/message", :locals =>
             ^^^^^^^^^^^^
app/controllers/borrow_direct_controller.rb:75:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      render :template => "application/message", :locals =>
                          ^^^^^^^^^^^^^^^^^^^^^
app/controllers/borrow_direct_controller.rb:75:50: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render :template => "application/message", :locals =>
                                                 ^^^^^^^^^^
app/controllers/borrow_direct_controller.rb:76:9: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
        {:title => "We're sorry, BorrowDirect is not available to your account",
        ^
app/controllers/borrow_direct_controller.rb:76:10: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        {:title => "We're sorry, BorrowDirect is not available to your account",
         ^^^^^^^^^
app/controllers/borrow_direct_controller.rb:77:10: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
         :message => message
         ^^^^^^^^^^^
app/controllers/borrow_direct_controller.rb:78:8: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
       }
       ^
app/controllers/borrow_direct_controller.rb:81:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
app/controllers/borrow_direct_controller.rb:83:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/controllers/catalog_controller.rb:2:1: C: Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
# Cheesy Rails2 engines method of adding methods to CatalogController, hope
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:5:1: C: Layout/LeadingCommentSpace: Missing space after #.
#require 'blacklight/catalog'
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:16:1: C: Metrics/ClassLength: Class has too many lines. [386/100]
class CatalogController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:26:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:29:3: C: Rails/LexicallyScopedActionFilter: email is not explicitly defined on the class.
  before_action :require_login, :only => [:sms_form, :sms_send, :email]
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:29:33: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  before_action :require_login, :only => [:sms_form, :sms_send, :email]
                                ^^^^^^^^
app/controllers/catalog_controller.rb:29:42: C: Style/SymbolArray: Use %i or %I for an array of symbols.
  before_action :require_login, :only => [:sms_form, :sms_send, :email]
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:31:3: C: Rails/LexicallyScopedActionFilter: index is not explicitly defined on the class.
  before_action :redirect_legacy_values, :only => :index
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:31:42: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  before_action :redirect_legacy_values, :only => :index
                                         ^^^^^^^^
app/controllers/catalog_controller.rb:32:3: C: Rails/LexicallyScopedActionFilter: index is not explicitly defined on the class.
  before_action :redirect_legacy_advanced_search, :only => :index
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:32:51: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  before_action :redirect_legacy_advanced_search, :only => :index
                                                  ^^^^^^^^
app/controllers/catalog_controller.rb:33:3: C: Rails/LexicallyScopedActionFilter: index, facet are not explicitly defined on the class.
  before_action :remove_unused_facet_limits, :only => [:index, :facet]
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:33:46: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  before_action :remove_unused_facet_limits, :only => [:index, :facet]
                                             ^^^^^^^^
app/controllers/catalog_controller.rb:33:55: C: Style/SymbolArray: Use %i or %I for an array of symbols.
  before_action :remove_unused_facet_limits, :only => [:index, :facet]
                                                      ^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:34:3: C: Rails/LexicallyScopedActionFilter: facet is not explicitly defined on the class.
  before_action :avoid_nonexisting_facet_drilldown, :only => :facet
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:34:53: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  before_action :avoid_nonexisting_facet_drilldown, :only => :facet
                                                    ^^^^^^^^
app/controllers/catalog_controller.rb:35:3: C: Rails/LexicallyScopedActionFilter: index, facet are not explicitly defined on the class.
  before_action :remove_bad_range_param, :only => [:index, :facet]
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:35:42: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  before_action :remove_bad_range_param, :only => [:index, :facet]
                                         ^^^^^^^^
app/controllers/catalog_controller.rb:35:51: C: Style/SymbolArray: Use %i or %I for an array of symbols.
  before_action :remove_bad_range_param, :only => [:index, :facet]
                                                  ^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:38:3: C: Rails/LexicallyScopedActionFilter: index is not explicitly defined on the class.
  before_action :spellcheck, :only => :index
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:38:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  before_action :spellcheck, :only => :index
                             ^^^^^^^^
app/controllers/catalog_controller.rb:39:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:40:3: C: Metrics/BlockLength: Block has too many lines. [232/25]
  configure_blacklight do |config| ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:42:16: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # nokogiri.
               ^
app/controllers/catalog_controller.rb:48:5: C: Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
    :qt => "search",
    ^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:48:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :qt => "search",
    ^^^^^^
app/controllers/catalog_controller.rb:48:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    :qt => "search",
           ^^^^^^^^
app/controllers/catalog_controller.rb:49:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :rows => 10,
    ^^^^^^^^
app/controllers/catalog_controller.rb:50:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :mm => "100%", # in 'all fields' def, over-ride to less than 100%
    ^^^^^^
app/controllers/catalog_controller.rb:50:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    :mm => "100%", # in 'all fields' def, over-ride to less than 100%
           ^^^^^^
app/controllers/catalog_controller.rb:51:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :"facet.limit" => 9,
    ^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:52:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :"f.format.facet.limit" => -1,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:53:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :"facet.field" => [
    ^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:54:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "format",
      ^^^^^^^^
app/controllers/catalog_controller.rb:55:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "location_facet",
      ^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:56:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "author_facet",
      ^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:57:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "organization_facet",
      ^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:58:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "language_facet",
      ^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:59:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "series_facet",
      ^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:60:7: C: Layout/LeadingCommentSpace: Missing space after #.
      #"discipline_facet",
      ^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:61:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "subject_topic_facet",
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:62:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "subject_geo_facet",
      ^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:63:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "subject_era_facet",
      ^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:64:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "instrumentation_facet"
      ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:65:7: C: Layout/FirstArrayElementIndentation: Indent the right bracket the same as the start of the line where the left bracket is.
      ]
      ^
app/controllers/catalog_controller.rb:66:6: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    }
     ^^
app/controllers/catalog_controller.rb:69:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #config.solr_path = 'select'
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:69:33: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    #config.solr_path = 'select'
                                ^
app/controllers/catalog_controller.rb:70:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:72:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #config.per_page = [10,20,50,100]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:74:121: C: Layout/LineLength: Line is too long. [150/120]
    ## Default parameters to send on single-document requests to Solr. These settings are the Blackligt defaults (see SearchHelper#solr_doc_params) or
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:77:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #config.default_document_solr_params = {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:82:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    #  # :q => '{!raw f=id v=$id}'
                                  ^
app/controllers/catalog_controller.rb:83:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #}
    ^^^^^^
app/controllers/catalog_controller.rb:83:7: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    #}
      ^^^^
app/controllers/catalog_controller.rb:84:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:109:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "format",         :label => "Format", :limit => false # no limit as we show all format values
                            ^^^^^^^^
app/controllers/catalog_controller.rb:109:47: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "format",         :label => "Format", :limit => false # no limit as we show all format values
                                              ^^^^^^^^^
app/controllers/catalog_controller.rb:109:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "format",         :label => "Format", :limit => false # no limit as we show all format values
                                                        ^^^^^^^^
app/controllers/catalog_controller.rb:109:67: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "format",         :label => "Format", :limit => false # no limit as we show all format values
                                                                  ^^^^^^^^^
app/controllers/catalog_controller.rb:109:121: C: Layout/LineLength: Line is too long. [121/120]
    config.add_facet_field  "format",         :label => "Format", :limit => false # no limit as we show all format values
                                                                                                                        ^
app/controllers/catalog_controller.rb:110:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "location_facet", :label => "Library Location", :limit => true
                            ^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:110:47: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "location_facet", :label => "Library Location", :limit => true
                                              ^^^^^^^^^
app/controllers/catalog_controller.rb:110:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "location_facet", :label => "Library Location", :limit => true
                                                        ^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:110:77: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "location_facet", :label => "Library Location", :limit => true
                                                                            ^^^^^^^^^
app/controllers/catalog_controller.rb:111:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "pub_date_sort",  :label => "Publication Year", :range => true
                            ^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:111:47: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "pub_date_sort",  :label => "Publication Year", :range => true
                                              ^^^^^^^^^
app/controllers/catalog_controller.rb:111:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "pub_date_sort",  :label => "Publication Year", :range => true
                                                        ^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:111:77: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "pub_date_sort",  :label => "Publication Year", :range => true
                                                                            ^^^^^^^^^
app/controllers/catalog_controller.rb:112:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "author_facet",   :label => "Author", :limit => true
                            ^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:112:47: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "author_facet",   :label => "Author", :limit => true
                                              ^^^^^^^^^
app/controllers/catalog_controller.rb:112:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "author_facet",   :label => "Author", :limit => true
                                                        ^^^^^^^^
app/controllers/catalog_controller.rb:112:67: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "author_facet",   :label => "Author", :limit => true
                                                                  ^^^^^^^^^
app/controllers/catalog_controller.rb:113:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "organization_facet",   :label => "Organization", :limit => true
                            ^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:113:50: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    config.add_facet_field  "organization_facet",   :label => "Organization", :limit => true
                                                 ^^
app/controllers/catalog_controller.rb:113:53: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "organization_facet",   :label => "Organization", :limit => true
                                                    ^^^^^^^^^
app/controllers/catalog_controller.rb:113:63: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "organization_facet",   :label => "Organization", :limit => true
                                                              ^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:113:79: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "organization_facet",   :label => "Organization", :limit => true
                                                                              ^^^^^^^^^
app/controllers/catalog_controller.rb:114:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "language_facet", :label => "Language", :limit => true
                            ^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:114:47: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "language_facet", :label => "Language", :limit => true
                                              ^^^^^^^^^
app/controllers/catalog_controller.rb:114:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "language_facet", :label => "Language", :limit => true
                                                        ^^^^^^^^^^
app/controllers/catalog_controller.rb:114:69: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "language_facet", :label => "Language", :limit => true
                                                                    ^^^^^^^^^
app/controllers/catalog_controller.rb:115:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "subject_topic_facet", :label => "Subject", :limit => true
                            ^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:115:52: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "subject_topic_facet", :label => "Subject", :limit => true
                                                   ^^^^^^^^^
app/controllers/catalog_controller.rb:115:62: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "subject_topic_facet", :label => "Subject", :limit => true
                                                             ^^^^^^^^^
app/controllers/catalog_controller.rb:115:73: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "subject_topic_facet", :label => "Subject", :limit => true
                                                                        ^^^^^^^^^
app/controllers/catalog_controller.rb:116:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "subject_geo_facet",   :label => "Region", :limit => true
                            ^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:116:52: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "subject_geo_facet",   :label => "Region", :limit => true
                                                   ^^^^^^^^^
app/controllers/catalog_controller.rb:116:62: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "subject_geo_facet",   :label => "Region", :limit => true
                                                             ^^^^^^^^
app/controllers/catalog_controller.rb:116:72: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "subject_geo_facet",   :label => "Region", :limit => true
                                                                       ^^^^^^^^^
app/controllers/catalog_controller.rb:117:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "subject_era_facet",   :label => "Era", :limit => true
                            ^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:117:52: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "subject_era_facet",   :label => "Era", :limit => true
                                                   ^^^^^^^^^
app/controllers/catalog_controller.rb:117:62: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "subject_era_facet",   :label => "Era", :limit => true
                                                             ^^^^^
app/controllers/catalog_controller.rb:117:69: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "subject_era_facet",   :label => "Era", :limit => true
                                                                    ^^^^^^^^^
app/controllers/catalog_controller.rb:118:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "series_facet",        :label => "Series", :limit => true
                            ^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:118:52: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "series_facet",        :label => "Series", :limit => true
                                                   ^^^^^^^^^
app/controllers/catalog_controller.rb:118:62: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "series_facet",        :label => "Series", :limit => true
                                                             ^^^^^^^^
app/controllers/catalog_controller.rb:118:72: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "series_facet",        :label => "Series", :limit => true
                                                                       ^^^^^^^^^
app/controllers/catalog_controller.rb:119:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #config.add_facet_field  "discipline_facet",    :label => "Discipline", :limit => true
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:120:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "instrumentation_facet", :label => "Musical Instrumentation", :limit => true
                            ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:120:54: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "instrumentation_facet", :label => "Musical Instrumentation", :limit => true
                                                     ^^^^^^^^^
app/controllers/catalog_controller.rb:120:64: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_facet_field  "instrumentation_facet", :label => "Musical Instrumentation", :limit => true
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:120:91: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_facet_field  "instrumentation_facet", :label => "Musical Instrumentation", :limit => true
                                                                                          ^^^^^^^^^
app/controllers/catalog_controller.rb:129:45: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_index_field 'title_display', :label => 'Title:'
                                            ^^^^^^^^^
app/controllers/catalog_controller.rb:130:50: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_index_field 'title_vern_display', :label => 'Title:'
                                                 ^^^^^^^^^
app/controllers/catalog_controller.rb:131:46: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_index_field 'author_display', :label => 'Author:'
                                             ^^^^^^^^^
app/controllers/catalog_controller.rb:132:51: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_index_field 'author_vern_display', :label => 'Author:'
                                                  ^^^^^^^^^
app/controllers/catalog_controller.rb:133:38: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_index_field 'format', :label => 'Format:'
                                     ^^^^^^^^^
app/controllers/catalog_controller.rb:134:46: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_index_field 'language_facet', :label => 'Language:'
                                             ^^^^^^^^^
app/controllers/catalog_controller.rb:135:49: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_index_field 'published_display', :label => 'Published:'
                                                ^^^^^^^^^
app/controllers/catalog_controller.rb:136:54: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_index_field 'published_vern_display', :label => 'Published:'
                                                     ^^^^^^^^^
app/controllers/catalog_controller.rb:137:50: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_index_field 'lc_callnum_display', :label => 'Call number:'
                                                 ^^^^^^^^^
app/controllers/catalog_controller.rb:141:44: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_show_field 'title_display', :label => 'Title:'
                                           ^^^^^^^^^
app/controllers/catalog_controller.rb:142:49: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_show_field 'title_vern_display', :label => 'Title:'
                                                ^^^^^^^^^
app/controllers/catalog_controller.rb:143:47: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_show_field 'subtitle_display', :label => 'Subtitle:'
                                              ^^^^^^^^^
app/controllers/catalog_controller.rb:144:52: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_show_field 'subtitle_vern_display', :label => 'Subtitle:'
                                                   ^^^^^^^^^
app/controllers/catalog_controller.rb:145:45: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_show_field 'author_display', :label => 'Author:'
                                            ^^^^^^^^^
app/controllers/catalog_controller.rb:146:50: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_show_field 'author_vern_display', :label => 'Author:'
                                                 ^^^^^^^^^
app/controllers/catalog_controller.rb:147:37: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_show_field 'format', :label => 'Format:'
                                    ^^^^^^^^^
app/controllers/catalog_controller.rb:148:51: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_show_field 'url_fulltext_display', :label => 'URL:'
                                                  ^^^^^^^^^
app/controllers/catalog_controller.rb:149:48: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_show_field 'url_suppl_display', :label => 'More Information:'
                                               ^^^^^^^^^
app/controllers/catalog_controller.rb:150:45: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_show_field 'language_facet', :label => 'Language:'
                                            ^^^^^^^^^
app/controllers/catalog_controller.rb:151:48: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_show_field 'published_display', :label => 'Published:'
                                               ^^^^^^^^^
app/controllers/catalog_controller.rb:152:53: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_show_field 'published_vern_display', :label => 'Published:'
                                                    ^^^^^^^^^
app/controllers/catalog_controller.rb:153:49: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_show_field 'lc_callnum_display', :label => 'Call number:'
                                                ^^^^^^^^^
app/controllers/catalog_controller.rb:154:37: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_show_field 'isbn_t', :label => 'ISBN:'
                                    ^^^^^^^^^
app/controllers/catalog_controller.rb:155:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:156:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:171:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_search_field "all_fields" do |field|
                            ^^^^^^^^^^^^
app/controllers/catalog_controller.rb:172:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      field.label = "Any Field"
                    ^^^^^^^^^^^
app/controllers/catalog_controller.rb:174:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :mm => "3<-1 6<80%"
        ^^^^^^
app/controllers/catalog_controller.rb:174:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :mm => "3<-1 6<80%"
               ^^^^^^^^^^^^
app/controllers/catalog_controller.rb:177:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:178:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_search_field("title") do |field|
                            ^^^^^^^
app/controllers/catalog_controller.rb:181:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :qf => "$title_qf",
        ^^^^^^
app/controllers/catalog_controller.rb:181:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :qf => "$title_qf",
               ^^^^^^^^^^^
app/controllers/catalog_controller.rb:182:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :pf => "$title_pf"
        ^^^^^^
app/controllers/catalog_controller.rb:182:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :pf => "$title_pf"
               ^^^^^^^^^^^
app/controllers/catalog_controller.rb:182:27: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        :pf => "$title_pf"
                          ^^^^^^
app/controllers/catalog_controller.rb:184:32: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      field.solr_parameters = {
                               ^^^^^^
app/controllers/catalog_controller.rb:185:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :"spellcheck.dictionary" => "title"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:185:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :"spellcheck.dictionary" => "title"
                                    ^^^^^^^
app/controllers/catalog_controller.rb:188:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:189:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_search_field("author") do |field|
                            ^^^^^^^^
app/controllers/catalog_controller.rb:189:49: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    config.add_search_field("author") do |field|
                                                ^
app/controllers/catalog_controller.rb:192:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :qf => "$author_qf",
        ^^^^^^
app/controllers/catalog_controller.rb:192:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :qf => "$author_qf",
               ^^^^^^^^^^^^
app/controllers/catalog_controller.rb:193:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :pf => "$author_pf"
        ^^^^^^
app/controllers/catalog_controller.rb:193:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :pf => "$author_pf"
               ^^^^^^^^^^^^
app/controllers/catalog_controller.rb:196:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :"spellcheck.dictionary" => "author"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:196:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :"spellcheck.dictionary" => "author"
                                    ^^^^^^^^
app/controllers/catalog_controller.rb:199:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:200:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_search_field("subject") do |field|
                            ^^^^^^^^^
app/controllers/catalog_controller.rb:203:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :qf => "$subject_qf",
        ^^^^^^
app/controllers/catalog_controller.rb:203:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :qf => "$subject_qf",
               ^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:204:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :pf => "$subject_pf"
        ^^^^^^
app/controllers/catalog_controller.rb:204:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :pf => "$subject_pf"
               ^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:207:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :"spellcheck.dictionary" => "subject"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:207:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :"spellcheck.dictionary" => "subject"
                                    ^^^^^^^^^
app/controllers/catalog_controller.rb:213:57: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # Everything else should just be one token, usually.
                                                        ^
app/controllers/catalog_controller.rb:214:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_search_field("number") do |field|
                            ^^^^^^^^
app/controllers/catalog_controller.rb:215:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      field.label = "Numbers"
                    ^^^^^^^^^
app/controllers/catalog_controller.rb:217:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :qf => "$numbers_qf",
        ^^^^^^
app/controllers/catalog_controller.rb:217:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :qf => "$numbers_qf",
               ^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:218:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :pf => "$numbers_pf"
        ^^^^^^
app/controllers/catalog_controller.rb:218:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :pf => "$numbers_pf"
               ^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:220:32: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      field.solr_parameters = {
                               ^^^^^^
app/controllers/catalog_controller.rb:221:9: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
        :mm=>"100%",
        ^^^^^^^^^^^
app/controllers/catalog_controller.rb:221:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :mm=>"100%",
        ^^^^^
app/controllers/catalog_controller.rb:221:12: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
        :mm=>"100%",
           ^^
app/controllers/catalog_controller.rb:221:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :mm=>"100%",
             ^^^^^^
app/controllers/catalog_controller.rb:221:21: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        :mm=>"100%",
                    ^
app/controllers/catalog_controller.rb:222:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :ps => "0",
        ^^^^^^
app/controllers/catalog_controller.rb:222:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :ps => "0",
               ^^^
app/controllers/catalog_controller.rb:222:20: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        :ps => "0",
                   ^^^^^^
app/controllers/catalog_controller.rb:223:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :spellcheck => "false"
        ^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:223:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :spellcheck => "false"
                       ^^^^^^^
app/controllers/catalog_controller.rb:224:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      }
       ^^^^
app/controllers/catalog_controller.rb:226:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:228:41: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # that hardcodes in the facet limit.
                                        ^
app/controllers/catalog_controller.rb:229:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_search_field("journal_title") do |field|
                            ^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:232:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :qf => "$title_qf",
        ^^^^^^
app/controllers/catalog_controller.rb:232:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :qf => "$title_qf",
               ^^^^^^^^^^^
app/controllers/catalog_controller.rb:233:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :pf => "$title_pf" ,
        ^^^^^^
app/controllers/catalog_controller.rb:233:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :pf => "$title_pf" ,
               ^^^^^^^^^^^
app/controllers/catalog_controller.rb:233:27: C: Layout/SpaceBeforeComma: Space found before comma.
        :pf => "$title_pf" ,
                          ^
app/controllers/catalog_controller.rb:233:28: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
        :pf => "$title_pf" ,
                           ^
app/controllers/catalog_controller.rb:235:32: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      field.solr_parameters = {
                               ^^^^^^
app/controllers/catalog_controller.rb:236:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :"spellcheck.dictionary" => "title"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:236:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :"spellcheck.dictionary" => "title"
                                    ^^^^^^^
app/controllers/catalog_controller.rb:239:68: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # make it not show up for now, which isn't perfect, but okay.
                                                                   ^
app/controllers/catalog_controller.rb:242:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:243:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_search_field("publisher") do |field|
                            ^^^^^^^^^^^
app/controllers/catalog_controller.rb:244:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      field.label = "Publisher"
                    ^^^^^^^^^^^
app/controllers/catalog_controller.rb:245:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      field.qt = "search"
                 ^^^^^^^^
app/controllers/catalog_controller.rb:248:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :qf => "publisher_t",
        ^^^^^^
app/controllers/catalog_controller.rb:248:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :qf => "publisher_t",
               ^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:249:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :pf => "publisher_t^10"
        ^^^^^^
app/controllers/catalog_controller.rb:249:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :pf => "publisher_t^10"
               ^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:253:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:255:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_search_field("series") do |field|
                            ^^^^^^^^
app/controllers/catalog_controller.rb:258:45: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      field.include_in_simple_select = false
                                            ^^^^^^
app/controllers/catalog_controller.rb:260:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :qf => "$series_qf",
        ^^^^^^
app/controllers/catalog_controller.rb:260:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :qf => "$series_qf",
               ^^^^^^^^^^^^
app/controllers/catalog_controller.rb:261:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :pf => "$series_pf"
        ^^^^^^
app/controllers/catalog_controller.rb:261:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :pf => "$series_pf"
               ^^^^^^^^^^^^
app/controllers/catalog_controller.rb:262:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      }
       ^^^^^^
app/controllers/catalog_controller.rb:264:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:266:23: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # Hidden searches.
                      ^
app/controllers/catalog_controller.rb:270:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:271:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_search_field("isbn") do |field|
                            ^^^^^^
app/controllers/catalog_controller.rb:272:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      field.label = "ISBN"
                    ^^^^^^
app/controllers/catalog_controller.rb:273:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      field.qt = "search"
                 ^^^^^^^^
app/controllers/catalog_controller.rb:277:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :qf => "isbn_t",
        ^^^^^^
app/controllers/catalog_controller.rb:277:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :qf => "isbn_t",
               ^^^^^^^^
app/controllers/catalog_controller.rb:277:25: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        :qf => "isbn_t",
                        ^
app/controllers/catalog_controller.rb:278:9: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
        :pf =>"",
        ^^^^^^^^
app/controllers/catalog_controller.rb:278:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :pf =>"",
        ^^^^^^
app/controllers/catalog_controller.rb:278:13: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
        :pf =>"",
            ^^
app/controllers/catalog_controller.rb:278:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :pf =>"",
              ^^
app/controllers/catalog_controller.rb:278:18: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        :pf =>"",
                 ^
app/controllers/catalog_controller.rb:279:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :spellcheck => "false"
        ^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:279:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :spellcheck => "false"
                       ^^^^^^^
app/controllers/catalog_controller.rb:282:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:284:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_search_field("issn") do |field|
                            ^^^^^^
app/controllers/catalog_controller.rb:290:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :qf => "issn issn_related",
        ^^^^^^
app/controllers/catalog_controller.rb:290:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :qf => "issn issn_related",
               ^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:290:36: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        :qf => "issn issn_related",
                                   ^
app/controllers/catalog_controller.rb:291:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :pf => "",
        ^^^^^^
app/controllers/catalog_controller.rb:291:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :pf => "",
               ^^
app/controllers/catalog_controller.rb:291:19: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        :pf => "",
                  ^
app/controllers/catalog_controller.rb:292:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :spellcheck => "false"
        ^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:292:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :spellcheck => "false"
                       ^^^^^^^
app/controllers/catalog_controller.rb:295:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:296:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_search_field("oclcnum") do |field|
                            ^^^^^^^^^
app/controllers/catalog_controller.rb:296:50: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    config.add_search_field("oclcnum") do |field|
                                                 ^
app/controllers/catalog_controller.rb:302:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :qf => "oclcnum_t",
        ^^^^^^
app/controllers/catalog_controller.rb:302:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :qf => "oclcnum_t",
               ^^^^^^^^^^^
app/controllers/catalog_controller.rb:302:28: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        :qf => "oclcnum_t",
                           ^
app/controllers/catalog_controller.rb:303:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :pf => "",
        ^^^^^^
app/controllers/catalog_controller.rb:303:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :pf => "",
               ^^
app/controllers/catalog_controller.rb:303:19: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        :pf => "",
                  ^
app/controllers/catalog_controller.rb:304:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :spellcheck => "false"
        ^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:304:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :spellcheck => "false"
                       ^^^^^^^
app/controllers/catalog_controller.rb:307:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:308:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.add_search_field("call_number") do |field|
                            ^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:310:15: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      field.qt  = "search"
              ^
app/controllers/catalog_controller.rb:310:17: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
      field.qt  = "search"
                ^
app/controllers/catalog_controller.rb:310:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      field.qt  = "search"
                  ^^^^^^^^
app/controllers/catalog_controller.rb:313:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :qf => "local_call_number_t",
        ^^^^^^
app/controllers/catalog_controller.rb:313:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :qf => "local_call_number_t",
               ^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:313:38: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        :qf => "local_call_number_t",
                                     ^
app/controllers/catalog_controller.rb:314:9: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
        :mm=>"100%",
        ^^^^^^^^^^^
app/controllers/catalog_controller.rb:314:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :mm=>"100%",
        ^^^^^
app/controllers/catalog_controller.rb:314:12: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
        :mm=>"100%",
           ^^
app/controllers/catalog_controller.rb:314:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :mm=>"100%",
             ^^^^^^
app/controllers/catalog_controller.rb:314:21: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        :mm=>"100%",
                    ^
app/controllers/catalog_controller.rb:315:9: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
        :pf =>"local_call_number_t^100",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:315:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :pf =>"local_call_number_t^100",
        ^^^^^^
app/controllers/catalog_controller.rb:315:13: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
        :pf =>"local_call_number_t^100",
            ^^
app/controllers/catalog_controller.rb:315:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :pf =>"local_call_number_t^100",
              ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:315:41: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        :pf =>"local_call_number_t^100",
                                        ^
app/controllers/catalog_controller.rb:316:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :ps => "0",
        ^^^^^^
app/controllers/catalog_controller.rb:316:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :ps => "0",
               ^^^
app/controllers/catalog_controller.rb:317:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :spellcheck => "false"
        ^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:317:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :spellcheck => "false"
                       ^^^^^^^
app/controllers/catalog_controller.rb:320:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:321:77: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_sort_field 'score desc, pub_date_sort desc, title_sort asc', :label => 'relevance', :default => true
                                                                            ^^^^^^^^^
app/controllers/catalog_controller.rb:321:100: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_sort_field 'score desc, pub_date_sort desc, title_sort asc', :label => 'relevance', :default => true
                                                                                                   ^^^^^^^^^^^
app/controllers/catalog_controller.rb:322:65: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_sort_field 'pub_date_sort desc, title_sort asc', :label => 'year'
                                                                ^^^^^^^^^
app/controllers/catalog_controller.rb:323:62: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_sort_field 'author_sort asc, title_sort asc', :label => 'author'
                                                             ^^^^^^^^^
app/controllers/catalog_controller.rb:324:65: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    config.add_sort_field 'title_sort asc, pub_date_sort desc', :label => 'title'
                                                                ^^^^^^^^^
app/controllers/catalog_controller.rb:325:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:329:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:330:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:335:76: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # and Blacklight for individual search types, sorry it's a bit fragile.
                                                                           ^
app/controllers/catalog_controller.rb:337:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :title_qf => [
      ^^^^^^^^^^^^
app/controllers/catalog_controller.rb:338:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "title_unstem^80",
        ^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:339:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "title1_unstem^60",
        ^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:340:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "title2_unstem^40",
        ^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:341:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "title3_unstem^30",
        ^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:342:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "title_series_unstem^25"
        ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:344:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:345:7: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
      :subject_qf  => "subject_unstem^40",
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:345:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :subject_qf  => "subject_unstem^40",
      ^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:345:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :subject_qf  => "subject_unstem^40",
                      ^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:346:7: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
      :series_qf   => "title_series_unstem^10",
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:346:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :series_qf   => "title_series_unstem^10",
      ^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:346:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :series_qf   => "title_series_unstem^10",
                      ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:349:62: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # in solrconfig.xml, which include some stemmed fields.
                                                             ^
app/controllers/catalog_controller.rb:350:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :qf => [
      ^^^^^^
app/controllers/catalog_controller.rb:366:36: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        'text_extra_boost_unstem^6'
                                   ^^^^^^^^
app/controllers/catalog_controller.rb:369:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:372:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :form_solr_parameters => {
      ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:373:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "facet.field" => ["format", "location_facet", "language_facet", "instrumentation_facet"],
        ^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:373:26: C: Style/WordArray: Use %w or %W for an array of words.
        "facet.field" => ["format", "location_facet", "language_facet", "instrumentation_facet"],
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:373:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "facet.field" => ["format", "location_facet", "language_facet", "instrumentation_facet"],
                          ^^^^^^^^
app/controllers/catalog_controller.rb:373:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "facet.field" => ["format", "location_facet", "language_facet", "instrumentation_facet"],
                                    ^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:373:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "facet.field" => ["format", "location_facet", "language_facet", "instrumentation_facet"],
                                                      ^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:373:73: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "facet.field" => ["format", "location_facet", "language_facet", "instrumentation_facet"],
                                                                        ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:374:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "facet.limit" => -1, # return all facet values
        ^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:375:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "facet.sort" => "index" # sort by byte order of values
        ^^^^^^^^^^^^
app/controllers/catalog_controller.rb:375:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "facet.sort" => "index" # sort by byte order of values
                        ^^^^^^^
app/controllers/catalog_controller.rb:377:5: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    :advanced_parse_q => true,
    ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:377:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :advanced_parse_q => true,
    ^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:378:5: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    :form_facet_partial => "advanced_search_facets_as_select"
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:378:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :form_facet_partial => "advanced_search_facets_as_select"
    ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:378:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    :form_facet_partial => "advanced_search_facets_as_select"
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:382:81: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # show page. Because we use custom item/copy-specific SMS functions instead.
                                                                                ^
app/controllers/catalog_controller.rb:384:88: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    config.show.document_actions[:sms].if = false if config.show.document_actions[:sms]
                                                                                       ^
app/controllers/catalog_controller.rb:385:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:389:21: C: Style/SymbolArray: Use %i or %I for an array of symbols.
    desired_order = [:bookmark, :citation, :refworks, :endnote, :email, :librarian_view]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:391:26: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    desired_order.concat(  config.show.document_actions.keys - desired_order  )
                         ^
app/controllers/catalog_controller.rb:391:26: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    desired_order.concat(  config.show.document_actions.keys - desired_order  )
                         ^^
app/controllers/catalog_controller.rb:391:77: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    desired_order.concat(  config.show.document_actions.keys - desired_order  )
                                                                            ^
app/controllers/catalog_controller.rb:391:77: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    desired_order.concat(  config.show.document_actions.keys - desired_order  )
                                                                            ^^
app/controllers/catalog_controller.rb:402:58: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # so we'll just make sure the logic here reflects that.
                                                         ^
app/controllers/catalog_controller.rb:407:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #self.search_params_logic += (SearchBuilder.default_processor_chain - self.search_params_logic)
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:409:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:410:3: C: Metrics/AbcSize: Assignment Branch Condition size for copy is too high. [<4, 24, 2> 24.41/15]
  def copy ...
  ^^^^^^^^
app/controllers/catalog_controller.rb:413:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:415:14: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render(:status => 404, :text => "Horizon copy not found: #{ActionController::Base.helpers.sanitize params[:copy_id]}") and return
             ^^^^^^^^^^
app/controllers/catalog_controller.rb:415:25: C: Rails/HttpStatus: Prefer :not_found over 404 to define HTTP status code.
      render(:status => 404, :text => "Horizon copy not found: #{ActionController::Base.helpers.sanitize params[:copy_id]}") and return
                        ^^^
app/controllers/catalog_controller.rb:415:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render(:status => 404, :text => "Horizon copy not found: #{ActionController::Base.helpers.sanitize params[:copy_id]}") and return
                             ^^^^^^^^
app/controllers/catalog_controller.rb:415:121: C: Layout/LineLength: Line is too long. [135/120]
      render(:status => 404, :text => "Horizon copy not found: #{ActionController::Base.helpers.sanitize params[:copy_id]}") and return
                                                                                                                        ^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:419:20: C: Layout/SpaceInsideBlockBraces: Space inside empty braces detected.
      format.html { }
                   ^
app/controllers/catalog_controller.rb:420:36: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      format.dlf_expanded { render :text =>  @document.to_dlf_expanded_for_holdingset(params[:copy_id]) }
                                   ^^^^^^^^
app/controllers/catalog_controller.rb:420:42: C: Layout/SpaceAroundOperators: Operator => should be surrounded by a single space.
      format.dlf_expanded { render :text =>  @document.to_dlf_expanded_for_holdingset(params[:copy_id]) }
                                         ^^
app/controllers/catalog_controller.rb:420:44: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      format.dlf_expanded { render :text =>  @document.to_dlf_expanded_for_holdingset(params[:copy_id]) }
                                           ^
app/controllers/catalog_controller.rb:421:27: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      format.xml { render :text =>  @document.to_dlf_expanded_for_holdingset(params[:copy_id]) }
                          ^^^^^^^^
app/controllers/catalog_controller.rb:421:35: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      format.xml { render :text =>  @document.to_dlf_expanded_for_holdingset(params[:copy_id]) }
                                  ^
app/controllers/catalog_controller.rb:422:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
app/controllers/catalog_controller.rb:425:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:426:73: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # custom action to send SMS for a particular item in a particular bib.
                                                                        ^
app/controllers/catalog_controller.rb:434:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:435:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:436:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #POST for sending
  ^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:437:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def sms_send
  ^^^^^^^^^^^^
app/controllers/catalog_controller.rb:437:3: C: Metrics/AbcSize: Assignment Branch Condition size for sms_send is too high. [<13, 44, 11> 47.18/15]
  def sms_send ...
  ^^^^^^^^^^^^
app/controllers/catalog_controller.rb:437:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for sms_send is too high. [10/7]
  def sms_send ...
  ^^^^^^^^^^^^
app/controllers/catalog_controller.rb:437:3: C: Metrics/MethodLength: Method has too many lines. [25/10]
  def sms_send ...
  ^^^^^^^^^^^^
app/controllers/catalog_controller.rb:437:3: C: Metrics/PerceivedComplexity: Perceived complexity for sms_send is too high. [11/7]
  def sms_send ...
  ^^^^^^^^^^^^
app/controllers/catalog_controller.rb:440:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      flash[:error] = "Sorry, record not found."
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:444:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:445:43: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    @holding = @document.to_holdings.find {|h| h.id == params[:holding_id] }
                                          ^^
app/controllers/catalog_controller.rb:446:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:448:22: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    url_gen_params = {:host => request.host_with_port, :protocol => request.protocol}
                     ^
app/controllers/catalog_controller.rb:448:23: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    url_gen_params = {:host => request.host_with_port, :protocol => request.protocol}
                      ^^^^^^^^
app/controllers/catalog_controller.rb:448:56: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    url_gen_params = {:host => request.host_with_port, :protocol => request.protocol}
                                                       ^^^^^^^^^^^^
app/controllers/catalog_controller.rb:448:85: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    url_gen_params = {:host => request.host_with_port, :protocol => request.protocol}
                                                                                    ^
app/controllers/catalog_controller.rb:451:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:452:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @error_message = "Sorry, record not found." if @holding.nil?
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:453:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @error_message = "Please select a carrier."     if params[:carrier].blank?
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:454:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @error_message = "Please enter a 10-digit phone number" if phone_num.blank?
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:457:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      render "sms_form"
             ^^^^^^^^^^
app/controllers/catalog_controller.rb:459:49: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      JhSmsSend.sms_record(@document, @holding, {:to => phone_num, :carrier => params[:carrier], :email_from_host => email_from, :url_gen_params => url_gen_params}).deliver_now
                                                ^
app/controllers/catalog_controller.rb:459:50: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      JhSmsSend.sms_record(@document, @holding, {:to => phone_num, :carrier => params[:carrier], :email_from_host => email_from, :url_gen_params => url_gen_params}).deliver_now
                                                 ^^^^^^
app/controllers/catalog_controller.rb:459:68: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      JhSmsSend.sms_record(@document, @holding, {:to => phone_num, :carrier => params[:carrier], :email_from_host => email_from, :url_gen_params => url_gen_params}).deliver_now
                                                                   ^^^^^^^^^^^
app/controllers/catalog_controller.rb:459:98: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      JhSmsSend.sms_record(@document, @holding, {:to => phone_num, :carrier => params[:carrier], :email_from_host => email_from, :url_gen_params => url_gen_params}).deliver_now
                                                                                                 ^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:459:121: C: Layout/LineLength: Line is too long. [176/120]
      JhSmsSend.sms_record(@document, @holding, {:to => phone_num, :carrier => params[:carrier], :email_from_host => email_from, :url_gen_params => url_gen_params}).deliver_now
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:459:130: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      JhSmsSend.sms_record(@document, @holding, {:to => phone_num, :carrier => params[:carrier], :email_from_host => email_from, :url_gen_params => url_gen_params}).deliver_now
                                                                                                                                 ^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:459:163: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      JhSmsSend.sms_record(@document, @holding, {:to => phone_num, :carrier => params[:carrier], :email_from_host => email_from, :url_gen_params => url_gen_params}).deliver_now
                                                                                                                                                                  ^
app/controllers/catalog_controller.rb:463:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        render "sms_form"
               ^^^^^^^^^^
app/controllers/catalog_controller.rb:466:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        redirect_to referer, :flash => {:success => @success_message}
                             ^^^^^^^^^
app/controllers/catalog_controller.rb:466:40: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
        redirect_to referer, :flash => {:success => @success_message}
                                       ^
app/controllers/catalog_controller.rb:466:41: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        redirect_to referer, :flash => {:success => @success_message}
                                        ^^^^^^^^^^^
app/controllers/catalog_controller.rb:466:69: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
        redirect_to referer, :flash => {:success => @success_message}
                                                                    ^
app/controllers/catalog_controller.rb:468:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    end
       ^^^^
app/controllers/catalog_controller.rb:473:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render :template => 'rails_stackview/browser', :locals => {:origin_sort_key => params["origin_sort_key"] || "M"}
           ^^^^^^^^^^^^
app/controllers/catalog_controller.rb:473:52: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render :template => 'rails_stackview/browser', :locals => {:origin_sort_key => params["origin_sort_key"] || "M"}
                                                   ^^^^^^^^^^
app/controllers/catalog_controller.rb:473:63: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    render :template => 'rails_stackview/browser', :locals => {:origin_sort_key => params["origin_sort_key"] || "M"}
                                                              ^
app/controllers/catalog_controller.rb:473:64: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render :template => 'rails_stackview/browser', :locals => {:origin_sort_key => params["origin_sort_key"] || "M"}
                                                               ^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:473:91: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    render :template => 'rails_stackview/browser', :locals => {:origin_sort_key => params["origin_sort_key"] || "M"}
                                                                                          ^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:473:113: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    render :template => 'rails_stackview/browser', :locals => {:origin_sort_key => params["origin_sort_key"] || "M"}
                                                                                                                ^^^
app/controllers/catalog_controller.rb:473:116: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    render :template => 'rails_stackview/browser', :locals => {:origin_sort_key => params["origin_sort_key"] || "M"}
                                                                                                                   ^
app/controllers/catalog_controller.rb:480:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render :partial => "shelfbrowse_item", :locals => {:document => doc, :call_number => params[:sort_key_display]}
           ^^^^^^^^^^^
app/controllers/catalog_controller.rb:480:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    render :partial => "shelfbrowse_item", :locals => {:document => doc, :call_number => params[:sort_key_display]}
                       ^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:480:44: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render :partial => "shelfbrowse_item", :locals => {:document => doc, :call_number => params[:sort_key_display]}
                                           ^^^^^^^^^^
app/controllers/catalog_controller.rb:480:55: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    render :partial => "shelfbrowse_item", :locals => {:document => doc, :call_number => params[:sort_key_display]}
                                                      ^
app/controllers/catalog_controller.rb:480:56: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render :partial => "shelfbrowse_item", :locals => {:document => doc, :call_number => params[:sort_key_display]}
                                                       ^^^^^^^^^^^^
app/controllers/catalog_controller.rb:480:74: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render :partial => "shelfbrowse_item", :locals => {:document => doc, :call_number => params[:sort_key_display]}
                                                                         ^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:480:115: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    render :partial => "shelfbrowse_item", :locals => {:document => doc, :call_number => params[:sort_key_display]}
                                                                                                                  ^
app/controllers/catalog_controller.rb:482:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:485:4: C: Layout/CommentIndentation: Incorrect indentation detected (column 3 instead of 2).
   # Blacklight will use this to determine how many values
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:485:59: C: Layout/TrailingWhitespace: Trailing whitespace detected.
   # Blacklight will use this to determine how many values
                                                          ^^
app/controllers/catalog_controller.rb:486:50: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # to show at once on the individual facet page.
                                                 ^^^
app/controllers/catalog_controller.rb:487:23: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  def facet_list_limit
                      ^^
app/controllers/catalog_controller.rb:488:7: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    20
      ^^
app/controllers/catalog_controller.rb:489:6: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  end
     ^
app/controllers/catalog_controller.rb:490:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:491:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:494:23: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  helper Module.new do
                      ^^^^^^^^^^
app/controllers/catalog_controller.rb:496:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      results = super
                     ^^^^^^
app/controllers/catalog_controller.rb:497:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      results[:suppress_spellcheck] = "1"
                                      ^^^
app/controllers/catalog_controller.rb:497:42: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      results[:suppress_spellcheck] = "1"
                                         ^^^^^^
app/controllers/catalog_controller.rb:498:7: C: Style/RedundantReturn: Redundant return detected.
      return results
      ^^^^^^
app/controllers/catalog_controller.rb:499:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    end
       ^^^^
app/controllers/catalog_controller.rb:500:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:502:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      results = super
                     ^^^^^^
app/controllers/catalog_controller.rb:503:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      results[:suppress_spellcheck] = "1"
                                      ^^^
app/controllers/catalog_controller.rb:503:42: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      results[:suppress_spellcheck] = "1"
                                         ^^^^^^
app/controllers/catalog_controller.rb:504:7: C: Style/RedundantReturn: Redundant return detected.
      return results
      ^^^^^^
app/controllers/catalog_controller.rb:505:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    end
       ^^^^^^
app/controllers/catalog_controller.rb:506:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:508:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:509:3: C: Metrics/AbcSize: Assignment Branch Condition size for redirect_legacy_values is too high. [<4, 14, 4> 15.1/15]
  def redirect_legacy_values ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:511:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:514:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # and stop further processing.
                                  ^
app/controllers/catalog_controller.rb:515:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:516:80: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if params[:f] && params[:f][:format] && (index = params[:f][:format].index("Serial"))
                                                                               ^^^^^^^^
app/controllers/catalog_controller.rb:517:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      params[:f][:format][index] = "Journal/Newspaper"
                                   ^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:518:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:521:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/catalog_controller.rb:525:3: C: Metrics/AbcSize: Assignment Branch Condition size for redirect_legacy_advanced_search is too high. [<3, 17, 4> 17.72/15]
  def redirect_legacy_advanced_search ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:525:3: C: Metrics/MethodLength: Method has too many lines. [12/10]
  def redirect_legacy_advanced_search ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:526:5: C: Style/GuardClause: Use a guard clause (return unless params[:f_inclusive] && params[:f_inclusive].respond_to?(:each_pair)) instead of wrapping the code inside a conditional expression.
    if params[:f_inclusive] && params[:f_inclusive].respond_to?(:each_pair)
    ^^
app/controllers/catalog_controller.rb:526:8: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
    if params[:f_inclusive] && params[:f_inclusive].respond_to?(:each_pair)
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:530:9: C: Style/Next: Use next to skip iteration.
        if value.kind_of? Hash
        ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:530:18: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
        if value.kind_of? Hash
                 ^^^^^^^^
app/controllers/catalog_controller.rb:540:42: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        redirect_to url_for(params.merge(:only_path => true).permit(:only_path => true)), :status => :moved_permanently
                                         ^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:540:69: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        redirect_to url_for(params.merge(:only_path => true).permit(:only_path => true)), :status => :moved_permanently
                                                                    ^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:540:91: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        redirect_to url_for(params.merge(:only_path => true).permit(:only_path => true)), :status => :moved_permanently
                                                                                          ^^^^^^^^^^
app/controllers/catalog_controller.rb:546:90: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # if someone requests a facet limit for a facet that doens't exist (but maybe used to),
                                                                                         ^
app/controllers/catalog_controller.rb:548:76: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # include the facet limit in the Solr request anyway resulting in 0 hits.
                                                                           ^
app/controllers/catalog_controller.rb:550:3: C: Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 0).
  # facet is basically a no-op.
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:550:32: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # facet is basically a no-op.
                               ^
app/controllers/catalog_controller.rb:551:1: C: Layout/IndentationConsistency: Inconsistent indentation detected.
begin ...
^^^^^
app/controllers/catalog_controller.rb:551:1: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
begin

app/controllers/catalog_controller.rb:552:3: C: Metrics/AbcSize: Assignment Branch Condition size for remove_unused_facet_limits is too high. [<2, 17, 3> 17.38/15]
  def remove_unused_facet_limits ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:554:7: C: Layout/SpaceAfterNot: Do not leave space between ! and its argument.
      ! blacklight_config.facet_fields.keys.include? limited_facet
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:554:67: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      ! blacklight_config.facet_fields.keys.include? limited_facet
                                                                  ^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:556:5: C: Style/GuardClause: Use a guard clause (return unless bad_facets.length > 0) instead of wrapping the code inside a conditional expression.
    if bad_facets.length > 0
    ^^
app/controllers/catalog_controller.rb:556:8: C: Style/NumericPredicate: Use bad_facets.length.positive? instead of bad_facets.length > 0.
    if bad_facets.length > 0
       ^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:556:8: C: Style/ZeroLengthPredicate: Use !empty? instead of length > 0.
    if bad_facets.length > 0
       ^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:558:23: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # without those.
                      ^
app/controllers/catalog_controller.rb:560:39: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      redirect_to_params params.merge(:f => f).permit(:f => f)
                                      ^^^^^
app/controllers/catalog_controller.rb:560:55: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      redirect_to_params params.merge(:f => f).permit(:f => f)
                                                      ^^^^^
app/controllers/catalog_controller.rb:567:3: C: Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 0).
  # exception, cluttering up our error logs.
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:567:45: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # exception, cluttering up our error logs.
                                            ^
app/controllers/catalog_controller.rb:568:1: C: Layout/IndentationConsistency: Inconsistent indentation detected.
begin ...
^^^^^
app/controllers/catalog_controller.rb:568:1: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
begin

app/controllers/catalog_controller.rb:571:5: C: Style/GuardClause: Use a guard clause (return if blacklight_config.facet_fields.keys.include? facet) instead of wrapping the code inside a conditional expression.
    unless blacklight_config.facet_fields.keys.include? facet
    ^^^^^^
app/controllers/catalog_controller.rb:572:14: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render :status => 404, :text => "No such facet: #{ActionController::Base.helpers.sanitize facet}"
             ^^^^^^^^^^
app/controllers/catalog_controller.rb:572:25: C: Rails/HttpStatus: Prefer :not_found over 404 to define HTTP status code.
      render :status => 404, :text => "No such facet: #{ActionController::Base.helpers.sanitize facet}"
                        ^^^
app/controllers/catalog_controller.rb:572:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render :status => 404, :text => "No such facet: #{ActionController::Base.helpers.sanitize facet}"
                             ^^^^^^^^
app/controllers/catalog_controller.rb:573:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    end
       ^
app/controllers/catalog_controller.rb:577:70: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Googlebot is sending queries with empty or string 'range' params,
                                                                     ^
app/controllers/catalog_controller.rb:583:5: C: Style/GuardClause: Use a guard clause (return unless params.has_key?(:range) && !params[:range].kind_of?(Hash)) instead of wrapping the code inside a conditional expression.
    if params.has_key?(:range) && !params[:range].kind_of?(Hash)
    ^^
app/controllers/catalog_controller.rb:583:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if params.has_key?(:range) && !params[:range].kind_of?(Hash)
    ^^
app/controllers/catalog_controller.rb:583:15: C: Style/PreferredHashMethods: Use Hash#key? instead of Hash#has_key?.
    if params.has_key?(:range) && !params[:range].kind_of?(Hash)
              ^^^^^^^^
app/controllers/catalog_controller.rb:583:51: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
    if params.has_key?(:range) && !params[:range].kind_of?(Hash)
                                                  ^^^^^^^^
app/controllers/catalog_controller.rb:590:5: C: Style/GuardClause: Use a guard clause (return unless params[:format] == "json" || request.format == "application/json") instead of wrapping the code inside a conditional expression.
    if params[:format] == "json" || request.format == "application/json"
    ^^
app/controllers/catalog_controller.rb:590:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if params[:format] == "json" || request.format == "application/json"
                          ^^^^^^
app/controllers/catalog_controller.rb:590:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if params[:format] == "json" || request.format == "application/json"
                                                      ^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:591:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      response.headers["Access-Control-Allow-Origin"] = "*"
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:591:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      response.headers["Access-Control-Allow-Origin"] = "*"
                                                        ^^^
app/controllers/catalog_controller.rb:597:19: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Rails will do.
                  ^
app/controllers/catalog_controller.rb:600:38: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    redirect_to url_for(params.merge(:only_path => true).permit(:only_path => true))
                                     ^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:600:65: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    redirect_to url_for(params.merge(:only_path => true).permit(:only_path => true))
                                                                ^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:604:3: C: Metrics/AbcSize: Assignment Branch Condition size for require_login is too high. [<7, 16, 11> 20.64/15]
  def require_login ...
  ^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:604:3: C: Metrics/MethodLength: Method has too many lines. [18/10]
  def require_login ...
  ^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:604:3: C: Metrics/PerceivedComplexity: Perceived complexity for require_login is too high. [9/7]
  def require_login ...
  ^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:605:5: C: Style/GuardClause: Use a guard clause (return if current_user) instead of wrapping the code inside a conditional expression.
    unless current_user
    ^^^^^^
app/controllers/catalog_controller.rb:606:7: C: Style/GuardClause: Use a guard clause (flash[:notice] = "Please log in." and raise Blacklight::Exceptions::AccessDenied unless request.xhr?) instead of wrapping the code inside a conditional expression.
      if request.xhr?
      ^^
app/controllers/catalog_controller.rb:615:41: C: Style/AndOr: Use || instead of or.
        elsif action_name == 'sms_form' or action_name == 'sms_send'
                                        ^^
app/controllers/catalog_controller.rb:624:121: C: Layout/LineLength: Line is too long. [171/120]
        body = "<span data-force-login='#{login_url}' data-request-path='#{request.path}'>Request requires authentication, which can't be done over an xhr request.</span>"
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:626:16: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        render :status=> 403, :format => :html, :text => body
               ^^^^^^^^^
app/controllers/catalog_controller.rb:626:23: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
        render :status=> 403, :format => :html, :text => body
                      ^^
app/controllers/catalog_controller.rb:626:26: C: Rails/HttpStatus: Prefer :forbidden over 403 to define HTTP status code.
        render :status=> 403, :format => :html, :text => body
                         ^^^
app/controllers/catalog_controller.rb:626:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        render :status=> 403, :format => :html, :text => body
                              ^^^^^^^^^^
app/controllers/catalog_controller.rb:626:49: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        render :status=> 403, :format => :html, :text => body
                                                ^^^^^^^^
app/controllers/catalog_controller.rb:629:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        flash[:notice] = "Please log in." and raise Blacklight::Exceptions::AccessDenied
                         ^^^^^^^^^^^^^^^^
app/controllers/catalog_controller.rb:633:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/disclaimer_controller.rb:8:3: C: Rails/LexicallyScopedActionFilter: search is not explicitly defined on the class.
  before_action :spellcheck, :only => [:index, :search]
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/disclaimer_controller.rb:8:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  before_action :spellcheck, :only => [:index, :search]
                             ^^^^^^^^
app/controllers/disclaimer_controller.rb:8:39: C: Style/SymbolArray: Use %i or %I for an array of symbols.
  before_action :spellcheck, :only => [:index, :search]
                                      ^^^^^^^^^^^^^^^^^
app/controllers/disclaimer_controller.rb:11:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render :action => :index
           ^^^^^^^^^^
app/controllers/disclaimer_controller.rb:13:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/controllers/info_controller.rb:4:27: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_id.
    @status_description = IlsStatus.find_by_id(params[:id])
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/info_controller.rb:10:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/info_controller.rb:12:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #fall through to view
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/info_controller.rb:14:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/info_controller.rb:16:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    render "partial_wrapper", :locals => {:partial => "libraries"}
           ^^^^^^^^^^^^^^^^^
app/controllers/info_controller.rb:16:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render "partial_wrapper", :locals => {:partial => "libraries"}
                              ^^^^^^^^^^
app/controllers/info_controller.rb:16:42: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    render "partial_wrapper", :locals => {:partial => "libraries"}
                                         ^
app/controllers/info_controller.rb:16:43: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render "partial_wrapper", :locals => {:partial => "libraries"}
                                          ^^^^^^^^^^^
app/controllers/info_controller.rb:16:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    render "partial_wrapper", :locals => {:partial => "libraries"}
                                                      ^^^^^^^^^^^
app/controllers/info_controller.rb:16:66: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    render "partial_wrapper", :locals => {:partial => "libraries"}
                                                                 ^
app/controllers/info_controller.rb:18:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/info_controller.rb:20:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    render "partial_wrapper", :locals => {:partial => "research_links"}
           ^^^^^^^^^^^^^^^^^
app/controllers/info_controller.rb:20:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render "partial_wrapper", :locals => {:partial => "research_links"}
                              ^^^^^^^^^^
app/controllers/info_controller.rb:20:42: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    render "partial_wrapper", :locals => {:partial => "research_links"}
                                         ^
app/controllers/info_controller.rb:20:43: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render "partial_wrapper", :locals => {:partial => "research_links"}
                                          ^^^^^^^^^^^
app/controllers/info_controller.rb:20:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    render "partial_wrapper", :locals => {:partial => "research_links"}
                                                      ^^^^^^^^^^^^^^^^
app/controllers/info_controller.rb:20:71: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    render "partial_wrapper", :locals => {:partial => "research_links"}
                                                                      ^
app/controllers/info_controller.rb:22:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/info_controller.rb:23:3: C: Style/EmptyMethod: Put empty method definitions on a single line.
  def useful_links ...
  ^^^^^^^^^^^^^^^^
app/controllers/info_controller.rb:25:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/info_controller.rb:26:3: C: Style/EmptyMethod: Put empty method definitions on a single line.
  def credits ...
  ^^^^^^^^^^^
app/controllers/info_controller.rb:28:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/map_controller.rb:2:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
app/controllers/map_controller.rb:8:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/map_controller.rb:9:60: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    @map_info = StackmapFetcher.new(holding).fetch_map_info
                                                           ^^
app/controllers/map_controller.rb:12:39: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # that will be inserted into page.
                                      ^
app/controllers/map_controller.rb:13:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render :layout => !request.xhr?
           ^^^^^^^^^^
app/controllers/map_controller.rb:15:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/map_controller.rb:17:1: C: Layout/TrailingEmptyLines: 1 trailing blank lines detected.
app/controllers/multi_search_controller.rb:4:54: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# searching, including custom logic added by plugins.
                                                     ^
app/controllers/multi_search_controller.rb:5:1: C: Metrics/ClassLength: Class has too many lines. [108/100]
class MultiSearchController < CatalogController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:8:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  before_action :spellcheck, :only => [:index, :search]
                             ^^^^^^^^
app/controllers/multi_search_controller.rb:8:39: C: Style/SymbolArray: Use %i or %I for an array of symbols.
  before_action :spellcheck, :only => [:index, :search]
                                      ^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:9:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:10:3: C: Metrics/AbcSize: Assignment Branch Condition size for index is too high. [<8, 27, 3> 28.32/15]
  def index ...
  ^^^^^^^^^
app/controllers/multi_search_controller.rb:10:3: C: Metrics/MethodLength: Method has too many lines. [23/10]
  def index ...
  ^^^^^^^^^
app/controllers/multi_search_controller.rb:11:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    logger.info("###########")
                ^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:12:17: C: Style/UnpackFirst: Use SecureRandom.random_bytes(32).unpack1("H*") instead of SecureRandom.random_bytes(32).unpack("H*").first.
    logger.info(SecureRandom.random_bytes(32).unpack("H*").first)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:12:54: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    logger.info(SecureRandom.random_bytes(32).unpack("H*").first)
                                                     ^^^^
app/controllers/multi_search_controller.rb:14:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:15:60: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # We can only show articles if the user is logged in.
                                                           ^
app/controllers/multi_search_controller.rb:16:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      if local_or_logged_in?
                            ^
app/controllers/multi_search_controller.rb:17:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        bento_engines = ["articles"]
                         ^^^^^^^^^^
app/controllers/multi_search_controller.rb:22:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:23:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:28:76: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        # worldcat) are being searched with on-demand ajax calls, not here.
                                                                           ^
app/controllers/multi_search_controller.rb:29:56: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        searcher = BentoSearch::ConcurrentSearcher.new( *bento_engines )
                                                       ^
app/controllers/multi_search_controller.rb:29:71: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        searcher = BentoSearch::ConcurrentSearcher.new( *bento_engines )
                                                                      ^
app/controllers/multi_search_controller.rb:30:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        searcher.search(:query => params[:q], :semantic_search_field => params[:search_field], :per_page => 5)
                        ^^^^^^^^^
app/controllers/multi_search_controller.rb:30:47: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        searcher.search(:query => params[:q], :semantic_search_field => params[:search_field], :per_page => 5)
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:30:96: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        searcher.search(:query => params[:q], :semantic_search_field => params[:search_field], :per_page => 5)
                                                                                               ^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:31:9: C: Layout/LeadingCommentSpace: Missing space after #.
        #searcher.search(params[:q], :semantic_search_field => params[:search_field], :sort => "title")
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:33:62: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        # Now we go ahead and search our Solr in this thread.
                                                             ^
app/controllers/multi_search_controller.rb:34:74: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        # We have access to this method, properly configured for our app,
                                                                         ^
app/controllers/multi_search_controller.rb:37:54: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        (@response, @document_list) = search_results( params.slice(:q, :search_field).merge(:per_page => 5) ) do |search_builder|
                                                     ^
app/controllers/multi_search_controller.rb:37:93: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        (@response, @document_list) = search_results( params.slice(:q, :search_field).merge(:per_page => 5) ) do |search_builder|
                                                                                            ^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:37:108: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        (@response, @document_list) = search_results( params.slice(:q, :search_field).merge(:per_page => 5) ) do |search_builder|
                                                                                                           ^
app/controllers/multi_search_controller.rb:37:121: C: Layout/LineLength: Line is too long. [129/120]
        (@response, @document_list) = search_results( params.slice(:q, :search_field).merge(:per_page => 5) ) do |search_builder|
                                                                                                                        ^^^^^^^^^
app/controllers/multi_search_controller.rb:38:32: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          search_builder.merge(:facet => "false" )
                               ^^^^^^^^^
app/controllers/multi_search_controller.rb:38:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          search_builder.merge(:facet => "false" )
                                         ^^^^^^^
app/controllers/multi_search_controller.rb:38:49: C: Layout/SpaceInsideParens: Space inside parentheses detected.
          search_builder.merge(:facet => "false" )
                                                ^
app/controllers/multi_search_controller.rb:40:1: C: Layout/EmptyLinesAroundExceptionHandlingKeywords: Extra empty line detected before the ensure.
app/controllers/multi_search_controller.rb:41:13: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      ensure
            ^^^^^^^^
app/controllers/multi_search_controller.rb:44:21: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        # celluloid.
                    ^
app/controllers/multi_search_controller.rb:45:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        @article_results = searcher.results["articles"]
                                            ^^^^^^^^^^
app/controllers/multi_search_controller.rb:45:56: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        @article_results = searcher.results["articles"]
                                                       ^^^^^^^^
app/controllers/multi_search_controller.rb:46:43: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        log_bento_errors(@article_results)
                                          ^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:49:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:53:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:55:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:57:62: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # engine. Works for any bento_search engine, abstract like.
                                                             ^
app/controllers/multi_search_controller.rb:58:3: C: Metrics/AbcSize: Assignment Branch Condition size for search is too high. [<5, 35, 6> 35.86/15]
  def search ...
  ^^^^^^^^^^
app/controllers/multi_search_controller.rb:58:3: C: Metrics/MethodLength: Method has too many lines. [27/10]
  def search ...
  ^^^^^^^^^^
app/controllers/multi_search_controller.rb:61:26: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # force login screen.
                         ^
app/controllers/multi_search_controller.rb:63:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      flash[:notice] = "Article search is only available to Johns Hopkins users."
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:64:49: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      raise Blacklight::Exceptions::AccessDenied
                                                ^
app/controllers/multi_search_controller.rb:66:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:69:42: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    rescue BentoSearch::NoSuchEngine => e
                                         ^^^^
app/controllers/multi_search_controller.rb:70:14: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render :status => 404, :text => ActionController::Base.helpers.sanitize(e.message)
             ^^^^^^^^^^
app/controllers/multi_search_controller.rb:70:25: C: Rails/HttpStatus: Prefer :not_found over 404 to define HTTP status code.
      render :status => 404, :text => ActionController::Base.helpers.sanitize(e.message)
                        ^^^
app/controllers/multi_search_controller.rb:70:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render :status => 404, :text => ActionController::Base.helpers.sanitize(e.message)
                             ^^^^^^^^
app/controllers/multi_search_controller.rb:73:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:77:21: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # just ignore.
                    ^
app/controllers/multi_search_controller.rb:78:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:80:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :query => params[:q],
        ^^^^^^^^^
app/controllers/multi_search_controller.rb:81:9: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
        :semantic_search_field  => params[:search_field],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:81:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :semantic_search_field  => params[:search_field],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:82:9: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
        :peer_reviewed_only     => params[:peer_reviewed],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:82:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :peer_reviewed_only     => params[:peer_reviewed],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:83:9: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
        :pubyear_start          => params[:pubyear_start],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:83:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :pubyear_start          => params[:pubyear_start],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:84:9: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
        :pubyear_end            => params[:pubyear_end]
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:84:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :pubyear_end            => params[:pubyear_end]
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:87:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:89:33: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      log_bento_errors(@results)
                                ^^^^^^
app/controllers/multi_search_controller.rb:90:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    end
       ^^^^
app/controllers/multi_search_controller.rb:91:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:96:20: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # at present.
                   ^
app/controllers/multi_search_controller.rb:97:41: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      if @results && params[:engine] == "articles"
                                        ^^^^^^^^^^
app/controllers/multi_search_controller.rb:98:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        format.atom { render :template => "bento_search/atom_results", :locals => {:atom_results => @results} }
                             ^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:98:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.atom { render :template => "bento_search/atom_results", :locals => {:atom_results => @results} }
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:98:72: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        format.atom { render :template => "bento_search/atom_results", :locals => {:atom_results => @results} }
                                                                       ^^^^^^^^^^
app/controllers/multi_search_controller.rb:98:83: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
        format.atom { render :template => "bento_search/atom_results", :locals => {:atom_results => @results} }
                                                                                  ^
app/controllers/multi_search_controller.rb:98:84: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        format.atom { render :template => "bento_search/atom_results", :locals => {:atom_results => @results} }
                                                                                   ^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:98:109: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
        format.atom { render :template => "bento_search/atom_results", :locals => {:atom_results => @results} }
                                                                                                            ^
app/controllers/multi_search_controller.rb:101:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:103:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:107:19: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # methods below.
                  ^
app/controllers/multi_search_controller.rb:111:3: C: Metrics/AbcSize: Assignment Branch Condition size for refworks_callback is too high. [<3, 26, 5> 26.65/15]
  def refworks_callback ...
  ^^^^^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:111:3: C: Metrics/MethodLength: Method has too many lines. [17/10]
  def refworks_callback ...
  ^^^^^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:113:14: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render(:status => 404)
             ^^^^^^^^^^
app/controllers/multi_search_controller.rb:113:25: C: Rails/HttpStatus: Prefer :not_found over 404 to define HTTP status code.
      render(:status => 404)
                        ^^^
app/controllers/multi_search_controller.rb:116:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:120:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:121:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:123:19: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      format.ris {  render :text => BentoSearch::RISCreator.new( item ).export  }
                  ^
app/controllers/multi_search_controller.rb:123:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      format.ris {  render :text => BentoSearch::RISCreator.new( item ).export  }
                           ^^^^^^^^
app/controllers/multi_search_controller.rb:123:65: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      format.ris {  render :text => BentoSearch::RISCreator.new( item ).export  }
                                                                ^
app/controllers/multi_search_controller.rb:123:70: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      format.ris {  render :text => BentoSearch::RISCreator.new( item ).export  }
                                                                     ^
app/controllers/multi_search_controller.rb:123:79: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      format.ris {  render :text => BentoSearch::RISCreator.new( item ).export  }
                                                                              ^
app/controllers/multi_search_controller.rb:123:82: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      format.ris {  render :text => BentoSearch::RISCreator.new( item ).export  }
                                                                                 ^
app/controllers/multi_search_controller.rb:125:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:126:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  rescue BentoSearch::NoSuchEngine
                                  ^^^^
app/controllers/multi_search_controller.rb:127:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render(:status => 404)
           ^^^^^^^^^^
app/controllers/multi_search_controller.rb:127:23: C: Rails/HttpStatus: Prefer :not_found over 404 to define HTTP status code.
    render(:status => 404)
                      ^^^
app/controllers/multi_search_controller.rb:130:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render(:status => 404)
           ^^^^^^^^^^
app/controllers/multi_search_controller.rb:130:23: C: Rails/HttpStatus: Prefer :not_found over 404 to define HTTP status code.
    render(:status => 404)
                      ^^^
app/controllers/multi_search_controller.rb:132:60: C: Style/RedundantCondition: This condition is not needed.
    logger.warn("refworks_callback, id can't be fetched: #{engine if engine}:#{id if id}")
                                                           ^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:132:80: C: Style/RedundantCondition: This condition is not needed.
    logger.warn("refworks_callback, id can't be fetched: #{engine if engine}:#{id if id}")
                                                                               ^^^^^^^^
app/controllers/multi_search_controller.rb:134:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:135:3: C: Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after protected.
  protected
  ^^^^^^^^^
app/controllers/multi_search_controller.rb:138:49: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # certain search engines, like :peer_reviewed.
                                                ^
app/controllers/multi_search_controller.rb:140:53: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Will not include keys for values that are empty.
                                                    ^
app/controllers/multi_search_controller.rb:144:17: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
    keep_keys = %w{q search_field sort per_page peer_reviewed pubyear_start pubyear_end}
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:145:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:147:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:149:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:150:20: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    hash.delete_if {|k, v| v.empty? }
                   ^^
app/controllers/multi_search_controller.rb:150:22: W: Lint/UnusedBlockArgument: Unused block argument - k. If it's necessary, use _ or _k as an argument name to indicate that it won't be used.
    hash.delete_if {|k, v| v.empty? }
                     ^
app/controllers/multi_search_controller.rb:151:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:152:5: C: Style/RedundantReturn: Redundant return detected.
    return hash
    ^^^^^^
app/controllers/multi_search_controller.rb:155:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:158:53: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    encrypter = ActiveSupport::MessageEncryptor.new(
                                                    ^
app/controllers/multi_search_controller.rb:159:62: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      Rails.application.config.refworks_callback_secret_token
                                                             ^
app/controllers/multi_search_controller.rb:161:5: C: Style/RedundantReturn: Redundant return detected.
    return encrypter.encrypt_and_sign(id)
    ^^^^^^
app/controllers/multi_search_controller.rb:166:53: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    encrypter = ActiveSupport::MessageEncryptor.new(
                                                    ^
app/controllers/multi_search_controller.rb:167:62: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      Rails.application.config.refworks_callback_secret_token
                                                             ^
app/controllers/multi_search_controller.rb:169:5: C: Style/RedundantReturn: Redundant return detected.
    return encrypter.decrypt_and_verify(encrypted_id)
    ^^^^^^
app/controllers/multi_search_controller.rb:171:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:172:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:175:11: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # level.
          ^
app/controllers/multi_search_controller.rb:176:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def log_bento_errors(*results)
  ^^^^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:178:7: C: Style/Next: Use next to skip iteration.
      if r.try {|r| r.failed?}
      ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:178:16: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
      if r.try {|r| r.failed?}
               ^^
app/controllers/multi_search_controller.rb:178:16: C: Style/SymbolProc: Pass &:failed? as an argument to try instead of a block.
      if r.try {|r| r.failed?}
               ^^^^^^^^^^^^^^^
app/controllers/multi_search_controller.rb:178:18: W: Lint/ShadowingOuterLocalVariable: Shadowing outer local variable - r.
      if r.try {|r| r.failed?}
                 ^
app/controllers/multi_search_controller.rb:178:30: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      if r.try {|r| r.failed?}
                             ^
app/controllers/multi_search_controller.rb:180:9: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
        if r.error[:exception]
        ^^
app/controllers/multi_search_controller.rb:183:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/multi_search_controller.rb:184:26: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        logger.error(msg)
                         ^^^^^^^^
app/controllers/multi_search_controller.rb:188:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/requests_controller.rb:9:1: C: Layout/EmptyLines: Extra blank line detected.
app/controllers/requests_controller.rb:16:43: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    @holding = @document.to_holdings.find {|h| h.id == params[:item_id]}
                                          ^^
app/controllers/requests_controller.rb:16:72: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    @holding = @document.to_holdings.find {|h| h.id == params[:item_id]}
                                                                       ^
app/controllers/requests_controller.rb:18:1: C: Layout/EmptyLines: Extra blank line detected.
app/controllers/requests_controller.rb:21:42: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @ils_request = HipPilot::Request.new(:bib_id => horizon_bib_id, :item_id => params[:item_id])
                                         ^^^^^^^^^^
app/controllers/requests_controller.rb:21:69: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @ils_request = HipPilot::Request.new(:bib_id => horizon_bib_id, :item_id => params[:item_id])
                                                                    ^^^^^^^^^^^
app/controllers/requests_controller.rb:33:42: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    @ils_request = HipPilot::Request.new( params[:ils_request].merge(
                                         ^
app/controllers/requests_controller.rb:34:7: C: Layout/FirstArgumentIndentation: Indent the first argument one step more than params[:ils_request].merge(.
      :bib_id => horizon_bib_id, :item_id => horizon_item_id )
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/requests_controller.rb:34:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :bib_id => horizon_bib_id, :item_id => horizon_item_id )
      ^^^^^^^^^^
app/controllers/requests_controller.rb:34:34: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :bib_id => horizon_bib_id, :item_id => horizon_item_id )
                                 ^^^^^^^^^^^
app/controllers/requests_controller.rb:34:61: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      :bib_id => horizon_bib_id, :item_id => horizon_item_id )
                                                            ^
app/controllers/requests_controller.rb:34:62: C: Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument when opening brace is on a separate line from the first argument.
      :bib_id => horizon_bib_id, :item_id => horizon_item_id )
                                                             ^
app/controllers/requests_controller.rb:35:5: C: Layout/ClosingParenthesisIndentation: Align ) with (.
    )
    ^
app/controllers/requests_controller.rb:35:5: C: Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the same line as the last argument when opening brace is on the same line as the first argument.
    )
    ^
app/controllers/requests_controller.rb:38:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @pickup_location = success_xml.at_xpath("./pickup_location/text()").to_s
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/requests_controller.rb:44:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def init_hip_pilot
^^^^
app/controllers/requests_controller.rb:44:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    def init_hip_pilot ...
    ^^^^^^^^^^^^^^^^^^
app/controllers/requests_controller.rb:44:5: C: Metrics/AbcSize: Assignment Branch Condition size for init_hip_pilot is too high. [<5, 20, 7> 21.77/15]
    def init_hip_pilot ...
    ^^^^^^^^^^^^^^^^^^
app/controllers/requests_controller.rb:44:5: C: Metrics/MethodLength: Method has too many lines. [12/10]
    def init_hip_pilot ...
    ^^^^^^^^^^^^^^^^^^
app/controllers/requests_controller.rb:44:5: C: Metrics/PerceivedComplexity: Perceived complexity for init_hip_pilot is too high. [8/7]
    def init_hip_pilot ...
    ^^^^^^^^^^^^^^^^^^
app/controllers/requests_controller.rb:45:10: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
      if current_user && current_user.horizon_borrower_id
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/requests_controller.rb:47:29: C: Layout/SpaceAfterNot: Do not leave space between ! and its argument.
      elsif current_user && ! current_user.horizon_borrower_id
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/requests_controller.rb:50:16: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        render :template => "application/no_horizon_borrower_id_error"
               ^^^^^^^^^^^^
app/controllers/requests_controller.rb:50:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        render :template => "application/no_horizon_borrower_id_error"
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/requests_controller.rb:58:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        flash[:notice] = "Please log in to place a request."
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/requests_controller.rb:61:121: C: Layout/LineLength: Line is too long. [171/120]
        body = "<span data-force-login='#{login_url}' data-request-path='#{request.path}'>Request requires authentication, which can't be done over an xhr request.</span>"
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/requests_controller.rb:63:16: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        render :status=> 403, :format => :html, :text => body
               ^^^^^^^^^
app/controllers/requests_controller.rb:63:23: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
        render :status=> 403, :format => :html, :text => body
                      ^^
app/controllers/requests_controller.rb:63:26: C: Rails/HttpStatus: Prefer :forbidden over 403 to define HTTP status code.
        render :status=> 403, :format => :html, :text => body
                         ^^^
app/controllers/requests_controller.rb:63:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        render :status=> 403, :format => :html, :text => body
                              ^^^^^^^^^^
app/controllers/requests_controller.rb:63:49: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        render :status=> 403, :format => :html, :text => body
                                                ^^^^^^^^
app/controllers/requests_controller.rb:66:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        flash[:notice] = "Please log in to place a request." and raise Blacklight::Exceptions::AccessDenied
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/requests_controller.rb:70:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def catch_request_failure
^^^^
app/controllers/requests_controller.rb:70:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    def catch_request_failure ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/requests_controller.rb:74:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      render "request_login_failure"
             ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/requests_controller.rb:77:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      render "request_failure"
             ^^^^^^^^^^^^^^^^^
app/controllers/requests_controller.rb:80:1: C: Layout/EmptyLines: Extra blank line detected.
app/controllers/requests_controller.rb:80:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/controllers/reserves_controller.rb:2:3: C: Naming/ConstantName: Use SCREAMING_SNAKE_CASE for constants.
  DefaultPerPage = 50
  ^^^^^^^^^^^^^^
app/controllers/reserves_controller.rb:3:3: C: Naming/ConstantName: Use SCREAMING_SNAKE_CASE for constants.
  DefaultSort = "title_sort asc, pub_date_sort desc"
  ^^^^^^^^^^^
app/controllers/reserves_controller.rb:3:17: C: Style/MutableConstant: Freeze mutable objects assigned to constants.
  DefaultSort = "title_sort asc, pub_date_sort desc"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/reserves_controller.rb:3:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  DefaultSort = "title_sort asc, pub_date_sort desc"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/reserves_controller.rb:4:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/reserves_controller.rb:5:3: C: Style/RedundantSelf: Redundant self detected.
  self.blacklight_config.sort_fields.delete_if {|key, config| config.label == "relevance"}
  ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/reserves_controller.rb:5:48: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
  self.blacklight_config.sort_fields.delete_if {|key, config| config.label == "relevance"}
                                               ^^
app/controllers/reserves_controller.rb:5:50: W: Lint/UnusedBlockArgument: Unused block argument - key. If it's necessary, use _ or _key as an argument name to indicate that it won't be used.
  self.blacklight_config.sort_fields.delete_if {|key, config| config.label == "relevance"}
                                                 ^^^
app/controllers/reserves_controller.rb:5:79: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  self.blacklight_config.sort_fields.delete_if {|key, config| config.label == "relevance"}
                                                                              ^^^^^^^^^^^
app/controllers/reserves_controller.rb:5:90: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  self.blacklight_config.sort_fields.delete_if {|key, config| config.label == "relevance"}
                                                                                         ^
app/controllers/reserves_controller.rb:9:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/reserves_controller.rb:11:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # will use for defaults.
                            ^
app/controllers/reserves_controller.rb:13:32: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    @default_sort = DefaultSort
                               ^^^^
app/controllers/reserves_controller.rb:15:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/reserves_controller.rb:16:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/reserves_controller.rb:17:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def index
  ^^^^^^^^^
app/controllers/reserves_controller.rb:17:3: C: Metrics/AbcSize: Assignment Branch Condition size for index is too high. [<7, 34, 5> 35.07/15]
  def index ...
  ^^^^^^^^^
app/controllers/reserves_controller.rb:17:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for index is too high. [8/7]
  def index ...
  ^^^^^^^^^
app/controllers/reserves_controller.rb:17:3: C: Metrics/MethodLength: Method has too many lines. [26/10]
  def index ...
  ^^^^^^^^^
app/controllers/reserves_controller.rb:19:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/reserves_controller.rb:21:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/reserves_controller.rb:22:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/reserves_controller.rb:23:15: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    @courses =
              ^
app/controllers/reserves_controller.rb:24:44: C: Layout/DotPosition: Place the . on the next line, together with the method name.
      ReservesCourse.includes(:instructors).
                                           ^
app/controllers/reserves_controller.rb:25:9: C: Layout/MultilineMethodCallIndentation: Align page with ReservesCourse.includes(:instructors). on line 24.
        page(params[:page] || 1).per(params[:per_page] || 100).order("name")
        ^^^^
app/controllers/reserves_controller.rb:25:70: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        page(params[:page] || 1).per(params[:per_page] || 100).order("name")
                                                                     ^^^^^^
app/controllers/reserves_controller.rb:27:121: C: Layout/LineLength: Line is too long. [263/120]
      @courses = @courses.joins('LEFT OUTER JOIN reserves_course_instructors ON reserves_courses.course_id=reserves_course_instructors.reserves_course_id').where(["name like ? OR reserves_course_instructors.instructor_str like ?", "#{query}%", "#{query}%"])
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/reserves_controller.rb:27:164: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @courses = @courses.joins('LEFT OUTER JOIN reserves_course_instructors ON reserves_courses.course_id=reserves_course_instructors.reserves_course_id').where(["name like ? OR reserves_course_instructors.instructor_str like ?", "#{query}%", "#{query}%"])
                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/reserves_controller.rb:27:258: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      @courses = @courses.joins('LEFT OUTER JOIN reserves_course_instructors ON reserves_courses.course_id=reserves_course_instructors.reserves_course_id').where(["name like ? OR reserves_course_instructors.instructor_str like ?", "#{query}%", "#{query}%"])
                                                                                                                                                                                                                                                                 ^^^^^^
app/controllers/reserves_controller.rb:29:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if params[:location]
    ^^
app/controllers/reserves_controller.rb:30:33: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      @courses = @courses.where(:location_code => params[:location])
                                ^^^^^^^^^^^^^^^^^
app/controllers/reserves_controller.rb:32:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/reserves_controller.rb:33:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @locations = ReservesCourse.select("distinct location_code, location").order("location")
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/reserves_controller.rb:33:82: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @locations = ReservesCourse.select("distinct location_code, location").order("location")
                                                                                 ^^^^^^^^^^
app/controllers/reserves_controller.rb:34:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/reserves_controller.rb:38:44: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        json = @courses.collect do |course|
                                           ^^^^^^^^^^^^
app/controllers/reserves_controller.rb:40:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :label => course.name,
            ^^^^^^^^^
app/controllers/reserves_controller.rb:41:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :location => course.location,
            ^^^^^^^^^^^^
app/controllers/reserves_controller.rb:42:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :url => url_for(:action => "show", :id => course.course_id),
            ^^^^^^^
app/controllers/reserves_controller.rb:42:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :url => url_for(:action => "show", :id => course.course_id),
                            ^^^^^^^^^^
app/controllers/reserves_controller.rb:42:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :url => url_for(:action => "show", :id => course.course_id),
                                       ^^^^^^
app/controllers/reserves_controller.rb:42:48: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :url => url_for(:action => "show", :id => course.course_id),
                                               ^^^^^^
app/controllers/reserves_controller.rb:43:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :instructors => course.instructors.collect {|i| i.instructor_str}
            ^^^^^^^^^^^^^^^
app/controllers/reserves_controller.rb:43:56: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
            :instructors => course.instructors.collect {|i| i.instructor_str}
                                                       ^^
app/controllers/reserves_controller.rb:43:56: C: Style/SymbolProc: Pass &:instructor_str as an argument to collect instead of a block.
            :instructors => course.instructors.collect {|i| i.instructor_str}
                                                       ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/reserves_controller.rb:43:77: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
            :instructors => course.instructors.collect {|i| i.instructor_str}
                                                                            ^
app/controllers/reserves_controller.rb:46:16: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        render :json => json
               ^^^^^^^^
app/controllers/reserves_controller.rb:46:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        render :json => json
                            ^
app/controllers/reserves_controller.rb:49:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/reserves_controller.rb:51:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/reserves_controller.rb:52:3: C: Metrics/AbcSize: Assignment Branch Condition size for show is too high. [<6, 19, 1> 19.95/15]
  def show ...
  ^^^^^^^^
app/controllers/reserves_controller.rb:55:31: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
    @bib_ids                  =  @course.bib_ids
                              ^
app/controllers/reserves_controller.rb:55:32: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    @bib_ids                  =  @course.bib_ids
                               ^
app/controllers/reserves_controller.rb:56:50: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    solr_ids                  = @bib_ids.collect {|j| "bib_" + j.bib_id.to_s}
                                                 ^^
app/controllers/reserves_controller.rb:56:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    solr_ids                  = @bib_ids.collect {|j| "bib_" + j.bib_id.to_s}
                                                      ^^^^^^
app/controllers/reserves_controller.rb:56:77: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    solr_ids                  = @bib_ids.collect {|j| "bib_" + j.bib_id.to_s}
                                                                            ^
app/controllers/reserves_controller.rb:58:121: C: Layout/LineLength: Line is too long. [126/120]
    @response, @document_list = search_results(params.slice(:per_page, :page, :sort), search_params_logic) do |search_builder|
                                                                                                                        ^^^^^^
app/controllers/reserves_controller.rb:59:21: C: Layout/DotPosition: Place the . on the next line, together with the method name.
      search_builder.
                    ^
app/controllers/reserves_controller.rb:60:71: C: Layout/DotPosition: Place the . on the next line, together with the method name.
        where(blacklight_config.document_model.unique_key => solr_ids).
                                                                      ^
app/controllers/reserves_controller.rb:63:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/reserves_controller.rb:65:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render :text => "Sorry, reserves section not found. You may have bookmarked a section which is no longer on reserve.", :layout => true, :status => 404
           ^^^^^^^^
app/controllers/reserves_controller.rb:65:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    render :text => "Sorry, reserves section not found. You may have bookmarked a section which is no longer on reserve.", :layout => true, :status => 404
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/reserves_controller.rb:65:121: C: Layout/LineLength: Line is too long. [156/120]
    render :text => "Sorry, reserves section not found. You may have bookmarked a section which is no longer on reserve.", :layout => true, :status => 404
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/reserves_controller.rb:65:124: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render :text => "Sorry, reserves section not found. You may have bookmarked a section which is no longer on reserve.", :layout => true, :status => 404
                                                                                                                           ^^^^^^^^^^
app/controllers/reserves_controller.rb:65:141: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render :text => "Sorry, reserves section not found. You may have bookmarked a section which is no longer on reserve.", :layout => true, :status => 404
                                                                                                                                            ^^^^^^^^^^
app/controllers/reserves_controller.rb:65:152: C: Rails/HttpStatus: Prefer :not_found over 404 to define HTTP status code.
    render :text => "Sorry, reserves section not found. You may have bookmarked a section which is no longer on reserve.", :layout => true, :status => 404
                                                                                                                                                       ^^^
app/controllers/reserves_controller.rb:65:155: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    render :text => "Sorry, reserves section not found. You may have bookmarked a section which is no longer on reserve.", :layout => true, :status => 404
                                                                                                                                                          ^^
app/controllers/reserves_controller.rb:67:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/reserves_controller.rb:68:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/reserves_controller.rb:70:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/reserves_controller.rb:74:34: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # action, which would be wrong.
                                 ^
app/controllers/reserves_controller.rb:76:24: C: Style/MethodDefParentheses: Use def with parentheses when there are parameters.
  def url_for_document doc
                       ^^^
app/controllers/reserves_controller.rb:83:82: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # gets loaded in all controllers, not just this one as an override, as we want.
                                                                                 ^
app/controllers/reserves_controller.rb:85:47: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    blacklight_config.sort_fields.values.find {|d| d.label == "title"} ||  super
                                              ^^
app/controllers/reserves_controller.rb:85:63: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    blacklight_config.sort_fields.values.find {|d| d.label == "title"} ||  super
                                                              ^^^^^^^
app/controllers/reserves_controller.rb:85:70: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    blacklight_config.sort_fields.values.find {|d| d.label == "title"} ||  super
                                                                     ^
app/controllers/reserves_controller.rb:85:72: C: Layout/SpaceAroundOperators: Operator || should be surrounded by a single space.
    blacklight_config.sort_fields.values.find {|d| d.label == "title"} ||  super
                                                                       ^^
app/controllers/reserves_controller.rb:85:74: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    blacklight_config.sort_fields.values.find {|d| d.label == "title"} ||  super
                                                                         ^
app/controllers/reserves_controller.rb:85:81: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    blacklight_config.sort_fields.values.find {|d| d.label == "title"} ||  super
                                                                                ^^^^
app/controllers/reserves_controller.rb:88:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/reserves_controller.rb:89:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/spellcheck_behavior.rb:8:1: C: Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body beginning.
app/controllers/spellcheck_behavior.rb:21:5: C: Style/GuardClause: Use a guard clause (return unless should_spell_check?) instead of wrapping the code inside a conditional expression.
    if should_spell_check?
    ^^
app/controllers/spellcheck_behavior.rb:31:19: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # tricky things.
                  ^
app/controllers/spellcheck_behavior.rb:45:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # for CQL searches either.
                            ^
app/controllers/spellcheck_behavior.rb:46:3: C: Metrics/AbcSize: Assignment Branch Condition size for should_spell_check? is too high. [<1, 22, 12> 25.08/15]
  def should_spell_check? ...
  ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/spellcheck_behavior.rb:46:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for should_spell_check? is too high. [9/7]
  def should_spell_check? ...
  ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/spellcheck_behavior.rb:46:3: C: Metrics/PerceivedComplexity: Perceived complexity for should_spell_check? is too high. [9/7]
  def should_spell_check? ...
  ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/spellcheck_behavior.rb:50:5: W: Lint/UnreachableCode: Unreachable code detected.
    should =  ...
    ^^^^^^^^^
app/controllers/spellcheck_behavior.rb:50:13: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    should =
            ^
app/controllers/spellcheck_behavior.rb:51:5: C: Layout/AssignmentIndentation: Indent the first line of the right-hand-side of a multi-line assignment.
    params[:q].present? && params[:q].ascii_only? && (params[:page].nil? || params[:page] == "1") && ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/spellcheck_behavior.rb:51:94: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    params[:q].present? && params[:q].ascii_only? && (params[:page].nil? || params[:page] == "1") &&
                                                                                             ^^^
app/controllers/spellcheck_behavior.rb:52:7: C: Layout/MultilineOperationIndentation: Align the operands of an expression in an assignment spanning multiple lines.
      (! probably_bot?) && (params[:suppress_spellcheck] != "1") && params[:search_field] != "cql" &&
      ^^^^^^^^^^^^^^^^^
app/controllers/spellcheck_behavior.rb:52:7: C: Style/RedundantParentheses: Don't use parentheses around an unary operation.
      (! probably_bot?) && (params[:suppress_spellcheck] != "1") && params[:search_field] != "cql" &&
      ^^^^^^^^^^^^^^^^^
app/controllers/spellcheck_behavior.rb:52:8: C: Layout/SpaceAfterNot: Do not leave space between ! and its argument.
      (! probably_bot?) && (params[:suppress_spellcheck] != "1") && params[:search_field] != "cql" &&
       ^^^^^^^^^^^^^^^
app/controllers/spellcheck_behavior.rb:52:61: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      (! probably_bot?) && (params[:suppress_spellcheck] != "1") && params[:search_field] != "cql" &&
                                                            ^^^
app/controllers/spellcheck_behavior.rb:52:94: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      (! probably_bot?) && (params[:suppress_spellcheck] != "1") && params[:search_field] != "cql" &&
                                                                                             ^^^^^
app/controllers/spellcheck_behavior.rb:52:102: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      (! probably_bot?) && (params[:suppress_spellcheck] != "1") && params[:search_field] != "cql" &&
                                                                                                     ^
app/controllers/spellcheck_behavior.rb:54:70: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # something else. not entirely robust, but best rails gives us.
                                                                     ^
app/controllers/spellcheck_behavior.rb:55:7: C: Layout/MultilineOperationIndentation: Align the operands of an expression in an assignment spanning multiple lines.
      (params[:format].blank? || params[:format] == "html")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/spellcheck_behavior.rb:55:53: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      (params[:format].blank? || params[:format] == "html")
                                                    ^^^^^^
app/controllers/spellcheck_behavior.rb:57:5: C: Style/RedundantReturn: Redundant return detected.
    return should
    ^^^^^^
app/controllers/spellcheck_behavior.rb:60:3: C: Style/ClassVars: Replace class var @@probably_bot_regexp with a class instance var.
  @@probably_bot_regexp = /(Baidu|Googlebot|msnbot|Yandex|Sosospider|Sosoimagespider|Exabot|Sogou|\+http\:)/i
  ^^^^^^^^^^^^^^^^^^^^^
app/controllers/spellcheck_behavior.rb:66:23: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # way to catch bots.
                      ^
app/controllers/spellcheck_behavior.rb:68:58: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Also EMPTY user agent, we'll consider probably a bot.
                                                         ^
app/controllers/spellcheck_behavior.rb:70:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    request.env["HTTP_USER_AGENT"] =~ @@probably_bot_regexp  || request.env["HTTP_USER_AGENT"].blank?
                ^^^^^^^^^^^^^^^^^
app/controllers/spellcheck_behavior.rb:70:60: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    request.env["HTTP_USER_AGENT"] =~ @@probably_bot_regexp  || request.env["HTTP_USER_AGENT"].blank?
                                                           ^
app/controllers/spellcheck_behavior.rb:70:62: C: Layout/SpaceAroundOperators: Operator || should be surrounded by a single space.
    request.env["HTTP_USER_AGENT"] =~ @@probably_bot_regexp  || request.env["HTTP_USER_AGENT"].blank?
                                                             ^^
app/controllers/spellcheck_behavior.rb:70:77: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    request.env["HTTP_USER_AGENT"] =~ @@probably_bot_regexp  || request.env["HTTP_USER_AGENT"].blank?
                                                                            ^^^^^^^^^^^^^^^^^
app/controllers/spellcheck_behavior.rb:72:1: C: Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body end.
app/controllers/user_sessions_controller.rb:6:1: C: Metrics/ClassLength: Class has too many lines. [107/100]
class UserSessionsController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:7:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
app/controllers/user_sessions_controller.rb:16:3: C: Metrics/AbcSize: Assignment Branch Condition size for create is too high. [<8, 31, 4> 32.26/15]
  def create ...
  ^^^^^^^^^^
app/controllers/user_sessions_controller.rb:16:3: C: Metrics/MethodLength: Method has too many lines. [25/10]
  def create ...
  ^^^^^^^^^^
app/controllers/user_sessions_controller.rb:17:5: C: Style/RedundantBegin: Redundant begin block detected.
    begin
    ^^^^^
app/controllers/user_sessions_controller.rb:25:1: C: Layout/EmptyLines: Extra blank line detected.
app/controllers/user_sessions_controller.rb:26:51: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      borrower = HorizonBorrowerLookup.new.lookup(:barcode => params[:barcode], :pin =>  params[:pin])
                                                  ^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:26:81: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      borrower = HorizonBorrowerLookup.new.lookup(:barcode => params[:barcode], :pin =>  params[:pin])
                                                                                ^^^^^^^
app/controllers/user_sessions_controller.rb:26:86: C: Layout/SpaceAroundOperators: Operator => should be surrounded by a single space.
      borrower = HorizonBorrowerLookup.new.lookup(:barcode => params[:barcode], :pin =>  params[:pin])
                                                                                     ^^
app/controllers/user_sessions_controller.rb:26:88: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      borrower = HorizonBorrowerLookup.new.lookup(:barcode => params[:barcode], :pin =>  params[:pin])
                                                                                       ^
app/controllers/user_sessions_controller.rb:29:7: C: Style/UnlessElse: Do not use unless with else. Rewrite these with the positive case first.
      unless ( borrower ) ...
      ^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:29:14: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an unless.
      unless ( borrower )
             ^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:29:14: C: Style/RedundantParentheses: Don't use parentheses around a variable.
      unless ( borrower )
             ^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:29:15: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      unless ( borrower )
              ^
app/controllers/user_sessions_controller.rb:29:24: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      unless ( borrower )
                       ^
app/controllers/user_sessions_controller.rb:31:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        flash.now[:error] = "Barcode/PIN not found. Check your entry and try again, or contact the Circulation desk at your home library for help."
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:31:121: C: Layout/LineLength: Line is too long. [147/120]
        flash.now[:error] = "Barcode/PIN not found. Check your entry and try again, or contact the Circulation desk at your home library for help."
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:32:16: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        render :action => :index
               ^^^^^^^^^^
app/controllers/user_sessions_controller.rb:33:9: C: Style/RedundantReturn: Redundant return detected.
        return
        ^^^^^^
app/controllers/user_sessions_controller.rb:37:9: C: Style/OrAssignment: Use the double pipe equals operator ||= instead.
        user = create_new_account(borrower) unless user
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:41:27: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
        user.attributes = {:name => borrower[:name],
                          ^
app/controllers/user_sessions_controller.rb:41:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        user.attributes = {:name => borrower[:name],
                           ^^^^^^^^
app/controllers/user_sessions_controller.rb:42:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :horizon_borrower_id => borrower[:horizon_borrower_id], :jhed_lid => borrower[:jhed_lid],
                           ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:42:84: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :horizon_borrower_id => borrower[:horizon_borrower_id], :jhed_lid => borrower[:jhed_lid],
                                                                                   ^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:43:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :hopkins_id => borrower[:hopkins_id]}
                           ^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:43:64: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                           :hopkins_id => borrower[:hopkins_id]}
                                                               ^
app/controllers/user_sessions_controller.rb:45:32: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        # Mark their last login
                               ^^^^^^^^
app/controllers/user_sessions_controller.rb:46:35: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
        user.last_login_at = Time.now
                                  ^^^
app/controllers/user_sessions_controller.rb:54:88: C: Naming/RescuedExceptionsVariableName: Use e instead of exception.
    rescue HorizonBorrowerLookup::UnavailableError, ActiveRecord::ActiveRecordError => exception
                                                                                       ^^^^^^^^^
app/controllers/user_sessions_controller.rb:57:14: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render :action => :index
             ^^^^^^^^^^
app/controllers/user_sessions_controller.rb:59:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
app/controllers/user_sessions_controller.rb:66:3: C: Metrics/AbcSize: Assignment Branch Condition size for shibboleth_create is too high. [<23, 51, 13> 57.44/15]
  def shibboleth_create ...
  ^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:66:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for shibboleth_create is too high. [14/7]
  def shibboleth_create ...
  ^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:66:3: C: Metrics/MethodLength: Method has too many lines. [42/10]
  def shibboleth_create ...
  ^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:66:3: C: Metrics/PerceivedComplexity: Perceived complexity for shibboleth_create is too high. [13/7]
  def shibboleth_create ...
  ^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:67:5: C: Style/RedundantBegin: Redundant begin block detected.
    begin
    ^^^^^
app/controllers/user_sessions_controller.rb:71:4: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
      session.delete(:current_user_id)
   ^^^
app/controllers/user_sessions_controller.rb:76:7: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if jhed_lid.nil? and ( Rails.env.development? or Rails.env.test? )
      ^^
app/controllers/user_sessions_controller.rb:76:24: C: Style/AndOr: Use && instead of and.
      if jhed_lid.nil? and ( Rails.env.development? or Rails.env.test? )
                       ^^^
app/controllers/user_sessions_controller.rb:76:29: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      if jhed_lid.nil? and ( Rails.env.development? or Rails.env.test? )
                            ^
app/controllers/user_sessions_controller.rb:76:53: C: Style/AndOr: Use || instead of or.
      if jhed_lid.nil? and ( Rails.env.development? or Rails.env.test? )
                                                    ^^
app/controllers/user_sessions_controller.rb:76:71: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      if jhed_lid.nil? and ( Rails.env.development? or Rails.env.test? )
                                                                      ^
app/controllers/user_sessions_controller.rb:81:7: C: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
      raise ActiveRecord::ActiveRecordError.new("No authorized JHED information received, something has gone wrong.") unless jhed_lid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:81:7: C: Style/RaiseArgs: Provide an exception class and message as arguments to raise.
      raise ActiveRecord::ActiveRecordError.new("No authorized JHED information received, something has gone wrong.") unless jhed_lid
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:81:49: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      raise ActiveRecord::ActiveRecordError.new("No authorized JHED information received, something has gone wrong.") unless jhed_lid
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:81:119: C: Style/IfUnlessModifier: Modifier form of unless makes the line too long.
      raise ActiveRecord::ActiveRecordError.new("No authorized JHED information received, something has gone wrong.") unless jhed_lid
                                                                                                                      ^^^^^^
app/controllers/user_sessions_controller.rb:81:121: C: Layout/LineLength: Line is too long. [133/120]
      raise ActiveRecord::ActiveRecordError.new("No authorized JHED information received, something has gone wrong.") unless jhed_lid
                                                                                                                        ^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:91:86: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # to have a JHED in horizon but do now, we still re-use their existing account.
                                                                                     ^
app/controllers/user_sessions_controller.rb:92:51: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      borrower = HorizonBorrowerLookup.new.lookup(:other_id => jhed_lid)
                                                  ^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:95:1: C: Layout/EmptyLines: Extra blank line detected.
app/controllers/user_sessions_controller.rb:96:37: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      existing_account_conditions = {:jhed_lid => jhed_lid, :hopkins_id => hopkins_id}
                                    ^
app/controllers/user_sessions_controller.rb:96:38: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      existing_account_conditions = {:jhed_lid => jhed_lid, :hopkins_id => hopkins_id}
                                     ^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:96:61: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      existing_account_conditions = {:jhed_lid => jhed_lid, :hopkins_id => hopkins_id}
                                                            ^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:96:86: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      existing_account_conditions = {:jhed_lid => jhed_lid, :hopkins_id => hopkins_id}
                                                                                     ^
app/controllers/user_sessions_controller.rb:98:59: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
        existing_account_conditions[:horizon_borrower_id] =  borrower[:horizon_borrower_id]
                                                          ^
app/controllers/user_sessions_controller.rb:98:60: C: Layout/ExtraSpacing: Unnecessary spacing detected.
        existing_account_conditions[:horizon_borrower_id] =  borrower[:horizon_borrower_id]
                                                           ^
app/controllers/user_sessions_controller.rb:107:45: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # though they have no horizon account.
                                            ^
app/controllers/user_sessions_controller.rb:108:10: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
      if ( borrower.nil? && params[:allow_no_horizon] != "true")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:108:11: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      if ( borrower.nil? && params[:allow_no_horizon] != "true")
          ^
app/controllers/user_sessions_controller.rb:108:58: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      if ( borrower.nil? && params[:allow_no_horizon] != "true")
                                                         ^^^^^^
app/controllers/user_sessions_controller.rb:109:121: C: Layout/LineLength: Line is too long. [156/120]
        msg = "No Library Borrower account could be found for JHED login ID #{jhed_lid}. Please contact the Circulation Desk at your home library for help."
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:111:21: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        redirect_to :action => :index, :referer => @referer
                    ^^^^^^^^^^
app/controllers/user_sessions_controller.rb:111:40: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        redirect_to :action => :index, :referer => @referer
                                       ^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:118:76: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # If no user exists, create one, it'll be saved later after updating.
                                                                           ^
app/controllers/user_sessions_controller.rb:119:7: C: Style/OrAssignment: Use the double pipe equals operator ||= instead.
      user = User.new(:login => jhed_lid, :jhed_lid => jhed_lid) unless user
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:119:23: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      user = User.new(:login => jhed_lid, :jhed_lid => jhed_lid) unless user
                      ^^^^^^^^^
app/controllers/user_sessions_controller.rb:119:43: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      user = User.new(:login => jhed_lid, :jhed_lid => jhed_lid) unless user
                                          ^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:124:61: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # latest data we just looked up, in case it's changed.
                                                            ^
app/controllers/user_sessions_controller.rb:131:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      user.hopkins_id = hopkins_id
                                  ^
app/controllers/user_sessions_controller.rb:134:33: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
      user.last_login_at = Time.now
                                ^^^
app/controllers/user_sessions_controller.rb:134:36: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      user.last_login_at = Time.now
                                   ^^^^
app/controllers/user_sessions_controller.rb:138:41: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # Log them in, and send them back.
                                        ^
app/controllers/user_sessions_controller.rb:142:4: C: Layout/RescueEnsureAlignment: rescue at 142, 3 is not aligned with begin at 67, 4.
   rescue HorizonBorrowerLookup::UnavailableError, ActiveRecord::ActiveRecordError => exception
   ^^^^^^
app/controllers/user_sessions_controller.rb:142:87: C: Naming/RescuedExceptionsVariableName: Use e instead of exception.
   rescue HorizonBorrowerLookup::UnavailableError, ActiveRecord::ActiveRecordError => exception
                                                                                      ^^^^^^^^^
app/controllers/user_sessions_controller.rb:146:18: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
     redirect_to :action => :index, :referer => @referer
                 ^^^^^^^^^^
app/controllers/user_sessions_controller.rb:146:37: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
     redirect_to :action => :index, :referer => @referer
                                    ^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:148:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
app/controllers/user_sessions_controller.rb:161:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #session.delete(:hip_session_id)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:168:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #cookies.keys.find_all {|k| k =~ /^_shibsession_/ || k =~ /^_shibstate_/}.each { |cookie| cookies.delete(cookie) }
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:170:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    redirect_to "https://login.johnshopkins.edu/cgi-bin/logoff.pl"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:171:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
app/controllers/user_sessions_controller.rb:174:3: C: Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after protected.
  protected
  ^^^^^^^^^
app/controllers/user_sessions_controller.rb:176:31: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # any of the ID's mentioned.
                              ^
app/controllers/user_sessions_controller.rb:179:23: C: Style/NumericPredicate: Use (hash.keys & [:jhed_lid, :hopkins_id, :horizon_borrower_id]).length.positive? instead of (hash.keys & [:jhed_lid, :hopkins_id, :horizon_borrower_id]).length > 0.
    return nil unless (hash.keys & [:jhed_lid, :hopkins_id, :horizon_borrower_id]).length > 0
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:179:23: C: Style/ZeroLengthPredicate: Use !empty? instead of length > 0.
    return nil unless (hash.keys & [:jhed_lid, :hopkins_id, :horizon_borrower_id]).length > 0
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:179:36: C: Style/SymbolArray: Use %i or %I for an array of symbols.
    return nil unless (hash.keys & [:jhed_lid, :hopkins_id, :horizon_borrower_id]).length > 0
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:181:17: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    queries = []
                ^^^^
app/controllers/user_sessions_controller.rb:182:5: C: Style/SymbolArray: Use %i or %I for an array of symbols.
    [:hopkins_id, :jhed_lid, :horizon_borrower_id].each do |key|
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:186:72: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # There shouldn't be multiples, but just in case we do an ORDER BY,
                                                                       ^
app/controllers/user_sessions_controller.rb:188:5: C: Style/RedundantReturn: Redundant return detected.
    return User.where( queries.join(" OR "), hash).order(:created_at, :id).first
    ^^^^^^
app/controllers/user_sessions_controller.rb:188:23: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    return User.where( queries.join(" OR "), hash).order(:created_at, :id).first
                      ^
app/controllers/user_sessions_controller.rb:188:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return User.where( queries.join(" OR "), hash).order(:created_at, :id).first
                                    ^^^^^^
app/controllers/user_sessions_controller.rb:188:81: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    return User.where( queries.join(" OR "), hash).order(:created_at, :id).first
                                                                                ^^^^
app/controllers/user_sessions_controller.rb:192:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    loginname = borrower[:jhed_lid] || "bor." + borrower[:horizon_borrower_id]
                                       ^^^^^^
app/controllers/user_sessions_controller.rb:194:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    User.create(:login => loginname,
                ^^^^^^^^^
app/controllers/user_sessions_controller.rb:195:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                :horizon_borrower_id => borrower[:horizon_borrower_id],
                ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:196:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                :hopkins_id => borrower[:hopkins_id],
                ^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:197:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                :jhed_lid => borrower[:jhed_lid],
                ^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:198:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                :name => borrower[:name])
                ^^^^^^^^
app/controllers/user_sessions_controller.rb:206:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      session[:current_user_id]  = user.id
  ^^^^
app/controllers/user_sessions_controller.rb:206:32: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      session[:current_user_id]  = user.id
                               ^
app/controllers/user_sessions_controller.rb:206:34: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
      session[:current_user_id]  = user.id
                                 ^
app/controllers/user_sessions_controller.rb:212:23: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # to be working.
                      ^
app/controllers/user_sessions_controller.rb:218:3: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
     logger.error(
  ^^^
app/controllers/user_sessions_controller.rb:219:9: C: Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
        "\n#{exception.class} (#{exception.message}):\n  " + ...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/user_sessions_controller.rb:224:1: C: Layout/EmptyLines: Extra blank line detected.
app/controllers/user_sessions_controller.rb:224:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/controllers/users_controller.rb:7:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  before_action :verify_user, :only => [:itemsout, :requests, :show]
                              ^^^^^^^^
app/controllers/users_controller.rb:7:40: C: Style/SymbolArray: Use %i or %I for an array of symbols.
  before_action :verify_user, :only => [:itemsout, :requests, :show]
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:9:42: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  rescue_from HipPilot::ConnectionError, :with => :show_connection_error
                                         ^^^^^^^^
app/controllers/users_controller.rb:10:38: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  rescue_from HipPilot::HipDisabled, :with => :hip_disabled_message
                                     ^^^^^^^^
app/controllers/users_controller.rb:12:1: C: Layout/EmptyLines: Extra blank line detected.
app/controllers/users_controller.rb:16:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render(:status => 401 , :text => "User creation not allowed.")
           ^^^^^^^^^^
app/controllers/users_controller.rb:16:23: C: Rails/HttpStatus: Prefer :unauthorized over 401 to define HTTP status code.
    render(:status => 401 , :text => "User creation not allowed.")
                      ^^^
app/controllers/users_controller.rb:16:26: C: Layout/SpaceBeforeComma: Space found before comma.
    render(:status => 401 , :text => "User creation not allowed.")
                         ^
app/controllers/users_controller.rb:16:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render(:status => 401 , :text => "User creation not allowed.")
                            ^^^^^^^^
app/controllers/users_controller.rb:16:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    render(:status => 401 , :text => "User creation not allowed.")
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:18:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def create
  ^^^^^^^^^^
app/controllers/users_controller.rb:19:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render(:status => 401 , :text => "User creation not allowed.")
           ^^^^^^^^^^
app/controllers/users_controller.rb:19:23: C: Rails/HttpStatus: Prefer :unauthorized over 401 to define HTTP status code.
    render(:status => 401 , :text => "User creation not allowed.")
                      ^^^
app/controllers/users_controller.rb:19:26: C: Layout/SpaceBeforeComma: Space found before comma.
    render(:status => 401 , :text => "User creation not allowed.")
                         ^
app/controllers/users_controller.rb:19:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render(:status => 401 , :text => "User creation not allowed.")
                            ^^^^^^^^
app/controllers/users_controller.rb:19:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    render(:status => 401 , :text => "User creation not allowed.")
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:38:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    flash[:notice] = "Your email address has been changed. In some cases it may take up to 24 hours for your new email address to take effect."
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:38:121: C: Layout/LineLength: Line is too long. [143/120]
    flash[:notice] = "Your email address has been changed. In some cases it may take up to 24 hours for your new email address to take effect."
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:39:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    redirect_to :action => :show
                ^^^^^^^^^^
app/controllers/users_controller.rb:40:40: C: Layout/ExtraSpacing: Unnecessary spacing detected.
  rescue HipPilot::ProfileUpdateFailure  => e
                                       ^
app/controllers/users_controller.rb:40:42: C: Layout/SpaceAroundOperators: Operator => should be surrounded by a single space.
  rescue HipPilot::ProfileUpdateFailure  => e
                                         ^^
app/controllers/users_controller.rb:42:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    redirect_to :action => :show
                ^^^^^^^^^^
app/controllers/users_controller.rb:45:3: C: Metrics/AbcSize: Assignment Branch Condition size for itemsout is too high. [<4, 23, 10> 25.4/15]
  def itemsout ...
  ^^^^^^^^^^^^
app/controllers/users_controller.rb:45:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for itemsout is too high. [8/7]
  def itemsout ...
  ^^^^^^^^^^^^
app/controllers/users_controller.rb:45:3: C: Metrics/MethodLength: Method has too many lines. [20/10]
  def itemsout ...
  ^^^^^^^^^^^^
app/controllers/users_controller.rb:45:3: C: Metrics/PerceivedComplexity: Perceived complexity for itemsout is too high. [10/7]
  def itemsout ...
  ^^^^^^^^^^^^
app/controllers/users_controller.rb:46:34: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
    @items = @hip_pilot.items_out()
                                 ^^
app/controllers/users_controller.rb:55:36: C: Rails/Date: Do not use to_time on Date objects, because they know nothing about the time zone in use.
        due_comp = a.date_complete.to_time <=> b.date_complete.to_time
                                   ^^^^^^^
app/controllers/users_controller.rb:55:64: C: Rails/Date: Do not use to_time on Date objects, because they know nothing about the time zone in use.
        due_comp = a.date_complete.to_time <=> b.date_complete.to_time
                                                               ^^^^^^^
app/controllers/users_controller.rb:57:12: C: Style/NumericPredicate: Use due_comp.zero? instead of due_comp == 0.
        if due_comp == 0
           ^^^^^^^^^^^^^
app/controllers/users_controller.rb:58:11: C: Layout/LeadingCommentSpace: Missing space after #.
          #checked out for same due dates
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:62:31: C: Rails/Date: Do not use to_time on Date objects, because they know nothing about the time zone in use.
            (a.date_initiated.to_time <=> b.date_initiated.to_time)
                              ^^^^^^^
app/controllers/users_controller.rb:62:60: C: Rails/Date: Do not use to_time on Date objects, because they know nothing about the time zone in use.
            (a.date_initiated.to_time <=> b.date_initiated.to_time)
                                                           ^^^^^^^
app/controllers/users_controller.rb:80:53: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
    @items_available = @hip_pilot.requests_available()
                                                    ^^
app/controllers/users_controller.rb:81:49: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
    @items_pending = @hip_pilot.requests_pending()
                                                ^^
app/controllers/users_controller.rb:88:3: C: Metrics/AbcSize: Assignment Branch Condition size for renew is too high. [<13, 27, 13> 32.66/15]
  def renew ...
  ^^^^^^^^^
app/controllers/users_controller.rb:88:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for renew is too high. [9/7]
  def renew ...
  ^^^^^^^^^
app/controllers/users_controller.rb:88:3: C: Metrics/MethodLength: Method has too many lines. [21/10]
  def renew ...
  ^^^^^^^^^
app/controllers/users_controller.rb:88:3: C: Metrics/PerceivedComplexity: Perceived complexity for renew is too high. [9/7]
  def renew ...
  ^^^^^^^^^
app/controllers/users_controller.rb:91:10: C: Layout/ExtraSpacing: Unnecessary spacing detected.
        [  HipPilot::ItemOut.new(params[:item_out])  ]
         ^
app/controllers/users_controller.rb:91:10: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
        [  HipPilot::ItemOut.new(params[:item_out])  ]
         ^^
app/controllers/users_controller.rb:91:52: C: Layout/ExtraSpacing: Unnecessary spacing detected.
        [  HipPilot::ItemOut.new(params[:item_out])  ]
                                                   ^
app/controllers/users_controller.rb:91:52: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
        [  HipPilot::ItemOut.new(params[:item_out])  ]
                                                   ^^
app/controllers/users_controller.rb:93:29: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
        @hip_pilot.items_out()
                            ^^
app/controllers/users_controller.rb:100:36: C: Style/NumericPredicate: Use renewed.length.zero? instead of renewed.length == 0.
    elsif item_list.length == 1 && renewed.length == 0
                                   ^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:100:36: C: Style/ZeroLengthPredicate: Use empty? instead of length == 0.
    elsif item_list.length == 1 && renewed.length == 0
                                   ^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:110:37: W: Lint/AmbiguousOperator: Ambiguous block operator. Parenthesize the method arguments if it's surely a block operator, or add a whitespace to the right of the & if it should be a binary AND.
    renewed_items = renewed.collect &:item_id
                                    ^
app/controllers/users_controller.rb:113:55: W: Lint/AmbiguousOperator: Ambiguous block operator. Parenthesize the method arguments if it's surely a block operator, or add a whitespace to the right of the & if it should be a binary AND.
    flash[:not_renewed_item_ids] = (item_list.collect &:item_id) - renewed_items
                                                      ^
app/controllers/users_controller.rb:116:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    redirect_to :action => "itemsout"
                ^^^^^^^^^^
app/controllers/users_controller.rb:116:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    redirect_to :action => "itemsout"
                           ^^^^^^^^^^
app/controllers/users_controller.rb:121:29: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.
  def show_connection_error(e)
                            ^
app/controllers/users_controller.rb:124:10: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
    if e.kind_of?(HipPilot::LoginFailure)
         ^^^^^^^^
app/controllers/users_controller.rb:128:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    render "connection_error", :status => 502
           ^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:128:32: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render "connection_error", :status => 502
                               ^^^^^^^^^^
app/controllers/users_controller.rb:128:43: C: Rails/HttpStatus: Prefer :bad_gateway over 502 to define HTTP status code.
    render "connection_error", :status => 502
                                          ^^^
app/controllers/users_controller.rb:137:61: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    (solr_response, documents) = fetch(transactions.collect {|i| "bib_" + i.bib_id})
                                                            ^^
app/controllers/users_controller.rb:137:66: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    (solr_response, documents) = fetch(transactions.collect {|i| "bib_" + i.bib_id})
                                                                 ^^^^^^
app/controllers/users_controller.rb:137:83: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    (solr_response, documents) = fetch(transactions.collect {|i| "bib_" + i.bib_id})
                                                                                  ^
app/controllers/users_controller.rb:140:43: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
      item.solr_document = documents.find {|d| d['id'].sub(/^bib_/,'') == item.bib_id }
                                          ^^
app/controllers/users_controller.rb:140:67: C: Layout/SpaceAfterComma: Space missing after comma.
      item.solr_document = documents.find {|d| d['id'].sub(/^bib_/,'') == item.bib_id }
                                                                  ^
app/controllers/users_controller.rb:143:5: C: Style/RedundantReturn: Redundant return detected.
    return [solr_response, documents]
    ^^^^^^
app/controllers/users_controller.rb:150:1: C: Layout/EmptyLines: Extra blank line detected.
app/controllers/users_controller.rb:150:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/helpers/application_helper.rb:1:1: C: Layout/LeadingCommentSpace: Missing space after #.
#require_dependency 'vendor/plugins/blacklight/app/helpers/application_helper.rb'
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:4:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/application_helper.rb:6:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/application_helper.rb:10:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "JH Libraries"
    ^^^^^^^^^^^^^^
app/helpers/application_helper.rb:12:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/application_helper.rb:15:62: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # accomodate us displaying it as a checkbox in search form.
                                                             ^^^
app/helpers/application_helper.rb:16:4: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  #
   ^
app/helpers/application_helper.rb:19:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def remove_specified_facet_params(my_params, remove_facets)
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:24:39: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
      values = [values] unless values.kind_of?(Array)
                                      ^^^^^^^^
app/helpers/application_helper.rb:25:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/application_helper.rb:26:37: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
      next unless my_params[:f].try {|h| h[facet.to_sym] }
                                    ^^
app/helpers/application_helper.rb:29:26: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        values.include? v
                         ^^^^
app/helpers/application_helper.rb:33:5: C: Style/RedundantReturn: Redundant return detected.
    return my_params
    ^^^^^^
app/helpers/application_helper.rb:35:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/application_helper.rb:38:3: C: Metrics/AbcSize: Assignment Branch Condition size for render_kaminari_info is too high. [<9, 30, 7> 32.09/15]
  def render_kaminari_info(pageable_list, options = {}) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:38:3: C: Metrics/MethodLength: Method has too many lines. [19/10]
  def render_kaminari_info(pageable_list, options = {}) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:39:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      per_page = pageable_list.limit_value
  ^^^^
app/helpers/application_helper.rb:41:42: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      num_pages = pageable_list.num_pages
                                         ^^^^^^
app/helpers/application_helper.rb:42:50: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      start = ((current_page - 1) * per_page) + 1
                                                 ^^^^^^
app/helpers/application_helper.rb:48:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/application_helper.rb:50:7: C: Layout/MultilineOperationIndentation: Align the operands of an expression in an assignment spanning multiple lines.
      (pageable_list.empty? ? 'entry' : pageable_list.first.class.model_name.human)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:54:15: C: Style/WhenThen: Do not use when x;. Use when x then instead.
        when 0; "No #{h(entry_name.pluralize)} found".html_safe
              ^
app/helpers/application_helper.rb:54:55: C: Rails/OutputSafety: Tagging a string as html safe may be a security risk.
        when 0; "No #{h(entry_name.pluralize)} found".html_safe
                                                      ^^^^^^^^^
app/helpers/application_helper.rb:55:15: C: Style/WhenThen: Do not use when x;. Use when x then instead.
        when 1; "Displaying <b>1</b> #{h(entry_name)}".html_safe
              ^
app/helpers/application_helper.rb:55:56: C: Rails/OutputSafety: Tagging a string as html safe may be a security risk.
        when 1; "Displaying <b>1</b> #{h(entry_name)}".html_safe
                                                       ^^^^^^^^^
app/helpers/application_helper.rb:56:76: C: Rails/OutputSafety: Tagging a string as html safe may be a security risk.
        else; "Displaying <b>all #{total_num}</b> #{entry_name.pluralize}".html_safe
                                                                           ^^^^^^^^^
app/helpers/application_helper.rb:59:105: C: Rails/OutputSafety: Tagging a string as html safe may be a security risk.
        "Displaying #{h(entry_name.pluralize)} <b>#{start_num} - #{end_num}</b> of <b>#{total_num}</b>".html_safe
                                                                                                        ^^^^^^^^^
app/helpers/application_helper.rb:62:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/application_helper.rb:68:53: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # you may be able to delete this and go with BL's.
                                                    ^
app/helpers/application_helper.rb:73:7: C: Style/RedundantReturn: Redundant return detected.
      return block.call
      ^^^^^^
app/helpers/application_helper.rb:80:37: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # proper 'active' class if active.
                                    ^
app/helpers/application_helper.rb:85:52: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # html_options param will apply to <li>, not <a>.
                                                   ^
app/helpers/application_helper.rb:87:63: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # can pass block which will be given to `link_to` as normal.
                                                              ^
app/helpers/application_helper.rb:92:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      html_options[:class] ||= ""
                               ^^
app/helpers/application_helper.rb:93:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      html_options[:class] << " active "
                              ^^^^^^^^^^
app/helpers/application_helper.rb:96:5: C: Rails/ContentTag: Use tag instead of content_tag.
    content_tag(:li, html_options) do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:98:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    end
       ^^^^^^
app/helpers/application_helper.rb:101:1: C: Layout/EmptyLines: Extra blank line detected.
app/helpers/application_helper.rb:102:3: C: Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after protected.
  protected
  ^^^^^^^^^
app/helpers/application_helper.rb:105:3: C: Metrics/MethodLength: Method has too many lines. [13/10]
  def document_to_marc(document) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:109:7: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?
      rescue Exception => e ...
      ^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:111:38: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
          "Bad MARC data, #{document["id"]}: #{e.class} (#{e.message}):\n  " +
                                     ^^^^
app/helpers/application_helper.rb:114:9: C: Style/RedundantReturn: Redundant return detected.
        return nil
        ^^^^^^
app/helpers/application_helper.rb:116:5: C: Style/EmptyElse: Redundant else-clause.
    else
    ^^^^
app/helpers/application_helper.rb:121:1: C: Layout/EmptyLines: Extra blank line detected.
app/helpers/application_helper.rb:124:51: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  #  Search type navbar selection buttons and form
                                                  ^
app/helpers/application_helper.rb:132:49: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Can return nil if no recognized search area.
                                                ^
app/helpers/application_helper.rb:133:3: C: Metrics/AbcSize: Assignment Branch Condition size for current_search_area is too high. [<0, 11, 16> 19.42/15]
  def current_search_area(p = params) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:133:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for current_search_area is too high. [9/7]
  def current_search_area(p = params) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:133:3: C: Metrics/MethodLength: Method has too many lines. [15/10]
  def current_search_area(p = params) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:133:3: C: Metrics/PerceivedComplexity: Perceived complexity for current_search_area is too high. [10/7]
  def current_search_area(p = params) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:133:27: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.
  def current_search_area(p = params)
                          ^
app/helpers/application_helper.rb:134:5: C: Style/GuardClause: Use a guard clause (return :catalog if p[:controller] == "catalog" || p[:controller] == "advanced") instead of wrapping the code inside a conditional expression.
    if p[:controller] == "catalog" || p[:controller] == "advanced"
    ^^
app/helpers/application_helper.rb:134:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if p[:controller] == "catalog" || p[:controller] == "advanced"
                         ^^^^^^^^^
app/helpers/application_helper.rb:134:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if p[:controller] == "catalog" || p[:controller] == "advanced"
                                                        ^^^^^^^^^^
app/helpers/application_helper.rb:135:7: C: Style/RedundantReturn: Redundant return detected.
      return :catalog
      ^^^^^^
app/helpers/application_helper.rb:136:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    elsif p[:controller] == "reserves"
                            ^^^^^^^^^^
app/helpers/application_helper.rb:137:7: C: Style/RedundantReturn: Redundant return detected.
      return :reserves
      ^^^^^^
app/helpers/application_helper.rb:138:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    elsif p[:controller] == "users"
                            ^^^^^^^
app/helpers/application_helper.rb:139:7: C: Style/RedundantReturn: Redundant return detected.
      return :user
      ^^^^^^
app/helpers/application_helper.rb:140:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    elsif p[:controller] == "user_sessions"
                            ^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:141:7: C: Style/RedundantReturn: Redundant return detected.
      return :login
      ^^^^^^
app/helpers/application_helper.rb:142:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    elsif p[:controller] == "multi_search" && p[:engine].present?
                            ^^^^^^^^^^^^^^
app/helpers/application_helper.rb:143:7: C: Style/RedundantReturn: Redundant return detected.
      return p[:engine].to_sym
      ^^^^^^
app/helpers/application_helper.rb:144:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    elsif p[:controller] == "multi_search"
                            ^^^^^^^^^^^^^^
app/helpers/application_helper.rb:145:7: C: Style/RedundantReturn: Redundant return detected.
      return :multi_search
      ^^^^^^
app/helpers/application_helper.rb:147:7: C: Style/RedundantReturn: Redundant return detected.
      return nil
      ^^^^^^
app/helpers/application_helper.rb:153:77: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  #     <%= render_search_button("Catalog", current_search_area == :catalog,
                                                                            ^
app/helpers/application_helper.rb:156:3: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
     link_to_unless(active_condition, label, url_arg, :class => "search-option btn btn-default") do
  ^^^
app/helpers/application_helper.rb:156:55: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
     link_to_unless(active_condition, label, url_arg, :class => "search-option btn btn-default") do
                                                      ^^^^^^^^^
app/helpers/application_helper.rb:156:65: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
     link_to_unless(active_condition, label, url_arg, :class => "search-option btn btn-default") do
                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:156:100: C: Layout/TrailingWhitespace: Trailing whitespace detected.
     link_to_unless(active_condition, label, url_arg, :class => "search-option btn btn-default") do
                                                                                                   ^
app/helpers/application_helper.rb:158:9: C: Rails/ContentTag: Use tag instead of content_tag.
        content_tag(:span, label, :class => "search-option btn active btn-primary")
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:158:35: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        content_tag(:span, label, :class => "search-option btn active btn-primary")
                                  ^^^^^^^^^
app/helpers/application_helper.rb:158:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        content_tag(:span, label, :class => "search-option btn active btn-primary")
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:159:7: C: Layout/BlockAlignment: end at 159, 6 is not aligned with link_to_unless(active_condition, label, url_arg, :class => "search-option btn btn-default") do  at 156, 5.
      end
      ^^^
app/helpers/application_helper.rb:159:10: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      end
         ^^^^^^^^^
app/helpers/application_helper.rb:162:1: C: Layout/EmptyLines: Extra blank line detected.
app/helpers/application_helper.rb:163:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def search_url_context(base = {}, params = params())
  ^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:163:52: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
  def search_url_context(base = {}, params = params())
                                                   ^^
app/helpers/application_helper.rb:170:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/application_helper.rb:171:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/application_helper.rb:172:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/holdings_helper.rb:3:43: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Can return nil if no label is desired.
                                          ^
app/helpers/holdings_helper.rb:6:7: C: Indent when as deep as case.
      when "866" then 'Includes' # 'main run'. we could return nil for no label.
      ^^^^
app/helpers/holdings_helper.rb:6:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      when "866" then 'Includes' # 'main run'. we could return nil for no label.
           ^^^^^
app/helpers/holdings_helper.rb:7:7: C: Indent when as deep as case.
      when '867' then 'With Supplements'
      ^^^^
app/helpers/holdings_helper.rb:8:7: C: Indent when as deep as case.
      when '868' then 'With Indexes'
      ^^^^
app/helpers/holdings_helper.rb:10:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    end
       ^^^^^^
app/helpers/local_catalog_helper.rb:1:1: C: Style/Encoding: Unnecessary utf-8 encoding comment.
# encoding: UTF-8
^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:6:1: C: Metrics/ModuleLength: Module has too many lines. [109/100]
module LocalCatalogHelper ...
^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:10:1: C: Layout/EmptyLines: Extra blank line detected.
app/helpers/local_catalog_helper.rb:14:8: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
    if ( document_to_marc(@document))
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:14:8: C: Style/RedundantParentheses: Don't use parentheses around a method call.
    if ( document_to_marc(@document))
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:14:9: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    if ( document_to_marc(@document))
        ^
app/helpers/local_catalog_helper.rb:14:27: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
    if ( document_to_marc(@document))
                          ^^^^^^^^^
app/helpers/local_catalog_helper.rb:15:14: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render(:partial => "catalog/show_marc_heading", :locals => {:document => @document})
             ^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:15:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      render(:partial => "catalog/show_marc_heading", :locals => {:document => @document})
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:15:55: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render(:partial => "catalog/show_marc_heading", :locals => {:document => @document})
                                                      ^^^^^^^^^^
app/helpers/local_catalog_helper.rb:15:66: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      render(:partial => "catalog/show_marc_heading", :locals => {:document => @document})
                                                                 ^
app/helpers/local_catalog_helper.rb:15:67: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render(:partial => "catalog/show_marc_heading", :locals => {:document => @document})
                                                                  ^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:15:80: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
      render(:partial => "catalog/show_marc_heading", :locals => {:document => @document})
                                                                               ^^^^^^^^^
app/helpers/local_catalog_helper.rb:15:89: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      render(:partial => "catalog/show_marc_heading", :locals => {:document => @document})
                                                                                        ^
app/helpers/local_catalog_helper.rb:25:8: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
    if ( action_name == :show && document_to_marc(document))
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:25:9: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    if ( action_name == :show && document_to_marc(document))
        ^
app/helpers/local_catalog_helper.rb:26:14: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render :partial => "catalog/show_marc", :locals => {:document => document}
             ^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:26:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      render :partial => "catalog/show_marc", :locals => {:document => document}
                         ^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:26:47: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render :partial => "catalog/show_marc", :locals => {:document => document}
                                              ^^^^^^^^^^
app/helpers/local_catalog_helper.rb:26:58: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      render :partial => "catalog/show_marc", :locals => {:document => document}
                                                         ^
app/helpers/local_catalog_helper.rb:26:59: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render :partial => "catalog/show_marc", :locals => {:document => document}
                                                          ^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:26:80: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      render :partial => "catalog/show_marc", :locals => {:document => document}
                                                                               ^
app/helpers/local_catalog_helper.rb:27:11: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an elsif.
    elsif (action_name == :index && document_to_marc(document))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:28:14: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render :partial => "catalog/index_marc", :locals => {:document => document}
             ^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:28:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      render :partial => "catalog/index_marc", :locals => {:document => document}
                         ^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:28:48: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render :partial => "catalog/index_marc", :locals => {:document => document}
                                               ^^^^^^^^^^
app/helpers/local_catalog_helper.rb:28:59: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      render :partial => "catalog/index_marc", :locals => {:document => document}
                                                          ^
app/helpers/local_catalog_helper.rb:28:60: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render :partial => "catalog/index_marc", :locals => {:document => document}
                                                           ^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:28:81: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      render :partial => "catalog/index_marc", :locals => {:document => document}
                                                                                ^
app/helpers/local_catalog_helper.rb:49:21: C: Style/PreferredHashMethods: Use Hash#key? instead of Hash#has_key?.
    truncate = opts.has_key?(:truncate) ? opts.delete(:truncate) : 160
                    ^^^^^^^^
app/helpers/local_catalog_helper.rb:51:9: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    text= if document_to_marc(document)
        ^
app/helpers/local_catalog_helper.rb:52:7: C: Layout/IndentationWidth: Use 2 (not -4) spaces for indentation.
      marc_index_title(document)
      ^^^^
app/helpers/local_catalog_helper.rb:53:5: C: Layout/ElseAlignment: Align else with if.
    else
    ^^^^
app/helpers/local_catalog_helper.rb:55:5: W: Layout/EndAlignment: end at 55, 4 is not aligned with if at 51, 10.
    end
    ^^^
app/helpers/local_catalog_helper.rb:57:27: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    text = truncate(text, :omission => '…', :separator => ' ', :length => truncate) if truncate
                          ^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:57:45: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    text = truncate(text, :omission => '…', :separator => ' ', :length => truncate) if truncate
                                            ^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:57:64: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    text = truncate(text, :omission => '…', :separator => ' ', :length => truncate) if truncate
                                                               ^^^^^^^^^^
app/helpers/local_catalog_helper.rb:59:5: C: Style/RedundantReturn: Redundant return detected.
    return text
    ^^^^^^
app/helpers/local_catalog_helper.rb:65:3: C: Metrics/AbcSize: Assignment Branch Condition size for link_to_document is too high. [<4, 16, 5> 17.23/15]
  def link_to_document(doc, label, opts) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:65:3: C: Metrics/MethodLength: Method has too many lines. [15/10]
  def link_to_document(doc, label, opts) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:67:7: C: Layout/IndentationWidth: Use 2 (not -17) spaces for indentation.
      content_tag("span", "", :id => "doc_counter_#{opts[:counter]}")
      ^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:67:7: C: Rails/ContentTag: Use tag instead of content_tag.
      content_tag("span", "", :id => "doc_counter_#{opts[:counter]}")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:67:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      content_tag("span", "", :id => "doc_counter_#{opts[:counter]}")
                  ^^^^^^
app/helpers/local_catalog_helper.rb:67:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      content_tag("span", "", :id => "doc_counter_#{opts[:counter]}")
                          ^^
app/helpers/local_catalog_helper.rb:67:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      content_tag("span", "", :id => "doc_counter_#{opts[:counter]}")
                              ^^^^^^
app/helpers/local_catalog_helper.rb:68:5: C: Layout/ElseAlignment: Align else with if.
    else
    ^^^^
app/helpers/local_catalog_helper.rb:69:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "".html_safe
      ^^
app/helpers/local_catalog_helper.rb:70:5: W: Layout/EndAlignment: end at 70, 4 is not aligned with if at 66, 23.
    end
    ^^^
app/helpers/local_catalog_helper.rb:73:14: C: Rails/ContentTag: Use tag instead of content_tag.
    suffix = content_tag("span", :class => "index-title-subhead") do
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:73:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    suffix = content_tag("span", :class => "index-title-subhead") do
                         ^^^^^^
app/helpers/local_catalog_helper.rb:73:34: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    suffix = content_tag("span", :class => "index-title-subhead") do
                                 ^^^^^^^^^
app/helpers/local_catalog_helper.rb:73:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    suffix = content_tag("span", :class => "index-title-subhead") do
                                           ^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:74:7: C: Rails/ContentTag: Use tag instead of content_tag.
      content_tag("span", heading_type_str(doc), :class => "types")  +
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:74:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      content_tag("span", heading_type_str(doc), :class => "types")  +
                  ^^^^^^
app/helpers/local_catalog_helper.rb:74:50: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      content_tag("span", heading_type_str(doc), :class => "types")  +
                                                 ^^^^^^^^^
app/helpers/local_catalog_helper.rb:74:60: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      content_tag("span", heading_type_str(doc), :class => "types")  +
                                                           ^^^^^^^
app/helpers/local_catalog_helper.rb:74:68: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      content_tag("span", heading_type_str(doc), :class => "types")  +
                                                                   ^
app/helpers/local_catalog_helper.rb:74:70: C: Layout/SpaceAroundOperators: Operator + should be surrounded by a single space.
      content_tag("span", heading_type_str(doc), :class => "types")  +
                                                                     ^
app/helpers/local_catalog_helper.rb:75:7: C: Layout/MultilineOperationIndentation: Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
      if (languages = heading_language_str(doc)) ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:76:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        " in ".html_safe + content_tag("span", languages, :class => "languages")
        ^^^^^^
app/helpers/local_catalog_helper.rb:76:28: C: Rails/ContentTag: Use tag instead of content_tag.
        " in ".html_safe + content_tag("span", languages, :class => "languages")
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:76:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        " in ".html_safe + content_tag("span", languages, :class => "languages")
                                       ^^^^^^
app/helpers/local_catalog_helper.rb:76:59: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        " in ".html_safe + content_tag("span", languages, :class => "languages")
                                                          ^^^^^^^^^
app/helpers/local_catalog_helper.rb:76:69: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        " in ".html_safe + content_tag("span", languages, :class => "languages")
                                                                    ^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:78:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        ""
        ^^
app/helpers/local_catalog_helper.rb:82:5: W: Lint/UselessAssignment: Useless assignment to variable - link.
    link = link_to label, url_for_document(doc), document_link_params(doc, opts)
    ^^^^
app/helpers/local_catalog_helper.rb:84:5: C: Style/RedundantReturn: Redundant return detected.
    return  safe_join([span_with_anchor, super(doc, label, opts), suffix], " ")
    ^^^^^^
app/helpers/local_catalog_helper.rb:84:11: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    return  safe_join([span_with_anchor, super(doc, label, opts), suffix], " ")
          ^
app/helpers/local_catalog_helper.rb:84:76: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return  safe_join([span_with_anchor, super(doc, label, opts), suffix], " ")
                                                                           ^^^
app/helpers/local_catalog_helper.rb:85:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
app/helpers/local_catalog_helper.rb:92:8: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
    if document["format"] && document["format"].include?("Online")
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:92:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if document["format"] && document["format"].include?("Online")
                ^^^^^^^^
app/helpers/local_catalog_helper.rb:92:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if document["format"] && document["format"].include?("Online")
                                      ^^^^^^^^
app/helpers/local_catalog_helper.rb:92:58: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if document["format"] && document["format"].include?("Online")
                                                         ^^^^^^^^
app/helpers/local_catalog_helper.rb:101:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "Online Access"
      ^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:103:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "Related Links"
      ^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:108:3: C: Metrics/AbcSize: Assignment Branch Condition size for holding_status_classes is too high. [<1, 16, 8> 17.92/15]
  def holding_status_classes(holding) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:108:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for holding_status_classes is too high. [8/7]
  def holding_status_classes(holding) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:108:3: C: Metrics/PerceivedComplexity: Perceived complexity for holding_status_classes is too high. [8/7]
  def holding_status_classes(holding) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:111:1: C: Layout/EmptyLines: Extra blank line detected.
app/helpers/local_catalog_helper.rb:112:8: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
    if holding && holding.status && holding.status.dlf_expanded_code
       ^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:113:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      classes << ("dlf-"+ holding.status.dlf_expanded_code.parameterize)
                  ^^^^^^
app/helpers/local_catalog_helper.rb:113:25: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
      classes << ("dlf-"+ holding.status.dlf_expanded_code.parameterize)
                        ^
app/helpers/local_catalog_helper.rb:116:8: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
    if holding && holding.status && holding.status.display_label && holding.status.display_label.upcase == "AVAILABLE"
       ^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:116:108: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if holding && holding.status && holding.status.display_label && holding.status.display_label.upcase == "AVAILABLE"
                                                                                                           ^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:117:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      classes << "available"
                 ^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:120:5: C: Style/RedundantReturn: Redundant return detected.
    return classes.join(" ")
    ^^^^^^
app/helpers/local_catalog_helper.rb:120:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return classes.join(" ")
                        ^^^
app/helpers/local_catalog_helper.rb:130:3: C: Metrics/AbcSize: Assignment Branch Condition size for show_borrow_direct? is too high. [<0, 17, 8> 18.79/15]
  def show_borrow_direct?(document) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:130:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for show_borrow_direct? is too high. [8/7]
  def show_borrow_direct?(document) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:145:5: C: Style/RedundantReturn: Redundant return detected.
    return  document.respond_to?(:to_openurl) &&
    ^^^^^^
app/helpers/local_catalog_helper.rb:146:52: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            document.to_openurl.referent.format != "journal" &&
                                                   ^^^^^^^^^
app/helpers/local_catalog_helper.rb:148:13: C: Layout/SpaceAfterNot: Do not leave space between ! and its argument.
            ! document.to_holdings.find {|h| ...
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:148:41: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
            ! document.to_holdings.find {|h|
                                        ^^
app/helpers/local_catalog_helper.rb:148:41: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
            ! document.to_holdings.find {|h|
                                        ^
app/helpers/local_catalog_helper.rb:149:13: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                (h.has_children? || h.status.try(:display_label) == "Available" ||
            ^^^^
app/helpers/local_catalog_helper.rb:149:69: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                (h.has_children? || h.status.try(:display_label) == "Available" ||
                                                                    ^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:150:21: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
                    %w(ecageki eofart eofms esmanu esgpms esarck esarc).include?(h.collection.try(:internal_code))
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:152:18: C: Layout/MultilineOperationIndentation: Align the operands of a condition in a return statement spanning multiple lines.
                 h.collection.try(:display_label) !~ /(reserves?)|(non-circulating)/i
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:160:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    StackviewCallNumber.where(:system_id => document.id).order("created_at").pluck(:sort_key).first
                              ^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:160:64: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    StackviewCallNumber.where(:system_id => document.id).order("created_at").pluck(:sort_key).first
                                                               ^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:163:1: C: Layout/EmptyLines: Extra blank line detected.
app/helpers/local_catalog_helper.rb:172:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def borrow_direct_search_url(document)
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:176:5: C: Style/GuardClause: Use a guard clause (return unless document.respond_to?(:to_openurl) && (openurl = document.to_openurl)) instead of wrapping the code inside a conditional expression.
    if document.respond_to?(:to_openurl) && (openurl = document.to_openurl)
    ^^
app/helpers/local_catalog_helper.rb:179:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      author = ou_metadata["aulast"] || ou_metadata["au"]
                           ^^^^^^^^
app/helpers/local_catalog_helper.rb:179:53: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      author = ou_metadata["aulast"] || ou_metadata["au"]
                                                    ^^^^
app/helpers/local_catalog_helper.rb:180:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      title  = ou_metadata["btitle"] || ou_metadata["title"]
                           ^^^^^^^^
app/helpers/local_catalog_helper.rb:180:53: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      title  = ou_metadata["btitle"] || ou_metadata["title"]
                                                    ^^^^^^^
app/helpers/local_catalog_helper.rb:182:7: C: Style/RedundantReturn: Redundant return detected.
      return BorrowDirect::GenerateQuery.new( borrow_direct_url ).
      ^^^^^^
app/helpers/local_catalog_helper.rb:182:46: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      return BorrowDirect::GenerateQuery.new( borrow_direct_url ).
                                             ^
app/helpers/local_catalog_helper.rb:182:64: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      return BorrowDirect::GenerateQuery.new( borrow_direct_url ).
                                                               ^
app/helpers/local_catalog_helper.rb:182:66: C: Layout/DotPosition: Place the . on the next line, together with the method name.
      return BorrowDirect::GenerateQuery.new( borrow_direct_url ).
                                                                 ^
app/helpers/local_catalog_helper.rb:183:9: C: Layout/MultilineMethodCallIndentation: Align normalized_author_title_query with BorrowDirect::GenerateQuery.new( borrow_direct_url ). on line 182.
        normalized_author_title_query(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:184:11: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
          :title  => title,
          ^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:184:11: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          :title  => title,
          ^^^^^^^^^^
app/helpers/local_catalog_helper.rb:185:11: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          :author => author
          ^^^^^^^^^^
app/helpers/local_catalog_helper.rb:191:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    link_to "Check BorrowDirect", borrow_direct_search_url(document), :class => "btn btn-primary btn-sm", :target => "_blank"
            ^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:191:71: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    link_to "Check BorrowDirect", borrow_direct_search_url(document), :class => "btn btn-primary btn-sm", :target => "_blank"
                                                                      ^^^^^^^^^
app/helpers/local_catalog_helper.rb:191:81: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    link_to "Check BorrowDirect", borrow_direct_search_url(document), :class => "btn btn-primary btn-sm", :target => "_blank"
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:191:107: C: Rails/LinkToBlank: Specify a :rel option containing noopener.
    link_to "Check BorrowDirect", borrow_direct_search_url(document), :class => "btn btn-primary btn-sm", :target => "_blank"
                                                                                                          ^^^^^^^^^^^^^^^^^^^
app/helpers/local_catalog_helper.rb:191:107: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    link_to "Check BorrowDirect", borrow_direct_search_url(document), :class => "btn btn-primary btn-sm", :target => "_blank"
                                                                                                          ^^^^^^^^^^
app/helpers/local_catalog_helper.rb:191:118: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    link_to "Check BorrowDirect", borrow_direct_search_url(document), :class => "btn btn-primary btn-sm", :target => "_blank"
                                                                                                                     ^^^^^^^^
app/helpers/local_catalog_helper.rb:191:121: C: Layout/LineLength: Line is too long. [125/120]
    link_to "Check BorrowDirect", borrow_direct_search_url(document), :class => "btn btn-primary btn-sm", :target => "_blank"
                                                                                                                        ^^^^^
app/helpers/local_catalog_helper.rb:199:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if not record['260'] and record['264']
    ^^
app/helpers/local_catalog_helper.rb:199:8: C: Style/Not: Use ! instead of not.
    if not record['260'] and record['264']
       ^^^
app/helpers/local_catalog_helper.rb:199:26: C: Style/AndOr: Use && instead of and.
    if not record['260'] and record['264']
                         ^^^
app/helpers/local_catalog_helper.rb:206:1: C: Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body end.
app/helpers/marc_heading_helper.rb:1:1: C: Style/Encoding: Unnecessary utf-8 encoding comment.
# encoding: UTF-8
^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:3:1: C: Metrics/ModuleLength: Module has too many lines. [148/100]
module MarcHeadingHelper ...
^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:7:3: C: Naming/ConstantName: Use SCREAMING_SNAKE_CASE for constants.
  FieldDescriptions = {
  ^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:7:23: C: Style/MutableConstant: Freeze mutable objects assigned to constants.
  FieldDescriptions = { ...
                      ^
app/helpers/marc_heading_helper.rb:8:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :title => { :source => "245akn", :formatter=> marc_logic(:format_strip_edge_punctuation) },
    ^^^^^^^^^
app/helpers/marc_heading_helper.rb:8:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :title => { :source => "245akn", :formatter=> marc_logic(:format_strip_edge_punctuation) },
                ^^^^^^^^^^
app/helpers/marc_heading_helper.rb:8:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    :title => { :source => "245akn", :formatter=> marc_logic(:format_strip_edge_punctuation) },
                           ^^^^^^^^
app/helpers/marc_heading_helper.rb:8:38: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :title => { :source => "245akn", :formatter=> marc_logic(:format_strip_edge_punctuation) },
                                     ^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:8:48: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
    :title => { :source => "245akn", :formatter=> marc_logic(:format_strip_edge_punctuation) },
                                               ^^
app/helpers/marc_heading_helper.rb:10:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :sub_title => {:source => "245bfps", :formatter=> marc_logic(:format_strip_edge_punctuation)},
    ^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:10:19: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    :sub_title => {:source => "245bfps", :formatter=> marc_logic(:format_strip_edge_punctuation)},
                  ^
app/helpers/marc_heading_helper.rb:10:20: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :sub_title => {:source => "245bfps", :formatter=> marc_logic(:format_strip_edge_punctuation)},
                   ^^^^^^^^^^
app/helpers/marc_heading_helper.rb:10:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    :sub_title => {:source => "245bfps", :formatter=> marc_logic(:format_strip_edge_punctuation)},
                              ^^^^^^^^^
app/helpers/marc_heading_helper.rb:10:42: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :sub_title => {:source => "245bfps", :formatter=> marc_logic(:format_strip_edge_punctuation)},
                                         ^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:10:52: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
    :sub_title => {:source => "245bfps", :formatter=> marc_logic(:format_strip_edge_punctuation)},
                                                   ^^
app/helpers/marc_heading_helper.rb:10:97: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    :sub_title => {:source => "245bfps", :formatter=> marc_logic(:format_strip_edge_punctuation)},
                                                                                                ^
app/helpers/marc_heading_helper.rb:12:64: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # subfields need to match how author solr field is indexed.
                                                               ^
app/helpers/marc_heading_helper.rb:13:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :main_entry => {:source => [
    ^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:13:20: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    :main_entry => {:source => [
                   ^
app/helpers/marc_heading_helper.rb:13:21: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :main_entry => {:source => [
                    ^^^^^^^^^^
app/helpers/marc_heading_helper.rb:14:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {:load_marc => "100abcdfgjklmnopqrstu",
      ^
app/helpers/marc_heading_helper.rb:14:8: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      {:load_marc => "100abcdfgjklmnopqrstu",
       ^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:14:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      {:load_marc => "100abcdfgjklmnopqrstu",
                     ^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:15:8: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
       :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
       ^^^^^^^^
app/helpers/marc_heading_helper.rb:15:17: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
       :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                ^
app/helpers/marc_heading_helper.rb:15:18: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
       :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                 ^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:15:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
       :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                                 ^^^^^^^^
app/helpers/marc_heading_helper.rb:15:44: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
       :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                                           ^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:15:68: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
       :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                                                                   ^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:15:82: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
       :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                                                                                 ^^^^^^^
app/helpers/marc_heading_helper.rb:16:7: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
      },
      ^
app/helpers/marc_heading_helper.rb:16:9: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      },
        ^
app/helpers/marc_heading_helper.rb:17:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      { :load_marc => "110abcdfgjklmnopqrstu",
        ^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:17:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      { :load_marc => "110abcdfgjklmnopqrstu",
                      ^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:18:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
        ^^^^^^^^
app/helpers/marc_heading_helper.rb:18:18: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
        :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                 ^
app/helpers/marc_heading_helper.rb:18:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                  ^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:18:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                                  ^^^^^^^^
app/helpers/marc_heading_helper.rb:18:45: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                                            ^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:18:69: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                                                                    ^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:18:83: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                                                                                  ^^^^^^^^^
app/helpers/marc_heading_helper.rb:19:7: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
      },
      ^
app/helpers/marc_heading_helper.rb:20:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      { :load_marc => "111acdfgklnpqstu",
        ^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:20:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      { :load_marc => "111acdfgklnpqstu",
                      ^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:21:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
        ^^^^^^^^
app/helpers/marc_heading_helper.rb:21:18: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
        :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                 ^
app/helpers/marc_heading_helper.rb:21:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                  ^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:21:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                                  ^^^^^^^^
app/helpers/marc_heading_helper.rb:21:45: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                                            ^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:21:69: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                                                                    ^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:21:83: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                                                                                  ^^^^^^^^^
app/helpers/marc_heading_helper.rb:22:7: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
      }
      ^
app/helpers/marc_heading_helper.rb:23:7: C: Layout/FirstArrayElementIndentation: Indent the right bracket the same as the start of the line where the left bracket is.
      ]
      ^
app/helpers/marc_heading_helper.rb:24:5: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
    },
    ^
app/helpers/marc_heading_helper.rb:25:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:27:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :type => { :source => { :solr_field => "format",
    ^^^^^^^^
app/helpers/marc_heading_helper.rb:27:16: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :type => { :source => { :solr_field => "format",
               ^^^^^^^^^^
app/helpers/marc_heading_helper.rb:27:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :type => { :source => { :solr_field => "format",
                            ^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:27:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    :type => { :source => { :solr_field => "format",
                                           ^^^^^^^^
app/helpers/marc_heading_helper.rb:27:53: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    :type => { :source => { :solr_field => "format",
                                                    ^
app/helpers/marc_heading_helper.rb:28:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :delete_if_filter => lambda do |a, line|
                            ^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:28:61: W: Lint/UnusedBlockArgument: Unused block argument - a. If it's necessary, use _ or _a as an argument name to indicate that it won't be used.
                            :delete_if_filter => lambda do |a, line|
                                                            ^
app/helpers/marc_heading_helper.rb:29:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                              line.raw_data == "Other"
                                               ^^^^^^^
app/helpers/marc_heading_helper.rb:31:27: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                          }
                          ^
app/helpers/marc_heading_helper.rb:32:15: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
              },
              ^
app/helpers/marc_heading_helper.rb:34:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :backup_type => { :source => "245h",
    ^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:34:23: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :backup_type => { :source => "245h",
                      ^^^^^^^^^^
app/helpers/marc_heading_helper.rb:34:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    :backup_type => { :source => "245h",
                                 ^^^^^^
app/helpers/marc_heading_helper.rb:35:23: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                      :formatter => marc_logic(:format_245h)
                      ^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:36:20: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                   },
                   ^
app/helpers/marc_heading_helper.rb:37:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:38:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :lang => { :source => {:solr_field => "language_facet",
    ^^^^^^^^
app/helpers/marc_heading_helper.rb:38:16: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :lang => { :source => {:solr_field => "language_facet",
               ^^^^^^^^^^
app/helpers/marc_heading_helper.rb:38:27: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    :lang => { :source => {:solr_field => "language_facet",
                          ^
app/helpers/marc_heading_helper.rb:38:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :lang => { :source => {:solr_field => "language_facet",
                           ^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:38:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    :lang => { :source => {:solr_field => "language_facet",
                                          ^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:38:60: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    :lang => { :source => {:solr_field => "language_facet",
                                                           ^
app/helpers/marc_heading_helper.rb:39:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :delete_if_filter =>
                           ^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:40:42: W: Lint/UnusedBlockArgument: Unused block argument - a. If it's necessary, use _ or _a as an argument name to indicate that it won't be used.
                              lambda do |a, line|
                                         ^
app/helpers/marc_heading_helper.rb:41:50: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                                line.raw_data == "Unknown"
                                                 ^^^^^^^^^
app/helpers/marc_heading_helper.rb:43:27: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                          }
                          ^
app/helpers/marc_heading_helper.rb:44:14: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
             },
             ^
app/helpers/marc_heading_helper.rb:46:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :pub_date => {:source => {:solr_field => "pub_date"}},
    ^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:46:18: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    :pub_date => {:source => {:solr_field => "pub_date"}},
                 ^
app/helpers/marc_heading_helper.rb:46:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :pub_date => {:source => {:solr_field => "pub_date"}},
                  ^^^^^^^^^^
app/helpers/marc_heading_helper.rb:46:30: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    :pub_date => {:source => {:solr_field => "pub_date"}},
                             ^
app/helpers/marc_heading_helper.rb:46:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :pub_date => {:source => {:solr_field => "pub_date"}},
                              ^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:46:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    :pub_date => {:source => {:solr_field => "pub_date"}},
                                             ^^^^^^^^^^
app/helpers/marc_heading_helper.rb:46:56: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    :pub_date => {:source => {:solr_field => "pub_date"}},
                                                       ^
app/helpers/marc_heading_helper.rb:46:57: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    :pub_date => {:source => {:solr_field => "pub_date"}},
                                                        ^
app/helpers/marc_heading_helper.rb:46:58: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
    :pub_date => {:source => {:solr_field => "pub_date"}},
                                                         ^
app/helpers/marc_heading_helper.rb:50:1: C: Layout/EmptyLines: Extra blank line detected.
app/helpers/marc_heading_helper.rb:53:34: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # it results in confusing code.
                                 ^
app/helpers/marc_heading_helper.rb:54:3: C: Metrics/AbcSize: Assignment Branch Condition size for heading_linked_titles is too high. [<3, 21, 1> 21.24/15]
  def heading_linked_titles(document) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:54:3: C: Metrics/MethodLength: Method has too many lines. [12/10]
  def heading_linked_titles(document) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:56:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:57:5: C: Style/RedundantReturn: Redundant return detected.
    return linked_marc_fields(marc, marc['245']).collect do |field|
    ^^^^^^
app/helpers/marc_heading_helper.rb:58:13: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
      title =  field.find_all do |subfield|
            ^
app/helpers/marc_heading_helper.rb:58:14: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      title =  field.find_all do |subfield|
             ^
app/helpers/marc_heading_helper.rb:59:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "a".include?( subfield.code)
        ^^^
app/helpers/marc_heading_helper.rb:59:22: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        "a".include?( subfield.code)
                     ^
app/helpers/marc_heading_helper.rb:60:7: C: Style/MultilineBlockChain: Avoid multi-line chains of blocks.
      end.collect {|sv| sv.value}.join(" ")
      ^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:60:19: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
      end.collect {|sv| sv.value}.join(" ")
                  ^^
app/helpers/marc_heading_helper.rb:60:19: C: Style/SymbolProc: Pass &:value as an argument to collect instead of a block.
      end.collect {|sv| sv.value}.join(" ")
                  ^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:60:33: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      end.collect {|sv| sv.value}.join(" ")
                                ^
app/helpers/marc_heading_helper.rb:60:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      end.collect {|sv| sv.value}.join(" ")
                                       ^^^
app/helpers/marc_heading_helper.rb:60:44: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      end.collect {|sv| sv.value}.join(" ")
                                           ^^
app/helpers/marc_heading_helper.rb:63:7: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
      "bfnps".include?(subfield.code)

app/helpers/marc_heading_helper.rb:63:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "bfnps".include?(subfield.code)
      ^^^^^^^
app/helpers/marc_heading_helper.rb:64:7: C: Style/MultilineBlockChain: Avoid multi-line chains of blocks.
      end.collect {|sv| sv.value}.join(" ")
      ^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:64:19: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
      end.collect {|sv| sv.value}.join(" ")
                  ^^
app/helpers/marc_heading_helper.rb:64:19: C: Style/SymbolProc: Pass &:value as an argument to collect instead of a block.
      end.collect {|sv| sv.value}.join(" ")
                  ^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:64:33: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      end.collect {|sv| sv.value}.join(" ")
                                ^
app/helpers/marc_heading_helper.rb:64:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      end.collect {|sv| sv.value}.join(" ")
                                       ^^^
app/helpers/marc_heading_helper.rb:66:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:67:30: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      strip_edge_punctuation( title ) +
                             ^
app/helpers/marc_heading_helper.rb:67:36: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      strip_edge_punctuation( title ) +
                                   ^
app/helpers/marc_heading_helper.rb:67:40: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      strip_edge_punctuation( title ) +
                                       ^
app/helpers/marc_heading_helper.rb:68:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      (subtitle.empty? ? "" : ":") +
                         ^^
app/helpers/marc_heading_helper.rb:68:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      (subtitle.empty? ? "" : ":") +
                              ^^^
app/helpers/marc_heading_helper.rb:68:37: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      (subtitle.empty? ? "" : ":") +
                                    ^
app/helpers/marc_heading_helper.rb:69:30: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      strip_edge_punctuation( subtitle )
                             ^
app/helpers/marc_heading_helper.rb:69:39: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      strip_edge_punctuation( subtitle )
                                      ^
app/helpers/marc_heading_helper.rb:70:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    end
       ^^^^
app/helpers/marc_heading_helper.rb:74:71: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # the 245. Too hard to use MarcPresenter for this, we do it by hand.
                                                                      ^
app/helpers/marc_heading_helper.rb:77:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:78:5: C: Style/RedundantReturn: Redundant return detected.
    return linked_marc_fields(marc, marc['245']).collect do |field|
    ^^^^^^
app/helpers/marc_heading_helper.rb:79:41: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      strip_edge_punctuation(field['c'])
                                        ^
app/helpers/marc_heading_helper.rb:82:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:84:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:85:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def heading_type_str(document)
  ^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:86:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      lines = marc_presenter(document, :type).lines
  ^^^^
app/helpers/marc_heading_helper.rb:87:7: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if lines.length == 0
      ^^
app/helpers/marc_heading_helper.rb:87:10: C: Style/NumericPredicate: Use lines.length.zero? instead of lines.length == 0.
      if lines.length == 0
         ^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:87:10: C: Style/ZeroLengthPredicate: Use empty? instead of length == 0.
      if lines.length == 0
         ^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:88:22: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        lines.concat( marc_presenter(document, :backup_type).lines )
                     ^
app/helpers/marc_heading_helper.rb:88:67: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        lines.concat( marc_presenter(document, :backup_type).lines )
                                                                  ^
app/helpers/marc_heading_helper.rb:90:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:91:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:92:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      join_marc_lines(lines, :seperator => ", ")
                             ^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:92:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      join_marc_lines(lines, :seperator => ", ")
                                           ^^^^
app/helpers/marc_heading_helper.rb:93:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:95:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:97:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def heading_language_str(document)
  ^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:100:38: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    join_marc_lines(presenter.lines, :seperator => ", ")
                                     ^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:100:52: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    join_marc_lines(presenter.lines, :seperator => ", ")
                                                   ^^^^
app/helpers/marc_heading_helper.rb:101:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
app/helpers/marc_heading_helper.rb:111:22: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    render_marc_line( marc_presenter(document, :title).lines[0]  )
                     ^
app/helpers/marc_heading_helper.rb:111:64: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    render_marc_line( marc_presenter(document, :title).lines[0]  )
                                                               ^
app/helpers/marc_heading_helper.rb:111:64: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    render_marc_line( marc_presenter(document, :title).lines[0]  )
                                                               ^^
app/helpers/marc_heading_helper.rb:115:22: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    render_marc_line( marc_presenter(document, :sub_title).lines[0] )
                     ^
app/helpers/marc_heading_helper.rb:115:68: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    render_marc_line( marc_presenter(document, :sub_title).lines[0] )
                                                                   ^
app/helpers/marc_heading_helper.rb:122:28: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    stmt = marc['245'].try {|f| f['c']}
                           ^^
app/helpers/marc_heading_helper.rb:122:39: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    stmt = marc['245'].try {|f| f['c']}
                                      ^
app/helpers/marc_heading_helper.rb:124:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if options[:truncate] && stmt.present?
    ^^
app/helpers/marc_heading_helper.rb:125:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      stmt = truncate(stmt, :length => 90, :omission => "… ", :separator => " ")
                            ^^^^^^^^^^
app/helpers/marc_heading_helper.rb:125:44: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      stmt = truncate(stmt, :length => 90, :omission => "… ", :separator => " ")
                                           ^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:125:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      stmt = truncate(stmt, :length => 90, :omission => "… ", :separator => " ")
                                                        ^^^^
app/helpers/marc_heading_helper.rb:125:63: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      stmt = truncate(stmt, :length => 90, :omission => "… ", :separator => " ")
                                                              ^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:125:77: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      stmt = truncate(stmt, :length => 90, :omission => "… ", :separator => " ")
                                                                            ^^^
app/helpers/marc_heading_helper.rb:127:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:128:5: C: Style/RedundantReturn: Redundant return detected.
    return stmt
    ^^^^^^
app/helpers/marc_heading_helper.rb:133:64: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # the framework is breaking down and was clearly a mistake.
                                                               ^^^^^
app/helpers/marc_heading_helper.rb:134:10: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
    line =  marc_presenter(document, :main_entry).lines[0]
         ^
app/helpers/marc_heading_helper.rb:134:11: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    line =  marc_presenter(document, :main_entry).lines[0]
          ^
app/helpers/marc_heading_helper.rb:136:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return "" unless line.present?
           ^^
app/helpers/marc_heading_helper.rb:136:15: C: Rails/Blank: Use if line.blank? instead of unless line.present?.
    return "" unless line.present?
              ^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:140:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #txt = txt.chomp(".") # trailing periods not helpful when we're surrounding with parens
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:142:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #link_to "(#{txt})", line.link.hash_for_url
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:142:48: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    #link_to "(#{txt})", line.link.hash_for_url
                                               ^
app/helpers/marc_heading_helper.rb:143:40: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    link_to txt, line.link.hash_for_url
                                       ^
app/helpers/marc_heading_helper.rb:153:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:157:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if (descr == nil)
    ^^
app/helpers/marc_heading_helper.rb:157:8: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
    if (descr == nil)
       ^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:157:15: C: Style/NilComparison: Prefer the use of the nil? predicate.
    if (descr == nil)
              ^^
app/helpers/marc_heading_helper.rb:158:62: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
      descr = MarcDisplay.default_presenter_config_list.find {|h| h[:id] == key}
                                                             ^^
app/helpers/marc_heading_helper.rb:158:80: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      descr = MarcDisplay.default_presenter_config_list.find {|h| h[:id] == key}
                                                                               ^
app/helpers/marc_heading_helper.rb:160:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:161:5: C: Style/RaiseArgs: Provide an exception class and message as arguments to raise.
    raise Exception.new("No description found for FieldDescriptions[#{key}]") if descr.nil?
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:162:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:165:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:167:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    options[:seperator] ||= ", "
                            ^^^^
app/helpers/marc_heading_helper.rb:169:19: C: Style/NumericPredicate: Use lines.length.zero? instead of lines.length == 0.
    return nil if lines.length == 0
                  ^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:169:19: C: Style/ZeroLengthPredicate: Use empty? instead of length == 0.
    return nil if lines.length == 0
                  ^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:171:5: C: Style/RedundantReturn: Redundant return detected.
    return lines.collect {|l| render_marc_line(l)}.join(html_escape(options[:seperator])).html_safe
    ^^^^^^
app/helpers/marc_heading_helper.rb:171:26: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    return lines.collect {|l| render_marc_line(l)}.join(html_escape(options[:seperator])).html_safe
                         ^^
app/helpers/marc_heading_helper.rb:171:50: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    return lines.collect {|l| render_marc_line(l)}.join(html_escape(options[:seperator])).html_safe
                                                 ^
app/helpers/marc_heading_helper.rb:171:91: C: Rails/OutputSafety: Tagging a string as html safe may be a security risk.
    return lines.collect {|l| render_marc_line(l)}.join(html_escape(options[:seperator])).html_safe
                                                                                          ^^^^^^^^^
app/helpers/marc_heading_helper.rb:172:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:175:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:178:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def render_marc_line(line)
  ^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:178:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  def render_marc_line(line)
                            ^^^^^^^^
app/helpers/marc_heading_helper.rb:181:5: C: Style/RedundantReturn: Redundant return detected.
    return render(:partial => "marc_display/marc_line", :locals => {:line => line}).sub(/^(\n|\s)+/,'').sub(/(\n|\s)+$/, '').html_safe
    ^^^^^^
app/helpers/marc_heading_helper.rb:181:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    return render(:partial => "marc_display/marc_line", :locals => {:line => line}).sub(/^(\n|\s)+/,'').sub(/(\n|\s)+$/, '').html_safe
                  ^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:181:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return render(:partial => "marc_display/marc_line", :locals => {:line => line}).sub(/^(\n|\s)+/,'').sub(/(\n|\s)+$/, '').html_safe
                              ^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:181:57: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    return render(:partial => "marc_display/marc_line", :locals => {:line => line}).sub(/^(\n|\s)+/,'').sub(/(\n|\s)+$/, '').html_safe
                                                        ^^^^^^^^^^
app/helpers/marc_heading_helper.rb:181:68: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    return render(:partial => "marc_display/marc_line", :locals => {:line => line}).sub(/^(\n|\s)+/,'').sub(/(\n|\s)+$/, '').html_safe
                                                                   ^
app/helpers/marc_heading_helper.rb:181:69: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    return render(:partial => "marc_display/marc_line", :locals => {:line => line}).sub(/^(\n|\s)+/,'').sub(/(\n|\s)+$/, '').html_safe
                                                                    ^^^^^^^^
app/helpers/marc_heading_helper.rb:181:82: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    return render(:partial => "marc_display/marc_line", :locals => {:line => line}).sub(/^(\n|\s)+/,'').sub(/(\n|\s)+$/, '').html_safe
                                                                                 ^
app/helpers/marc_heading_helper.rb:181:100: C: Layout/SpaceAfterComma: Space missing after comma.
    return render(:partial => "marc_display/marc_line", :locals => {:line => line}).sub(/^(\n|\s)+/,'').sub(/(\n|\s)+$/, '').html_safe
                                                                                                   ^
app/helpers/marc_heading_helper.rb:181:121: C: Layout/LineLength: Line is too long. [134/120]
    return render(:partial => "marc_display/marc_line", :locals => {:line => line}).sub(/^(\n|\s)+/,'').sub(/(\n|\s)+$/, '').html_safe
                                                                                                                        ^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:181:126: C: Rails/OutputSafety: Tagging a string as html safe may be a security risk.
    return render(:partial => "marc_display/marc_line", :locals => {:line => line}).sub(/^(\n|\s)+/,'').sub(/(\n|\s)+$/, '').html_safe
                                                                                                                             ^^^^^^^^^
app/helpers/marc_heading_helper.rb:186:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:191:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    title = (title_line ? title_line.join : "Unknown")
                                            ^^^^^^^^^
app/helpers/marc_heading_helper.rb:194:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if subtitle
    ^^
app/helpers/marc_heading_helper.rb:195:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      title = title + ": " + subtitle
                      ^^^^
app/helpers/marc_heading_helper.rb:197:5: C: Style/RedundantReturn: Redundant return detected.
    return title
    ^^^^^^
app/helpers/marc_heading_helper.rb:201:34: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  def all_subject_lines(document)
                                 ^^^^^^
app/helpers/marc_heading_helper.rb:202:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:203:5: C: Style/RedundantReturn: Redundant return detected.
    return [marc_presenter(document, :subjects), marc_presenter(document, :medical_subjects), marc_presenter(document, :local_subjects)].collect {|p| p.lines}.flatten
    ^^^^^^
app/helpers/marc_heading_helper.rb:203:121: C: Layout/LineLength: Line is too long. [166/120]
    return [marc_presenter(document, :subjects), marc_presenter(document, :medical_subjects), marc_presenter(document, :local_subjects)].collect {|p| p.lines}.flatten
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:203:146: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    return [marc_presenter(document, :subjects), marc_presenter(document, :medical_subjects), marc_presenter(document, :local_subjects)].collect {|p| p.lines}.flatten
                                                                                                                                                 ^^
app/helpers/marc_heading_helper.rb:203:146: C: Style/SymbolProc: Pass &:lines as an argument to collect instead of a block.
    return [marc_presenter(document, :subjects), marc_presenter(document, :medical_subjects), marc_presenter(document, :local_subjects)].collect {|p| p.lines}.flatten
                                                                                                                                                 ^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:203:158: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    return [marc_presenter(document, :subjects), marc_presenter(document, :medical_subjects), marc_presenter(document, :local_subjects)].collect {|p| p.lines}.flatten
                                                                                                                                                             ^
app/helpers/marc_heading_helper.rb:205:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:206:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:209:78: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # than a certain number of chars, for index page, truncating on whitespace.
                                                                             ^
app/helpers/marc_heading_helper.rb:210:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def shortened_summary(document)
  ^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:212:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:214:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:215:23: C: Style/NumericPredicate: Use summary_presenter.lines.length.positive? instead of summary_presenter.lines.length > 0.
    return nil unless summary_presenter.lines.length > 0
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:215:23: C: Style/ZeroLengthPredicate: Use !empty? instead of length > 0.
    return nil unless summary_presenter.lines.length > 0
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:221:8: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
    if (text.length > max_chars)
       ^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:222:5: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
       truncate_at = text.rindex(" ", max_chars)
    ^^^
app/helpers/marc_heading_helper.rb:222:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
       truncate_at = text.rindex(" ", max_chars)
                                 ^^^
app/helpers/marc_heading_helper.rb:223:46: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
       text = html_escape(text[0..truncate_at-1]) + "&#8230".html_safe # elipsis
                                             ^
app/helpers/marc_heading_helper.rb:223:53: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
       text = html_escape(text[0..truncate_at-1]) + "&#8230".html_safe # elipsis
                                                    ^^^^^^^^
app/helpers/marc_heading_helper.rb:226:5: C: Style/RedundantReturn: Redundant return detected.
    return text
    ^^^^^^
app/helpers/marc_heading_helper.rb:230:53: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # on complete entry seperated by "--" if possible.
                                                    ^
app/helpers/marc_heading_helper.rb:231:3: C: Metrics/AbcSize: Assignment Branch Condition size for shortened_contents is too high. [<7, 14, 5> 16.43/15]
  def shortened_contents(document) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:231:3: C: Metrics/MethodLength: Method has too many lines. [11/10]
  def shortened_contents(document) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:236:23: C: Style/NumericPredicate: Use contents_presenter.lines.length.positive? instead of contents_presenter.lines.length > 0.
    return nil unless contents_presenter.lines.length > 0
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:236:23: C: Style/ZeroLengthPredicate: Use !empty? instead of length > 0.
    return nil unless contents_presenter.lines.length > 0
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:240:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/marc_heading_helper.rb:242:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      truncate_at = text.rindex("--", max_chars)
                                ^^^^
app/helpers/marc_heading_helper.rb:243:7: C: Style/OrAssignment: Use the double pipe equals operator ||= instead.
      truncate_at = text.rindex(" ", max_chars) unless truncate_at
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/marc_heading_helper.rb:243:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      truncate_at = text.rindex(" ", max_chars) unless truncate_at
                                ^^^
app/helpers/marc_heading_helper.rb:244:45: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
      text = html_escape(text[0..truncate_at-2]) + "&#8230;".html_safe # elipsis
                                            ^
app/helpers/marc_heading_helper.rb:244:52: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      text = html_escape(text[0..truncate_at-2]) + "&#8230;".html_safe # elipsis
                                                   ^^^^^^^^^
app/helpers/marc_heading_helper.rb:244:81: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      text = html_escape(text[0..truncate_at-2]) + "&#8230;".html_safe # elipsis
                                                                                ^^^^
app/helpers/marc_heading_helper.rb:246:5: C: Style/RedundantReturn: Redundant return detected.
    return text
    ^^^^^^
app/helpers/marc_heading_helper.rb:248:1: C: Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body end.
app/helpers/multi_search_helper.rb:1:1: C: Style/Encoding: Unnecessary utf-8 encoding comment.
# encoding: UTF-8
^^^^^^^^^^^^^^^^^
app/helpers/multi_search_helper.rb:4:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/multi_search_helper.rb:6:66: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # engine. Pass in a complete Engine object, with registered id.
                                                                 ^
app/helpers/multi_search_helper.rb:8:121: C: Layout/LineLength: Line is too long. [211/120]
    link_to "↳ Explore all #{bento_engine.configuration.lookup!('for_display.thing_name', '')} results", more_url(bento_engine.configuration.id, :anchor => "#{bento_engine.configuration.id}_6"), :class => "more"
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/multi_search_helper.rb:8:146: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    link_to "↳ Explore all #{bento_engine.configuration.lookup!('for_display.thing_name', '')} results", more_url(bento_engine.configuration.id, :anchor => "#{bento_engine.configuration.id}_6"), :class => "more"
                                                                                                                                                 ^^^^^^^^^^
app/helpers/multi_search_helper.rb:8:196: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    link_to "↳ Explore all #{bento_engine.configuration.lookup!('for_display.thing_name', '')} results", more_url(bento_engine.configuration.id, :anchor => "#{bento_engine.configuration.id}_6"), :class => "more"
                                                                                                                                                                                                   ^^^^^^^^^
app/helpers/multi_search_helper.rb:8:206: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    link_to "↳ Explore all #{bento_engine.configuration.lookup!('for_display.thing_name', '')} results", more_url(bento_engine.configuration.id, :anchor => "#{bento_engine.configuration.id}_6"), :class => "more"
                                                                                                                                                                                                             ^^^^^^
app/helpers/multi_search_helper.rb:10:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/multi_search_helper.rb:14:12: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    args = {:q => params[:q], :search_field => params[:search_field]}.merge other_args
           ^
app/helpers/multi_search_helper.rb:14:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    args = {:q => params[:q], :search_field => params[:search_field]}.merge other_args
            ^^^^^
app/helpers/multi_search_helper.rb:14:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    args = {:q => params[:q], :search_field => params[:search_field]}.merge other_args
                              ^^^^^^^^^^^^^^^^
app/helpers/multi_search_helper.rb:14:69: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    args = {:q => params[:q], :search_field => params[:search_field]}.merge other_args
                                                                    ^
app/helpers/multi_search_helper.rb:17:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/multi_search_helper.rb:19:28: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # it's logic is too hard.
                           ^
app/helpers/multi_search_helper.rb:25:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      ""
      ^^
app/helpers/multi_search_helper.rb:27:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "1 item found"
      ^^^^^^^^^^^^^^
app/helpers/multi_search_helper.rb:29:121: C: Layout/LineLength: Line is too long. [169/120]
      "Displaying #{number_with_delimiter pagination.start_record} - #{number_with_delimiter pagination.end_record} of #{number_with_delimiter pagination.count_records}"
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/multi_search_helper.rb:32:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/requests_helper.rb:3:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/requests_helper.rb:6:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body beginning.
app/helpers/requests_helper.rb:11:62: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # so we simply eliminate this message from request panel.
                                                             ^
app/helpers/requests_helper.rb:14:68: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # TODO (if position in queue was reliable in the first place!):
                                                                   ^
app/helpers/requests_helper.rb:18:28: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # doesn't tell us, doh.
                           ^^^^^
app/helpers/requests_helper.rb:19:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #if @ils_request.queue_position > 1
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/requests_helper.rb:20:121: C: Layout/LineLength: Line is too long. [144/120]
    #  notes << {:class=>"note", :text => "...is currently on loan, you will be #{@ils_request.queue_position.ordinalize} on the waiting list."}
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/requests_helper.rb:21:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #end
    ^^^^
app/helpers/requests_helper.rb:22:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/requests_helper.rb:23:8: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
    if @ils_request.try(:closed_stack_access_location) ||
       ^^^^^^^^^^^^
app/helpers/requests_helper.rb:24:9: C: Layout/MultilineOperationIndentation: Align the operands of a condition in an if statement spanning multiple lines.
        ( @ils_request.try(:available_locations).try(:length) == 1 && @ils_request.available_locations.first =~ /special collection/i)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/requests_helper.rb:24:10: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        ( @ils_request.try(:available_locations).try(:length) == 1 && @ils_request.available_locations.first =~ /special collection/i)
         ^
app/helpers/requests_helper.rb:24:11: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
        ( @ils_request.try(:available_locations).try(:length) == 1 && @ils_request.available_locations.first =~ /special collection/i)
          ^^^^^^^^^^^^
app/helpers/requests_helper.rb:24:71: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
        ( @ils_request.try(:available_locations).try(:length) == 1 && @ils_request.available_locations.first =~ /special collection/i)
                                                                      ^^^^^^^^^^^^
app/helpers/requests_helper.rb:24:121: C: Layout/LineLength: Line is too long. [134/120]
        ( @ils_request.try(:available_locations).try(:length) == 1 && @ils_request.available_locations.first =~ /special collection/i)
                                                                                                                        ^^^^^^^^^^^^^^
app/helpers/requests_helper.rb:25:16: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      notes << {:class=>"note", :text => "This item can only be used in the Special Collections reading room, located on M Level of the BLC."}
               ^
app/helpers/requests_helper.rb:25:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      notes << {:class=>"note", :text => "This item can only be used in the Special Collections reading room, located on M Level of the BLC."}
                ^^^^^^^^
app/helpers/requests_helper.rb:25:23: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
      notes << {:class=>"note", :text => "This item can only be used in the Special Collections reading room, located on M Level of the BLC."}
                      ^^
app/helpers/requests_helper.rb:25:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      notes << {:class=>"note", :text => "This item can only be used in the Special Collections reading room, located on M Level of the BLC."}
                        ^^^^^^
app/helpers/requests_helper.rb:25:33: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      notes << {:class=>"note", :text => "This item can only be used in the Special Collections reading room, located on M Level of the BLC."}
                                ^^^^^^^^
app/helpers/requests_helper.rb:25:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      notes << {:class=>"note", :text => "This item can only be used in the Special Collections reading room, located on M Level of the BLC."}
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/requests_helper.rb:25:121: C: Layout/LineLength: Line is too long. [142/120]
      notes << {:class=>"note", :text => "This item can only be used in the Special Collections reading room, located on M Level of the BLC."}
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^
app/helpers/requests_helper.rb:25:142: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      notes << {:class=>"note", :text => "This item can only be used in the Special Collections reading room, located on M Level of the BLC."}
                                                                                                                                             ^
app/helpers/requests_helper.rb:27:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/requests_helper.rb:28:5: C: Style/RedundantReturn: Redundant return detected.
    return notes
    ^^^^^^
app/helpers/requests_helper.rb:30:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/requests_helper.rb:32:47: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # best to come up with something reasonable.
                                              ^
app/helpers/requests_helper.rb:33:3: C: Metrics/AbcSize: Assignment Branch Condition size for request_done_path is too high. [<5, 21, 5> 22.16/15]
  def request_done_path ...
  ^^^^^^^^^^^^^^^^^^^^^
app/helpers/requests_helper.rb:33:3: C: Metrics/MethodLength: Method has too many lines. [15/10]
  def request_done_path ...
  ^^^^^^^^^^^^^^^^^^^^^
app/helpers/requests_helper.rb:34:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if params["referer"]
              ^^^^^^^^^
app/helpers/requests_helper.rb:37:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        # to our app.
                     ^^^^^^^
app/helpers/requests_helper.rb:38:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        u = URI.parse(params["referer"])
                             ^^^^^^^^^
app/helpers/requests_helper.rb:39:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/requests_helper.rb:43:40: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        return url if url.starts_with?( root_path )
                                       ^
app/helpers/requests_helper.rb:43:50: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        return url if url.starts_with?( root_path )
                                                 ^
app/helpers/requests_helper.rb:44:7: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?
      rescue Exception => e  ...
      ^^^^^^^^^^^^^^^^^^^^^^
app/helpers/requests_helper.rb:44:28: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      rescue Exception => e
                           ^
app/helpers/requests_helper.rb:45:107: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
        logger.warn("Referer is not a legit url?: #{e.inspect}\n    HTTP User-Agent:    #{request.headers["User-Agent"]}\n    HTTP Referer: #{request.headers["Referer"]}")
                                                                                                          ^^^^^^^^^^^^
app/helpers/requests_helper.rb:45:121: C: Layout/LineLength: Line is too long. [179/120]
        logger.warn("Referer is not a legit url?: #{e.inspect}\n    HTTP User-Agent:    #{request.headers["User-Agent"]}\n    HTTP Referer: #{request.headers["Referer"]}")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/requests_helper.rb:45:159: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
        logger.warn("Referer is not a legit url?: #{e.inspect}\n    HTTP User-Agent:    #{request.headers["User-Agent"]}\n    HTTP Referer: #{request.headers["Referer"]}")
                                                                                                                                                              ^^^^^^^^^
app/helpers/requests_helper.rb:45:172: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        logger.warn("Referer is not a legit url?: #{e.inspect}\n    HTTP User-Agent:    #{request.headers["User-Agent"]}\n    HTTP Referer: #{request.headers["Referer"]}")
                                                                                                                                                                           ^^^^^^^^
app/helpers/requests_helper.rb:48:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if @ils_request && @ils_request.bib_id
    ^^
app/helpers/requests_helper.rb:48:8: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
    if @ils_request && @ils_request.bib_id
       ^^^^^^^^^^^^
app/helpers/requests_helper.rb:48:8: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
    if @ils_request && @ils_request.bib_id
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/requests_helper.rb:48:24: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
    if @ils_request && @ils_request.bib_id
                       ^^^^^^^^^^^^
app/helpers/requests_helper.rb:49:40: C: Rails/HelperInstanceVariable: Do not use instance variables in helpers.
      return solr_document_path("bib_#{@ils_request.bib_id}")
                                       ^^^^^^^^^^^^
app/helpers/requests_helper.rb:51:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/requests_helper.rb:52:5: C: Style/RedundantReturn: Redundant return detected.
    return search_catalog_path
    ^^^^^^
app/helpers/requests_helper.rb:53:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/requests_helper.rb:56:3: C: Metrics/AbcSize: Assignment Branch Condition size for special_collection_request_url is too high. [<14, 29, 4> 32.45/15]
  def special_collection_request_url(document, holding) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/requests_helper.rb:56:3: C: Metrics/MethodLength: Method has too many lines. [15/10]
  def special_collection_request_url(document, holding) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/requests_helper.rb:71:30: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    value = URI::HTTPS.build({host: aeon_host, path: '/logon', query: params.to_query})
                             ^
app/helpers/requests_helper.rb:71:86: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    value = URI::HTTPS.build({host: aeon_host, path: '/logon', query: params.to_query})
                                                                                     ^
app/helpers/requests_helper.rb:74:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/reserves_helper.rb:2:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/reserves_helper.rb:7:25: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    string = String.new( html_escape(string)  )
                        ^
app/helpers/reserves_helper.rb:7:45: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    string = String.new( html_escape(string)  )
                                            ^
app/helpers/reserves_helper.rb:7:45: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    string = String.new( html_escape(string)  )
                                            ^^
app/helpers/reserves_helper.rb:7:48: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    string = String.new( html_escape(string)  )
                                               ^
app/helpers/reserves_helper.rb:8:17: C: Style/RegexpLiteral: Use %r around regular expression.
    string.gsub(/(https?:\/\/[^ ]+)/) do |match|
                ^^^^^^^^^^^^^^^^^^^^
app/helpers/reserves_helper.rb:8:43: W: Lint/UnusedBlockArgument: Unused block argument - match. You can omit the argument if you don't care about it.
    string.gsub(/(https?:\/\/[^ ]+)/) do |match|
                                          ^^^^^
app/helpers/reserves_helper.rb:8:49: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    string.gsub(/(https?:\/\/[^ ]+)/) do |match|
                                                ^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/reserves_helper.rb:9:15: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
      link_to($1, $1)
              ^^
app/helpers/reserves_helper.rb:9:19: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
      link_to($1, $1)
                  ^^
app/helpers/reserves_helper.rb:10:9: C: Rails/OutputSafety: Tagging a string as html safe may be a security risk.
    end.html_safe
        ^^^^^^^^^
app/helpers/reserves_helper.rb:12:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/users_helper.rb:4:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/helpers/users_helper.rb:6:19: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # appropriately.
                  ^
app/helpers/users_helper.rb:7:3: C: Metrics/AbcSize: Assignment Branch Condition size for relative_due_date is too high. [<5, 17, 6> 18.71/15]
  def relative_due_date(date_or_time) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:7:3: C: Metrics/MethodLength: Method has too many lines. [14/10]
  def relative_due_date(date_or_time) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:10:15: C: Style/FormatStringToken: Prefer annotated tokens (like %<foo>s) over unannotated tokens (like %s).
    offset = '%+.2d:00' % offset_in_hours
              ^^^^^
app/helpers/users_helper.rb:10:25: C: Style/FormatString: Favor format over String#%.
    offset = '%+.2d:00' % offset_in_hours
                        ^
app/helpers/users_helper.rb:12:17: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    time = Time.now + offset_in_hours * 60 * 60
                ^^^
app/helpers/users_helper.rb:13:21: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
    if date_or_time.kind_of?(Time)
                    ^^^^^^^^
app/helpers/users_helper.rb:14:33: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      distance_of_time_in_words( time, date_or_time)
                                ^
app/helpers/users_helper.rb:16:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "today"
      ^^^^^^^
app/helpers/users_helper.rb:17:11: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an elsif.
    elsif (date_or_time == (date + 1))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:18:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "tomorrow"
      ^^^^^^^^^^
app/helpers/users_helper.rb:20:33: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      distance_of_time_in_words( date, date_or_time)
                                ^
app/helpers/users_helper.rb:23:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/application_record.rb:3:4: C: Layout/TrailingEmptyLines: Final newline missing.
end

app/models/bento_article_decorator.rb:1:76: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# note, configured with decorator to link directly to EBSCO native platform
                                                                           ^
app/models/bento_article_decorator.rb:2:65: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# (with EZProxy) if ebsco says they have fulltext, else openurl.
                                                                ^
app/models/bento_article_decorator.rb:5:63: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # to tell umlaut to redirect right to fulltext if available.
                                                              ^
app/models/bento_article_decorator.rb:7:8: C: Style/RedundantSelf: Redundant self detected.
    if self.link_is_fulltext?
       ^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:12:140: C: Layout/LineLength: Line is too long. [184/120]
      "#{JHConfig.params[:umlaut_base_url]}/resolve?#{to_openurl_kev}&rfr_id=#{CGI.escape 'http://catalyst.library.jhu.edu/search/articles'}&umlaut.skip_resolve_menu_for_type=fulltext"
                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:15:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/bento_article_decorator.rb:16:3: C: Metrics/AbcSize: Assignment Branch Condition size for other_links is too high. [<11, 14, 0> 17.8/15]
  def other_links ...
  ^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:16:3: C: Metrics/MethodLength: Method has too many lines. [17/10]
  def other_links ...
  ^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:18:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    refworks_url =  "http://www.refworks.com/express/ExpressImport.asp"
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:19:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    refworks_url += "?vendor=JHU%20Catalyst"
                    ^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:20:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    refworks_url += "&filter=RIS%20Format"
                    ^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:21:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    refworks_url += "&encoding=65001" # utf8
                    ^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:22:65: C: Style/RedundantSelf: Redundant self detected.
    refworks_url += "&url=#{CGI.escape _h.refworks_callback_url(self.engine_id, _h.encrypt_record_id(self.unique_id), :ris)}"
                                                                ^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:22:102: C: Style/RedundantSelf: Redundant self detected.
    refworks_url += "&url=#{CGI.escape _h.refworks_callback_url(self.engine_id, _h.encrypt_record_id(self.unique_id), :ris)}"
                                                                                                     ^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:22:121: C: Layout/LineLength: Line is too long. [126/120]
    refworks_url += "&url=#{CGI.escape _h.refworks_callback_url(self.engine_id, _h.encrypt_record_id(self.unique_id), :ris)}"
                                                                                                                        ^^^^^^
app/models/bento_article_decorator.rb:22:126: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    refworks_url += "&url=#{CGI.escape _h.refworks_callback_url(self.engine_id, _h.encrypt_record_id(self.unique_id), :ris)}"
                                                                                                                             ^
app/models/bento_article_decorator.rb:23:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/bento_article_decorator.rb:25:7: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
      :label          => "Export to RefWorks",
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:25:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :label          => "Export to RefWorks",
      ^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:25:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :label          => "Export to RefWorks",
                         ^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:26:7: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
      :url            => refworks_url,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:26:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :url            => refworks_url,
      ^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:27:7: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
      :target         => "RefWorksMain",
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:27:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :target         => "RefWorksMain",
      ^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:27:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :target         => "RefWorksMain",
                         ^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:28:7: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
      :style_classes  => ["refworks"]
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:28:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :style_classes  => ["refworks"]
      ^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:28:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :style_classes  => ["refworks"]
                          ^^^^^^^^^^
app/models/bento_article_decorator.rb:28:38: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      :style_classes  => ["refworks"]
                                     ^
app/models/bento_article_decorator.rb:30:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/bento_article_decorator.rb:33:7: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
      :label          => "Find It @ JH",
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:33:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :label          => "Find It @ JH",
      ^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:33:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :label          => "Find It @ JH",
                         ^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:34:7: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
      :url            => "#{JHConfig.params[:umlaut_base_url]}/resolve?#{self.to_openurl_kev}&rfr_id=#{CGI.escape 'http://catalyst.library.jhu.edu/search/articles'}",
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:34:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :url            => "#{JHConfig.params[:umlaut_base_url]}/resolve?#{self.to_openurl_kev}&rfr_id=#{CGI.escape 'http://catalyst.library.jhu.edu/search/articles'}",
      ^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:34:74: C: Style/RedundantSelf: Redundant self detected.
      :url            => "#{JHConfig.params[:umlaut_base_url]}/resolve?#{self.to_openurl_kev}&rfr_id=#{CGI.escape 'http://catalyst.library.jhu.edu/search/articles'}",
                                                                         ^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:34:164: C: Layout/LineLength: Line is too long. [166/120]
      :url            => "#{JHConfig.params[:umlaut_base_url]}/resolve?#{self.to_openurl_kev}&rfr_id=#{CGI.escape 'http://catalyst.library.jhu.edu/search/articles'}",
                                                                                                                                                                   ^^^
app/models/bento_article_decorator.rb:35:7: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
      :style_classes  => ["openurl"]
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:35:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :style_classes  => ["openurl"]
      ^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:35:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :style_classes  => ["openurl"]
                          ^^^^^^^^^
app/models/bento_article_decorator.rb:37:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/bento_article_decorator.rb:38:5: C: Style/RedundantReturn: Redundant return detected.
    return super + [refworks_link, openurl_link]
    ^^^^^^
app/models/bento_article_decorator.rb:40:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/bento_article_decorator.rb:41:61: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Do not show format_str if thing appears to be an article
                                                            ^^^^
app/models/bento_article_decorator.rb:45:5: C: Style/TernaryParentheses: Omit parentheses for ternary conditions.
    (self.format != "Article") ? super : nil
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:45:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    (self.format != "Article") ? super : nil
                    ^^^^^^^^^
app/models/bento_article_decorator.rb:47:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/bento_article_decorator.rb:53:67: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # partial, and over-riding display_authors_list to _h.render it.
                                                                  ^
app/models/bento_article_decorator.rb:56:30: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # config/routes.rb routing.
                             ^
app/models/bento_article_decorator.rb:57:3: C: Metrics/AbcSize: Assignment Branch Condition size for render_authors_list is too high. [<3, 22, 4> 22.56/15]
  def render_authors_list ...
  ^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:57:3: C: Metrics/MethodLength: Method has too many lines. [20/10]
  def render_authors_list ...
  ^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:59:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/bento_article_decorator.rb:60:19: C: Style/RedundantSelf: Redundant self detected.
    first_three = self.authors.slice(0,3)
                  ^^^^^^^^^^^^
app/models/bento_article_decorator.rb:60:39: C: Layout/SpaceAfterComma: Space missing after comma.
    first_three = self.authors.slice(0,3)
                                      ^
app/models/bento_article_decorator.rb:60:42: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    first_three = self.authors.slice(0,3)
                                         ^
app/models/bento_article_decorator.rb:61:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/bento_article_decorator.rb:64:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/bento_article_decorator.rb:65:16: C: Rails/ContentTag: Use tag instead of content_tag.
      parts << _h.content_tag("span", :class => "author") do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:65:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      parts << _h.content_tag("span", :class => "author") do
                              ^^^^^^
app/models/bento_article_decorator.rb:65:39: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      parts << _h.content_tag("span", :class => "author") do
                                      ^^^^^^^^^
app/models/bento_article_decorator.rb:65:49: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      parts << _h.content_tag("span", :class => "author") do
                                                ^^^^^^^^
app/models/bento_article_decorator.rb:66:9: C: Rails/ContentTag: Use tag instead of content_tag.
        _h.content_tag("a",  ...
        ^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:66:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        _h.content_tag("a",
                       ^^^
app/models/bento_article_decorator.rb:66:28: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        _h.content_tag("a",
                           ^
app/models/bento_article_decorator.rb:67:11: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
          author_display,
          ^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:67:26: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          author_display,
                         ^
app/models/bento_article_decorator.rb:68:11: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
          :href => _h.bento_single_search_path("articles",  ...
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:68:11: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          :href => _h.bento_single_search_path("articles",
          ^^^^^^^^
app/models/bento_article_decorator.rb:68:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          :href => _h.bento_single_search_path("articles",
                                               ^^^^^^^^^^
app/models/bento_article_decorator.rb:68:59: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          :href => _h.bento_single_search_path("articles",
                                                          ^
app/models/bento_article_decorator.rb:69:23: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
                      :q => '"' + author_display + '"', ...
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:69:23: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                      :q => '"' + author_display + '"',
                      ^^^^^
app/models/bento_article_decorator.rb:70:23: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                      :search_field => "author")
                      ^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:70:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      :search_field => "author")
                                       ^^^^^^^^
app/models/bento_article_decorator.rb:71:11: C: Layout/ClosingParenthesisIndentation: Indent ) to column 8 (not 10)
          )
          ^
app/models/bento_article_decorator.rb:71:11: C: Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the same line as the last argument when opening brace is on the same line as the first argument.
          )
          ^
app/models/bento_article_decorator.rb:73:7: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if (index + 1) < first_three.length
      ^^
app/models/bento_article_decorator.rb:74:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        parts << "; "
                 ^^^^
app/models/bento_article_decorator.rb:75:10: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      end
         ^^^^^^
app/models/bento_article_decorator.rb:77:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/bento_article_decorator.rb:78:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if self.authors.length > 3
    ^^
app/models/bento_article_decorator.rb:78:8: C: Style/RedundantSelf: Redundant self detected.
    if self.authors.length > 3
       ^^^^^^^^^^^^
app/models/bento_article_decorator.rb:79:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      parts << I18n.t("bento_search.authors_et_al")
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:81:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/bento_article_decorator.rb:82:5: C: Style/RedundantReturn: Redundant return detected.
    return _h.safe_join(parts, "")
    ^^^^^^
app/models/bento_article_decorator.rb:82:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return _h.safe_join(parts, "")
                               ^^
app/models/bento_article_decorator.rb:85:33: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Custom method added locally.
                                ^
app/models/bento_article_decorator.rb:87:72: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # linking to Find It OpenURL resolver by issn. Otherwise, return nil.
                                                                       ^^
app/models/bento_article_decorator.rb:89:23: C: Style/RedundantSelf: Redundant self detected.
    return nil unless self.issn
                      ^^^^^^^^^
app/models/bento_article_decorator.rb:90:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/bento_article_decorator.rb:91:72: C: Style/RedundantSelf: Redundant self detected.
    url = "http://findit.library.jhu.edu/resolve?rft.issn=#{CGI.escape self.issn}&rft.jtitle=#{CGI.escape self.source_title}&rfr_id=#{CGI.escape 'http://catalyst.library.jhu.edu/search/articles'}"
                                                                       ^^^^^^^^^
app/models/bento_article_decorator.rb:91:107: C: Style/RedundantSelf: Redundant self detected.
    url = "http://findit.library.jhu.edu/resolve?rft.issn=#{CGI.escape self.issn}&rft.jtitle=#{CGI.escape self.source_title}&rfr_id=#{CGI.escape 'http://catalyst.library.jhu.edu/search/articles'}"
                                                                                                          ^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:91:121: C: Layout/LineLength: Line is too long. [197/120]
    url = "http://findit.library.jhu.edu/resolve?rft.issn=#{CGI.escape self.issn}&rft.jtitle=#{CGI.escape self.source_title}&rfr_id=#{CGI.escape 'http://catalyst.library.jhu.edu/search/articles'}"
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:91:197: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    url = "http://findit.library.jhu.edu/resolve?rft.issn=#{CGI.escape self.issn}&rft.jtitle=#{CGI.escape self.source_title}&rfr_id=#{CGI.escape 'http://catalyst.library.jhu.edu/search/articles'}"
                                                                                                                                                                                                    ^
app/models/bento_article_decorator.rb:92:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/bento_article_decorator.rb:93:5: C: Style/RedundantReturn: Redundant return detected.
    return _h.link_to(self.source_title, url)
    ^^^^^^
app/models/bento_article_decorator.rb:93:23: C: Style/RedundantSelf: Redundant self detected.
    return _h.link_to(self.source_title, url)
                      ^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:95:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/bento_article_decorator.rb:99:3: C: Metrics/AbcSize: Assignment Branch Condition size for render_source_info is too high. [<3, 27, 5> 27.62/15]
  def render_source_info ...
  ^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:99:3: C: Metrics/MethodLength: Method has too many lines. [17/10]
  def render_source_info ...
  ^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:101:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/bento_article_decorator.rb:102:8: C: Style/RedundantSelf: Redundant self detected.
    if self.source_title.present?
       ^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:103:16: C: Rails/ContentTag: Use tag instead of content_tag.
      parts << _h.content_tag("span", I18n.t("bento_search.published_in"), :class=> "source_label")
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:103:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      parts << _h.content_tag("span", I18n.t("bento_search.published_in"), :class=> "source_label")
                              ^^^^^^
app/models/bento_article_decorator.rb:103:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      parts << _h.content_tag("span", I18n.t("bento_search.published_in"), :class=> "source_label")
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:103:76: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      parts << _h.content_tag("span", I18n.t("bento_search.published_in"), :class=> "source_label")
                                                                           ^^^^^^^^
app/models/bento_article_decorator.rb:103:82: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
      parts << _h.content_tag("span", I18n.t("bento_search.published_in"), :class=> "source_label")
                                                                                 ^^
app/models/bento_article_decorator.rb:103:85: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      parts << _h.content_tag("span", I18n.t("bento_search.published_in"), :class=> "source_label")
                                                                                    ^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:104:7: C: Style/ConditionalAssignment: Use the return of the conditional for variable assignment and comparison.
      if link = self.source_title_openurl_link ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:104:15: W: Lint/AssignmentInCondition: Use == if you meant to do a comparison or wrap the expression in parentheses to indicate you meant to assign in a condition.
      if link = self.source_title_openurl_link
              ^
app/models/bento_article_decorator.rb:104:17: C: Style/RedundantSelf: Redundant self detected.
      if link = self.source_title_openurl_link
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:105:18: C: Rails/ContentTag: Use tag instead of content_tag.
        parts << _h.content_tag("span", link, :class => "source_title")
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:105:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        parts << _h.content_tag("span", link, :class => "source_title")
                                ^^^^^^
app/models/bento_article_decorator.rb:105:47: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        parts << _h.content_tag("span", link, :class => "source_title")
                                              ^^^^^^^^^
app/models/bento_article_decorator.rb:105:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        parts << _h.content_tag("span", link, :class => "source_title")
                                                        ^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:107:18: C: Rails/ContentTag: Use tag instead of content_tag.
        parts << _h.content_tag("span", self.source_title, :class => "source_title")
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:107:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        parts << _h.content_tag("span", self.source_title, :class => "source_title")
                                ^^^^^^
app/models/bento_article_decorator.rb:107:41: C: Style/RedundantSelf: Redundant self detected.
        parts << _h.content_tag("span", self.source_title, :class => "source_title")
                                        ^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:107:60: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        parts << _h.content_tag("span", self.source_title, :class => "source_title")
                                                           ^^^^^^^^^
app/models/bento_article_decorator.rb:107:70: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        parts << _h.content_tag("span", self.source_title, :class => "source_title")
                                                                     ^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:109:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      parts << ". "
               ^^^^
app/models/bento_article_decorator.rb:110:11: C: Style/RedundantSelf: Redundant self detected.
    elsif self.publisher.present?
          ^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:111:16: C: Rails/ContentTag: Use tag instead of content_tag.
      parts << _h.content_tag("span", self.publisher, :class => "publisher")
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:111:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      parts << _h.content_tag("span", self.publisher, :class => "publisher")
                              ^^^^^^
app/models/bento_article_decorator.rb:111:39: C: Style/RedundantSelf: Redundant self detected.
      parts << _h.content_tag("span", self.publisher, :class => "publisher")
                                      ^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:111:55: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      parts << _h.content_tag("span", self.publisher, :class => "publisher")
                                                      ^^^^^^^^^
app/models/bento_article_decorator.rb:111:65: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      parts << _h.content_tag("span", self.publisher, :class => "publisher")
                                                                ^^^^^^^^^^^
app/models/bento_article_decorator.rb:112:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      parts << ". "
               ^^^^
app/models/bento_article_decorator.rb:114:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/bento_article_decorator.rb:115:13: W: Lint/AssignmentInCondition: Use == if you meant to do a comparison or wrap the expression in parentheses to indicate you meant to assign in a condition.
    if text = self.render_citation_details
            ^
app/models/bento_article_decorator.rb:115:15: C: Style/RedundantSelf: Redundant self detected.
    if text = self.render_citation_details
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/bento_article_decorator.rb:116:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      parts << text << "."
                       ^^^
app/models/bento_article_decorator.rb:118:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/bento_article_decorator.rb:119:5: C: Style/RedundantReturn: Redundant return detected.
    return _h.safe_join(parts, "")
    ^^^^^^
app/models/bento_article_decorator.rb:119:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return _h.safe_join(parts, "")
                               ^^
app/models/bento_article_decorator.rb:120:6: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  end
     ^^
app/models/bento_article_decorator.rb:121:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/bento_article_decorator.rb:123:1: C: Layout/TrailingEmptyLines: 1 trailing blank lines detected.
app/models/holding.rb:5:55: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Other subsidiary model classes contained here too.
                                                      ^
app/models/holding.rb:6:3: C: Layout/InitialIndentation: Indentation of first line in file detected.
  class Holding
  ^^^^^
app/models/holding.rb:10:117: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    attr_accessor :staff_notes_html # HTML formatted notes we hide and toggle on for staff. We use for RMST/barcode.
                                                                                                                    ^
app/models/holding.rb:11:17: C: Naming/MethodName: Use snake_case for method names.
    attr_reader :localInfo
                ^^^^^^^^^^
app/models/holding.rb:13:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    special_collections_file = Rails.root + "config/special_collections.yml"
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/holding.rb:14:13: W: Lint/DeprecatedClassMethods: File.exists? is deprecated in favor of File.exist?.
    if File.exists? special_collections_file
            ^^^^^^^
app/models/holding.rb:15:7: C: Style/ClassVars: Replace class var @@special_collections with a class instance var.
      @@special_collections = YAML.load_file( special_collections_file )
      ^^^^^^^^^^^^^^^^^^^^^
app/models/holding.rb:15:46: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      @@special_collections = YAML.load_file( special_collections_file )
                                             ^
app/models/holding.rb:15:71: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      @@special_collections = YAML.load_file( special_collections_file )
                                                                      ^
app/models/holding.rb:17:121: C: Layout/LineLength: Line is too long. [148/120]
      Rails.logger.warn("No special collections config file found at #{special_collections_file}, no special collections request button will work.")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/holding.rb:18:7: C: Style/ClassVars: Replace class var @@stackmap_collections with a class instance var.
      @@stackmap_collections = {}
      ^^^^^^^^^^^^^^^^^^^^^^
app/models/holding.rb:20:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/holding.rb:23:51: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      @run_statements = [] # array of Run objects.
                                                  ^
app/models/holding.rb:27:7: C: Naming/VariableName: Use snake_case for variable names.
      @localInfo = {}
      ^^^^^^^^^^
app/models/holding.rb:30:5: C: Style/TrivialAccessors: Use attr_writer to define trivial writer methods.
    def has_children=(val)
    ^^^
app/models/holding.rb:33:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def has_children?
    ^^^^^^^^^^^^^^^^^
app/models/holding.rb:33:9: C: Naming/PredicateName: Rename has_children? to children?.
    def has_children?
        ^^^^^^^^^^^^^
app/models/holding.rb:36:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def requestable=(val)
    ^^^^^^^^^^^^^^^^
app/models/holding.rb:36:5: C: Style/TrivialAccessors: Use attr_writer to define trivial writer methods.
    def requestable=(val)
    ^^^
app/models/holding.rb:39:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def requestable?
    ^^^^^^^^^^^^^^^^
app/models/holding.rb:42:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def special_collection?
    ^^^^^^^^^^^^^^^^^^^^^^^
app/models/holding.rb:43:121: C: Layout/LineLength: Line is too long. [122/120]
      @@special_collections.fetch(@location.internal_code, {}).fetch('collections', []).include? @collection.internal_code
                                                                                                                        ^^
app/models/holding.rb:45:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def special_collection_site
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/holding.rb:57:7: C: Style/RedundantReturn: Redundant return detected.
      return @run_statements_by_type
      ^^^^^^
app/models/holding.rb:60:73: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # internal status code; dlf_expanded controlled vocab status code;
                                                                        ^
app/models/holding.rb:62:23: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # to be non-nil.
                      ^
app/models/holding.rb:63:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      class Status
  ^^^^
app/models/holding.rb:63:7: C: Layout/IndentationConsistency: Inconsistent indentation detected.
      class Status ...
      ^^^^^^^^^^^^
app/models/holding.rb:65:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/holding.rb:66:9: W: Lint/DuplicateMethods: Method Holding::Status#display_label is defined at both app/models/holding.rb:64 and app/models/holding.rb:66.
        def display_label
        ^^^^^^^^^^^^^^^^^
app/models/holding.rb:69:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/holding.rb:71:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/holding.rb:73:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      class Run
  ^^^^
app/models/holding.rb:73:7: C: Layout/IndentationConsistency: Inconsistent indentation detected.
      class Run ...
      ^^^^^^^^^
app/models/holding.rb:75:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/holding.rb:83:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/holding.rb:85:43: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # a display label at #display_label.
                                          ^
app/models/holding.rb:86:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      class KeyLabel
  ^^^^
app/models/holding.rb:86:7: C: Layout/IndentationConsistency: Inconsistent indentation detected.
      class KeyLabel ...
      ^^^^^^^^^^^^^^
app/models/holding.rb:90:1: C: Layout/TrailingEmptyLines: 2 trailing blank lines detected.
app/models/jh_sms_send.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'open-uri' ...
^^^^^^^^^^^^^^^^^^
app/models/jh_sms_send.rb:4:54: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# Only works for documents with a #to_marc right now.
                                                     ^
app/models/jh_sms_send.rb:5:19: C: Rails/ApplicationMailer: Mailers should subclass ApplicationMailer.
class JhSmsSend < ActionMailer::Base
                  ^^^^^^^^^^^^^^^^^^
app/models/jh_sms_send.rb:7:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/jh_sms_send.rb:8:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/jh_sms_send.rb:9:3: C: Metrics/AbcSize: Assignment Branch Condition size for sms_record is too high. [<2, 33, 3> 33.2/15]
  def sms_record(document, holding, options)     ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/jh_sms_send.rb:9:45: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  def sms_record(document, holding, options)
                                            ^^^^
app/models/jh_sms_send.rb:11:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/jh_sms_send.rb:12:73: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # Yeah, good design would put the body in a View Template. But. It's
                                                                        ^
app/models/jh_sms_send.rb:17:18: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # as a param.
                 ^
app/models/jh_sms_send.rb:18:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/jh_sms_send.rb:19:75: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # First no more than 35 chars of title. then location and call number.
                                                                          ^
app/models/jh_sms_send.rb:20:31: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # then url, tiny-url-ized.
                              ^^^^^
app/models/jh_sms_send.rb:21:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    body_text = ""
                ^^
app/models/jh_sms_send.rb:22:68: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    body_text << word_wrap(document.to_semantic_values[:title][0], :line_width => 35).split("\n")[0] + "\n\n" if document.to_semantic_values[:title]
                                                                   ^^^^^^^^^^^^^^
app/models/jh_sms_send.rb:22:111: C: Style/IfUnlessModifier: Modifier form of if makes the line too long.
    body_text << word_wrap(document.to_semantic_values[:title][0], :line_width => 35).split("\n")[0] + "\n\n" if document.to_semantic_values[:title]
                                                                                                              ^^
app/models/jh_sms_send.rb:22:121: C: Layout/LineLength: Line is too long. [148/120]
    body_text << word_wrap(document.to_semantic_values[:title][0], :line_width => 35).split("\n")[0] + "\n\n" if document.to_semantic_values[:title]
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/jh_sms_send.rb:26:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/jh_sms_send.rb:27:10: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    mail(:to => "#{options[:to]}@#{sms_mapping[options[:carrier]]}", :from =>  "no-reply@#{options[:email_from_host]}", :subject => "") do |format|
         ^^^^^^
app/models/jh_sms_send.rb:27:70: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    mail(:to => "#{options[:to]}@#{sms_mapping[options[:carrier]]}", :from =>  "no-reply@#{options[:email_from_host]}", :subject => "") do |format|
                                                                     ^^^^^^^^
app/models/jh_sms_send.rb:27:76: C: Layout/SpaceAroundOperators: Operator => should be surrounded by a single space.
    mail(:to => "#{options[:to]}@#{sms_mapping[options[:carrier]]}", :from =>  "no-reply@#{options[:email_from_host]}", :subject => "") do |format|
                                                                           ^^
app/models/jh_sms_send.rb:27:78: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    mail(:to => "#{options[:to]}@#{sms_mapping[options[:carrier]]}", :from =>  "no-reply@#{options[:email_from_host]}", :subject => "") do |format|
                                                                             ^
app/models/jh_sms_send.rb:27:121: C: Layout/LineLength: Line is too long. [148/120]
    mail(:to => "#{options[:to]}@#{sms_mapping[options[:carrier]]}", :from =>  "no-reply@#{options[:email_from_host]}", :subject => "") do |format|
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/jh_sms_send.rb:27:121: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    mail(:to => "#{options[:to]}@#{sms_mapping[options[:carrier]]}", :from =>  "no-reply@#{options[:email_from_host]}", :subject => "") do |format|
                                                                                                                        ^^^^^^^^^^^
app/models/jh_sms_send.rb:27:133: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    mail(:to => "#{options[:to]}@#{sms_mapping[options[:carrier]]}", :from =>  "no-reply@#{options[:email_from_host]}", :subject => "") do |format|
                                                                                                                                    ^^
app/models/jh_sms_send.rb:27:148: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    mail(:to => "#{options[:to]}@#{sms_mapping[options[:carrier]]}", :from =>  "no-reply@#{options[:email_from_host]}", :subject => "") do |format|
                                                                                                                                                   ^
app/models/jh_sms_send.rb:28:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      format.text { render :text => body_text }
                           ^^^^^^^^
app/models/jh_sms_send.rb:28:48: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      format.text { render :text => body_text }
                                               ^^^^
app/models/jh_sms_send.rb:33:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/jh_sms_send.rb:35:5: C: Style/RedundantBegin: Redundant begin block detected.
    begin
    ^^^^^
app/models/jh_sms_send.rb:37:5: C: Style/RescueStandardError: Avoid rescuing without specifying an error class.
    rescue
    ^^^^^^
app/models/jh_sms_send.rb:38:71: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # On an error, we just skip the tinyurl and use an ordinary one.
                                                                      ^
app/models/jh_sms_send.rb:42:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/jh_sms_send.rb:44:5: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    {'vmobile' => 'vmobl.com',
    ^
app/models/jh_sms_send.rb:45:5: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    'virgin' => 'vmobl.com',
    ^^^^^^^^^^^^^^^^^^^^^^^
app/models/jh_sms_send.rb:46:5: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    'att' => 'txt.att.net',
    ^^^^^^^^^^^^^^^^^^^^^^
app/models/jh_sms_send.rb:47:5: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    'verizon' => 'vtext.com',
    ^^^^^^^^^^^^^^^^^^^^^^^^
app/models/jh_sms_send.rb:48:5: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    'nextel' => 'messaging.nextel.com',
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/jh_sms_send.rb:49:5: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    'sprint' => 'messaging.sprintpcs.com',
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/jh_sms_send.rb:50:5: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    'tmobile' => 'tmomail.net',
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/jh_sms_send.rb:51:5: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    'alltel' => 'message.alltel.com',
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/jh_sms_send.rb:52:5: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    'cricket' => 'mms.mycricket.com'}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/jh_sms_send.rb:52:37: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    'cricket' => 'mms.mycricket.com'}
                                    ^
app/models/jh_sms_send.rb:54:4: C: Layout/TrailingEmptyLines: Final newline missing.
end

app/models/reserves_course.rb:3:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/reserves_course.rb:4:3: C: Rails/HasManyOrHasOneDependent: Specify a :dependent option.
  has_many :bib_ids, :class_name => 'ReservesCourseBib', :primary_key => :course_id
  ^^^^^^^^
app/models/reserves_course.rb:4:22: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  has_many :bib_ids, :class_name => 'ReservesCourseBib', :primary_key => :course_id
                     ^^^^^^^^^^^^^^
app/models/reserves_course.rb:4:58: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  has_many :bib_ids, :class_name => 'ReservesCourseBib', :primary_key => :course_id
                                                         ^^^^^^^^^^^^^^^
app/models/reserves_course.rb:5:3: C: Rails/HasManyOrHasOneDependent: Specify a :dependent option.
  has_many :instructors, :class_name => 'ReservesCourseInstructor', :primary_key => :course_id
  ^^^^^^^^
app/models/reserves_course.rb:5:26: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  has_many :instructors, :class_name => 'ReservesCourseInstructor', :primary_key => :course_id
                         ^^^^^^^^^^^^^^
app/models/reserves_course.rb:5:69: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  has_many :instructors, :class_name => 'ReservesCourseInstructor', :primary_key => :course_id
                                                                    ^^^^^^^^^^^^^^^
app/models/reserves_course.rb:7:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #default_scope :include => [:bib_ids]
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/reserves_course.rb:8:20: C: Style/Lambda: Use the -> { ... } lambda literal syntax for single line lambdas.
  scope :location, lambda {|l| {:conditions => ['location_code = ?', l]  }}
                   ^^^^^^
app/models/reserves_course.rb:8:27: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
  scope :location, lambda {|l| {:conditions => ['location_code = ?', l]  }}
                          ^^
app/models/reserves_course.rb:8:32: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  scope :location, lambda {|l| {:conditions => ['location_code = ?', l]  }}
                               ^
app/models/reserves_course.rb:8:33: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  scope :location, lambda {|l| {:conditions => ['location_code = ?', l]  }}
                                ^^^^^^^^^^^^^^
app/models/reserves_course.rb:8:72: C: Layout/ExtraSpacing: Unnecessary spacing detected.
  scope :location, lambda {|l| {:conditions => ['location_code = ?', l]  }}
                                                                       ^
app/models/reserves_course.rb:8:75: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  scope :location, lambda {|l| {:conditions => ['location_code = ?', l]  }}
                                                                          ^
app/models/reserves_course.rb:9:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/reserves_course.rb:14:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/reserves_course.rb:15:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/search_builder.rb:2:1: C: Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
class SearchBuilder < Blacklight::SearchBuilder
^^^^^
app/models/search_builder.rb:6:21: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # search features.
                    ^
app/models/search_builder.rb:16:3: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
  if defined? BlacklightAdvancedSearch
  ^^
app/models/search_builder.rb:20:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #self.default_processor_chain += %i[exclude_components filter_by_parent_collections]
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/search_builder.rb:23:53: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # method can be used in reserves to swap those in.
                                                    ^
app/models/search_builder.rb:25:45: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    per_page = (blacklight_params[:per_page]  || ReservesController::DefaultPerPage).to_i
                                            ^
app/models/search_builder.rb:25:47: C: Layout/SpaceAroundOperators: Operator || should be surrounded by a single space.
    per_page = (blacklight_params[:per_page]  || ReservesController::DefaultPerPage).to_i
                                              ^^
app/models/search_builder.rb:32:57: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    solr_params[:sort] = ReservesController::DefaultSort  unless blacklight_params[:sort]
                                                        ^
app/models/search_builder.rb:32:90: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    solr_params[:sort] = ReservesController::DefaultSort  unless blacklight_params[:sort]
                                                                                         ^
app/models/search_builder.rb:34:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/models/solr_document.rb:5:19: C: Layout/TrailingWhitespace: Trailing whitespace detected.
class SolrDocument
                  ^
app/models/solr_document.rb:6:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
app/models/solr_document.rb:8:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/solr_document.rb:12:17: C: Layout/SpaceInsideParens: Space inside parentheses detected.
  use_extension( Blacklight::Solr::Document::Marc) do |document|
                ^
app/models/solr_document.rb:13:19: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    document.key?( :marc_display  )
                  ^
app/models/solr_document.rb:13:33: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    document.key?( :marc_display  )
                                ^
app/models/solr_document.rb:13:33: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    document.key?( :marc_display  )
                                ^^
app/models/solr_document.rb:20:13: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # or both.
            ^
app/models/solr_document.rb:23:7: C: Style/GuardClause: Use a guard clause (return super unless _marc_format_type.to_s == "marc21") instead of wrapping the code inside a conditional expression.
      if _marc_format_type.to_s == "marc21"
      ^^
app/models/solr_document.rb:23:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      if _marc_format_type.to_s == "marc21"
                                   ^^^^^^^^
app/models/solr_document.rb:25:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/solr_document.rb:28:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        # it's a hell of a system.
                                  ^
app/models/solr_document.rb:29:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        value.gsub!("#29;", "\x1D")
                    ^^^^^^
app/models/solr_document.rb:30:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        value.gsub!("#30;", "\x1E")
                    ^^^^^^
app/models/solr_document.rb:31:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        value.gsub!("#31;", "\x1F")
                    ^^^^^^
app/models/solr_document.rb:33:9: C: Style/RedundantReturn: Redundant return detected.
        return MARC::Record.new_from_marc( value )
        ^^^^^^
app/models/solr_document.rb:33:43: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        return MARC::Record.new_from_marc( value )
                                          ^
app/models/solr_document.rb:33:49: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        return MARC::Record.new_from_marc( value )
                                                ^
app/models/solr_document.rb:35:9: C: Style/RedundantReturn: Redundant return detected.
        return super
        ^^^^^^
app/models/solr_document.rb:40:19: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    document.key?( :marc_display )
                  ^
app/models/solr_document.rb:40:33: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    document.key?( :marc_display )
                                ^
app/models/solr_document.rb:42:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/solr_document.rb:44:30: C: Layout/SpaceInsideParens: Space inside parentheses detected.
  SolrDocument.use_extension( Blacklight::Document::Email )
                             ^
app/models/solr_document.rb:44:58: C: Layout/SpaceInsideParens: Space inside parentheses detected.
  SolrDocument.use_extension( Blacklight::Document::Email )
                                                         ^
app/models/solr_document.rb:45:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/solr_document.rb:47:30: C: Layout/SpaceInsideParens: Space inside parentheses detected.
  SolrDocument.use_extension( Blacklight::Document::Sms )
                             ^
app/models/solr_document.rb:47:56: C: Layout/SpaceInsideParens: Space inside parentheses detected.
  SolrDocument.use_extension( Blacklight::Document::Sms )
                                                       ^
app/models/solr_document.rb:54:17: C: Layout/SpaceInsideParens: Space inside parentheses detected.
  use_extension( Blacklight::Document::DublinCore)
                ^
app/models/solr_document.rb:54:51: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  use_extension( Blacklight::Document::DublinCore)
                                                  ^^^^
app/models/solr_document.rb:55:26: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  field_semantics.merge!(
                         ^^^^
app/models/solr_document.rb:56:26: C: Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
                         :title => "title_display", ...
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/solr_document.rb:56:26: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                         :title => "title_display",
                         ^^^^^^^^^
app/models/solr_document.rb:56:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                         :title => "title_display",
                                   ^^^^^^^^^^^^^^^
app/models/solr_document.rb:57:26: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                         :author => "author_display",
                         ^^^^^^^^^^
app/models/solr_document.rb:57:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                         :author => "author_display",
                                    ^^^^^^^^^^^^^^^^
app/models/solr_document.rb:58:26: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                         :language => "language_facet",
                         ^^^^^^^^^^^^
app/models/solr_document.rb:58:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                         :language => "language_facet",
                                      ^^^^^^^^^^^^^^^^
app/models/solr_document.rb:59:26: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                         :publisher => "published_display",
                         ^^^^^^^^^^^^^
app/models/solr_document.rb:59:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                         :publisher => "published_display",
                                       ^^^^^^^^^^^^^^^^^^^
app/models/solr_document.rb:60:26: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                         :format => "format"
                         ^^^^^^^^^^
app/models/solr_document.rb:60:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                         :format => "format"
                                    ^^^^^^^^
app/models/solr_document.rb:61:26: C: Layout/ClosingParenthesisIndentation: Indent ) to column 23 (not 25)
                         )
                         ^
app/models/solr_document.rb:67:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  SolrDocument.extension_parameters[:rfr_id] = "info:sid:library.jhu.edu/blacklight"
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/solr_document.rb:77:53: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
    SolrDocument.extension_parameters[:ils_di_base] =  HipConfig.ws_base_not_secure + "/holdings"
                                                    ^
app/models/solr_document.rb:77:54: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    SolrDocument.extension_parameters[:ils_di_base] =  HipConfig.ws_base_not_secure + "/holdings"
                                                     ^
app/models/solr_document.rb:77:87: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    SolrDocument.extension_parameters[:ils_di_base] =  HipConfig.ws_base_not_secure + "/holdings"
                                                                                      ^^^^^^^^^^^
app/models/solr_document.rb:78:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #broken with 6
    ^^^^^^^^^^^^^^
app/models/solr_document.rb:79:32: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    SolrDocument.use_extension(  DlfExpandedPassthrough::DocumentExtension ) do |document|
                               ^
app/models/solr_document.rb:79:32: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    SolrDocument.use_extension(  DlfExpandedPassthrough::DocumentExtension ) do |document|
                               ^^
app/models/solr_document.rb:79:75: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    SolrDocument.use_extension(  DlfExpandedPassthrough::DocumentExtension ) do |document|
                                                                          ^
app/models/solr_document.rb:80:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      document["id"] =~ /^bib_/
               ^^^^
app/models/solr_document.rb:83:32: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    SolrDocument.use_extension( DlfExpandedPassthrough::ToHoldingsExtension) do |document|
                               ^
app/models/solr_document.rb:84:5: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
       document.respond_to?(:to_dlf_expanded)
    ^^^
app/models/solr_document.rb:88:1: C: Layout/EmptyLines: Extra blank line detected.
app/models/solr_document.rb:88:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/models/stackmap_fetcher.rb:5:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/stackmap_fetcher.rb:10:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/stackmap_fetcher.rb:11:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  stackmap_config_file = Rails.root + "config/stackmap_collections.yml"
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:12:11: W: Lint/DeprecatedClassMethods: File.exists? is deprecated in favor of File.exist?.
  if File.exists? stackmap_config_file
          ^^^^^^^
app/models/stackmap_fetcher.rb:13:5: C: Style/ClassVars: Replace class var @@stackmap_collections with a class instance var.
    @@stackmap_collections = YAML.load_file( stackmap_config_file )
    ^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:13:45: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    @@stackmap_collections = YAML.load_file( stackmap_config_file )
                                            ^
app/models/stackmap_fetcher.rb:13:66: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    @@stackmap_collections = YAML.load_file( stackmap_config_file )
                                                                 ^
app/models/stackmap_fetcher.rb:16:5: C: Style/ClassVars: Replace class var @@stackmap_collections with a class instance var.
    @@stackmap_collections = []
    ^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:25:5: C: Style/RedundantReturn: Redundant return detected.
    return @holding && @holding.call_number && @holding.collection &&
    ^^^^^^
app/models/stackmap_fetcher.rb:25:12: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
    return @holding && @holding.call_number && @holding.collection &&
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:25:70: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    return @holding && @holding.call_number && @holding.collection &&
                                                                     ^
app/models/stackmap_fetcher.rb:26:7: C: Layout/MultilineOperationIndentation: Align the operands of a condition in a return statement spanning multiple lines.
      @holding.collection.internal_code && @@stackmap_collections.include?( @holding.collection.internal_code  )
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:26:76: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      @holding.collection.internal_code && @@stackmap_collections.include?( @holding.collection.internal_code  )
                                                                           ^
app/models/stackmap_fetcher.rb:26:110: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      @holding.collection.internal_code && @@stackmap_collections.include?( @holding.collection.internal_code  )
                                                                                                             ^
app/models/stackmap_fetcher.rb:26:110: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      @holding.collection.internal_code && @@stackmap_collections.include?( @holding.collection.internal_code  )
                                                                                                             ^^
app/models/stackmap_fetcher.rb:26:113: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      @holding.collection.internal_code && @@stackmap_collections.include?( @holding.collection.internal_code  )
                                                                                                                ^^^^
app/models/stackmap_fetcher.rb:28:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/stackmap_fetcher.rb:30:3: C: Metrics/AbcSize: Assignment Branch Condition size for fetch_map_info is too high. [<12, 44, 13> 47.42/15]
  def fetch_map_info ...
  ^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:30:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for fetch_map_info is too high. [9/7]
  def fetch_map_info ...
  ^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:30:3: C: Metrics/MethodLength: Method has too many lines. [28/10]
  def fetch_map_info ...
  ^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:30:3: C: Metrics/PerceivedComplexity: Perceived complexity for fetch_map_info is too high. [11/7]
  def fetch_map_info ...
  ^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:31:23: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
    return nil unless @holding && @holding.call_number && @holding.collection.internal_code
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:32:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/stackmap_fetcher.rb:33:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    base_url = "http://jhu.stackmap.com/json/"
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:34:20: C: Style/ColonMethodCall: Do not use :: for method calls.
    item_call = CGI::escape(@holding.call_number)
                   ^^
app/models/stackmap_fetcher.rb:34:50: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    item_call = CGI::escape(@holding.call_number)
                                                 ^
app/models/stackmap_fetcher.rb:35:54: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    item_location = @holding.collection.internal_code
                                                     ^^^^^
app/models/stackmap_fetcher.rb:37:23: C: Style/ColonMethodCall: Do not use :: for method calls.
    item_library = CGI::escape("Milton S. Eisenhower Library")
                      ^^
app/models/stackmap_fetcher.rb:37:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    item_library = CGI::escape("Milton S. Eisenhower Library")
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:39:102: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    request_url = "#{base_url}?callno=#{item_call}&location=#{item_location}&library=#{item_library}"
                                                                                                     ^
app/models/stackmap_fetcher.rb:43:13: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    response  =  client.get(request_url)
            ^
app/models/stackmap_fetcher.rb:43:15: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
    response  =  client.get(request_url)
              ^
app/models/stackmap_fetcher.rb:43:16: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    response  =  client.get(request_url)
               ^
app/models/stackmap_fetcher.rb:44:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/stackmap_fetcher.rb:46:7: C: Style/RaiseArgs: Provide an exception class and message as arguments to raise.
      raise HTTPClient::BadResponseError.new("Non-succesful #{response.status} response for #{request_url}")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:48:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/stackmap_fetcher.rb:52:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if stackmap["stat"] != "OK"
                ^^^^^^
app/models/stackmap_fetcher.rb:52:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if stackmap["stat"] != "OK"
                           ^^^^
app/models/stackmap_fetcher.rb:52:32: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    if stackmap["stat"] != "OK"
                               ^
app/models/stackmap_fetcher.rb:53:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      map_info = MapInfo.new(:status => stackmap["stat"],
                             ^^^^^^^^^^
app/models/stackmap_fetcher.rb:53:50: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      map_info = MapInfo.new(:status => stackmap["stat"],
                                                 ^^^^^^
app/models/stackmap_fetcher.rb:53:58: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      map_info = MapInfo.new(:status => stackmap["stat"],
                                                         ^
app/models/stackmap_fetcher.rb:54:19: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                  :error => stackmap["message"])
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:54:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :error => stackmap["message"])
                  ^^^^^^^^^
app/models/stackmap_fetcher.rb:54:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  :error => stackmap["message"])
                                     ^^^^^^^^^
app/models/stackmap_fetcher.rb:55:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    elsif stackmap["stat"]== "OK"
                   ^^^^^^
app/models/stackmap_fetcher.rb:55:27: C: Layout/SpaceAroundOperators: Surrounding space missing for operator ==.
    elsif stackmap["stat"]== "OK"
                          ^^
app/models/stackmap_fetcher.rb:55:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    elsif stackmap["stat"]== "OK"
                             ^^^^
app/models/stackmap_fetcher.rb:55:34: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    elsif stackmap["stat"]== "OK"
                                 ^
app/models/stackmap_fetcher.rb:56:11: C: Style/NumericPredicate: Use stackmap["results"]["maps"].size.positive? instead of stackmap["results"]["maps"].size > 0.
      if  stackmap["results"]["maps"].size > 0
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:56:11: C: Style/ZeroLengthPredicate: Use !empty? instead of size > 0.
      if  stackmap["results"]["maps"].size > 0
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:56:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      if  stackmap["results"]["maps"].size > 0
                   ^^^^^^^^^
app/models/stackmap_fetcher.rb:56:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      if  stackmap["results"]["maps"].size > 0
                              ^^^^^^
app/models/stackmap_fetcher.rb:56:47: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      if  stackmap["results"]["maps"].size > 0
                                              ^
app/models/stackmap_fetcher.rb:57:32: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        map_info = MapInfo.new(:status => stackmap["stat"],
                               ^^^^^^^^^^
app/models/stackmap_fetcher.rb:57:52: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        map_info = MapInfo.new(:status => stackmap["stat"],
                                                   ^^^^^^
app/models/stackmap_fetcher.rb:57:60: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        map_info = MapInfo.new(:status => stackmap["stat"],
                                                           ^
app/models/stackmap_fetcher.rb:58:17: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                :map_url => "#{stackmap["results"]["maps"].first["mapurl"]}&marker=1",
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:58:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                :map_url => "#{stackmap["results"]["maps"].first["mapurl"]}&marker=1",
                ^^^^^^^^^^^
app/models/stackmap_fetcher.rb:58:41: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
                :map_url => "#{stackmap["results"]["maps"].first["mapurl"]}&marker=1",
                                        ^^^^^^^^^
app/models/stackmap_fetcher.rb:58:52: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
                :map_url => "#{stackmap["results"]["maps"].first["mapurl"]}&marker=1",
                                                   ^^^^^^
app/models/stackmap_fetcher.rb:58:66: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
                :map_url => "#{stackmap["results"]["maps"].first["mapurl"]}&marker=1",
                                                                 ^^^^^^^^
app/models/stackmap_fetcher.rb:59:17: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                :floor_name => "#{stackmap["results"]["maps"].first["floorname"]}",
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:59:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                :floor_name => "#{stackmap["results"]["maps"].first["floorname"]}",
                ^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:59:32: C: Style/RedundantInterpolation: Prefer to_s over string interpolation.
                :floor_name => "#{stackmap["results"]["maps"].first["floorname"]}",
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:59:44: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
                :floor_name => "#{stackmap["results"]["maps"].first["floorname"]}",
                                           ^^^^^^^^^
app/models/stackmap_fetcher.rb:59:55: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
                :floor_name => "#{stackmap["results"]["maps"].first["floorname"]}",
                                                      ^^^^^^
app/models/stackmap_fetcher.rb:59:69: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
                :floor_name => "#{stackmap["results"]["maps"].first["floorname"]}",
                                                                    ^^^^^^^^^^^
app/models/stackmap_fetcher.rb:59:84: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                :floor_name => "#{stackmap["results"]["maps"].first["floorname"]}",
                                                                                   ^
app/models/stackmap_fetcher.rb:60:17: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                :range_name => "#{stackmap["results"]["maps"].first["ranges"].first["rangename"]}" )
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:60:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                :range_name => "#{stackmap["results"]["maps"].first["ranges"].first["rangename"]}" )
                ^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:60:32: C: Style/RedundantInterpolation: Prefer to_s over string interpolation.
                :range_name => "#{stackmap["results"]["maps"].first["ranges"].first["rangename"]}" )
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:60:44: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
                :range_name => "#{stackmap["results"]["maps"].first["ranges"].first["rangename"]}" )
                                           ^^^^^^^^^
app/models/stackmap_fetcher.rb:60:55: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
                :range_name => "#{stackmap["results"]["maps"].first["ranges"].first["rangename"]}" )
                                                      ^^^^^^
app/models/stackmap_fetcher.rb:60:69: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
                :range_name => "#{stackmap["results"]["maps"].first["ranges"].first["rangename"]}" )
                                                                    ^^^^^^^^
app/models/stackmap_fetcher.rb:60:85: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
                :range_name => "#{stackmap["results"]["maps"].first["ranges"].first["rangename"]}" )
                                                                                    ^^^^^^^^^^^
app/models/stackmap_fetcher.rb:60:99: C: Layout/SpaceInsideParens: Space inside parentheses detected.
                :range_name => "#{stackmap["results"]["maps"].first["ranges"].first["rangename"]}" )
                                                                                                  ^
app/models/stackmap_fetcher.rb:61:13: C: Style/NumericPredicate: Use stackmap["results"]["maps"].size.zero? instead of stackmap["results"]["maps"].size == 0.
      elsif stackmap["results"]["maps"].size == 0
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:61:13: C: Style/ZeroLengthPredicate: Use empty? instead of size == 0.
      elsif stackmap["results"]["maps"].size == 0
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:61:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      elsif stackmap["results"]["maps"].size == 0
                     ^^^^^^^^^
app/models/stackmap_fetcher.rb:61:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      elsif stackmap["results"]["maps"].size == 0
                                ^^^^^^
app/models/stackmap_fetcher.rb:61:50: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      elsif stackmap["results"]["maps"].size == 0
                                                 ^
app/models/stackmap_fetcher.rb:62:32: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        map_info = MapInfo.new(:status => "OK but no map",
                               ^^^^^^^^^^
app/models/stackmap_fetcher.rb:62:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        map_info = MapInfo.new(:status => "OK but no map",
                                          ^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:62:59: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        map_info = MapInfo.new(:status => "OK but no map",
                                                          ^
app/models/stackmap_fetcher.rb:63:19: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                  :error => "No map is available for this item.")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:63:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :error => "No map is available for this item.")
                  ^^^^^^^^^
app/models/stackmap_fetcher.rb:63:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  :error => "No map is available for this item.")
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/stackmap_fetcher.rb:67:5: C: Style/RedundantReturn: Redundant return detected.
    return map_info
    ^^^^^^
app/models/stackmap_fetcher.rb:69:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/stackmap_fetcher.rb:70:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/stackmap_fetcher.rb:71:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/stackmap_fetcher.rb:72:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/stackmap_fetcher.rb:74:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/stackmap_fetcher.rb:75:16: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  class MapInfo
               ^^^^^^^^
app/models/stackmap_fetcher.rb:77:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/stackmap_fetcher.rb:78:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/stackmap_fetcher.rb:79:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/stackmap_fetcher.rb:83:31: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        send("#{key}=", value)
                              ^^^^
app/models/stackmap_fetcher.rb:85:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
app/models/stackmap_fetcher.rb:86:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    end
       ^^^
app/models/stackmap_fetcher.rb:88:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/stackmap_fetcher.rb:89:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/user.rb:8:1: C: Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 1).
# Connects this user object to Blacklights Bookmarks and Folders.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:8:66: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# Connects this user object to Blacklights Bookmarks and Folders.
                                                                 ^
app/models/user.rb:9:1: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
 include Blacklight::User
^
app/models/user.rb:10:68: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Connects this user object to Blacklights Bookmarks and Folders.
                                                                   ^
app/models/user.rb:11:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  include Blacklight::User
  ^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:12:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #include Blacklight::User::UserGeneratedContent
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:13:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/user.rb:17:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  def is_real? ...
  ^^^^^^^^^^^^
app/models/user.rb:17:7: C: Naming/PredicateName: Rename is_real? to real?.
  def is_real?
      ^^^^^^^^
app/models/user.rb:18:22: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    self.class.count(:conditions=>['id = ?',self.id]) == 1
                     ^^^^^^^^^^^^^
app/models/user.rb:18:33: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
    self.class.count(:conditions=>['id = ?',self.id]) == 1
                                ^^
app/models/user.rb:18:44: C: Layout/SpaceAfterComma: Space missing after comma.
    self.class.count(:conditions=>['id = ?',self.id]) == 1
                                           ^
app/models/user.rb:18:45: C: Style/RedundantSelf: Redundant self detected.
    self.class.count(:conditions=>['id = ?',self.id]) == 1
                                            ^^^^^^^
app/models/user.rb:20:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/user.rb:21:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  def to_s; login; end
  ^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:21:3: C: Style/SingleLineMethods: Avoid single-line method definitions.
  def to_s; login; end
  ^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:21:23: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  def to_s; login; end
                      ^^
app/models/user.rb:22:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/user.rb:23:4: C: Layout/TrailingEmptyLines: Final newline missing.
end

app/models/yboss_spell.rb:11:1: C: Layout/EmptyLines: Extra blank line detected.
app/models/yboss_spell.rb:12:1: C: Layout/EmptyLines: Extra blank line detected.
app/models/yboss_spell.rb:13:2: C: Layout/TrailingWhitespace: Trailing whitespace detected.
#
 ^
app/models/yboss_spell.rb:14:44: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# Fetches spell suggestions from YBoss API.
                                           ^
app/models/yboss_spell.rb:21:68: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# Uses a class-level HTTPClient to try and re-use http connections.
                                                                   ^
app/models/yboss_spell.rb:22:53: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# timeout set to 0.3 seconds, YBoss should be quick!
                                                    ^^
app/models/yboss_spell.rb:24:65: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# We take the auth stuff from https://github.com/elcamino/yboss,
                                                                ^
app/models/yboss_spell.rb:26:74: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# handling, so just copy and pasted the auth stuff and modified somewhat.
                                                                         ^
app/models/yboss_spell.rb:28:47: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# Our own YBoss account credentials are set in
                                              ^
app/models/yboss_spell.rb:37:3: C: Style/ClassVars: Replace class var @@timeout with a class instance var.
  @@timeout = 0.2
  ^^^^^^^^^
app/models/yboss_spell.rb:45:36: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Returns nil for no suggestions.
                                   ^
app/models/yboss_spell.rb:46:39: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Returns a string for a suggestion.
                                      ^
app/models/yboss_spell.rb:50:24: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # will log the error.
                       ^
app/models/yboss_spell.rb:51:3: C: Metrics/AbcSize: Assignment Branch Condition size for get_suggestion is too high. [<6, 15, 4> 16.64/15]
  def get_suggestion(query)         ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:51:3: C: Metrics/MethodLength: Method has too many lines. [12/10]
  def get_suggestion(query)         ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:51:28: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  def get_suggestion(query)
                           ^^^^^^^^
app/models/yboss_spell.rb:52:23: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    oauth = OAuth.new(:consumer_key => self.consumer_key,
                      ^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:52:40: C: Style/RedundantSelf: Redundant self detected.
    oauth = OAuth.new(:consumer_key => self.consumer_key,
                                       ^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:52:58: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    oauth = OAuth.new(:consumer_key => self.consumer_key,
                                                         ^
app/models/yboss_spell.rb:53:22: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                     :consumer_secret => self.consumer_secret)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:53:22: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                     :consumer_secret => self.consumer_secret)
                     ^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:53:42: C: Style/RedundantSelf: Redundant self detected.
                     :consumer_secret => self.consumer_secret)
                                         ^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:53:63: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                     :consumer_secret => self.consumer_secret)
                                                              ^^^^^^^^^^^^
app/models/yboss_spell.rb:58:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:64:5: C: Style/RedundantReturn: Redundant return detected.
    return suggestion
    ^^^^^^
app/models/yboss_spell.rb:66:51: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    Rails.logger.error("YBossSpell: #{e.inspect}")
                                                  ^^^^
app/models/yboss_spell.rb:67:5: C: Style/RedundantReturn: Redundant return detected.
    return false
    ^^^^^^
app/models/yboss_spell.rb:70:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:73:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def get_suggestion_from_response(hash)
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:73:3: C: Metrics/AbcSize: Assignment Branch Condition size for get_suggestion_from_response is too high. [<3, 19, 5> 19.87/15]
  def get_suggestion_from_response(hash) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:73:3: C: Metrics/MethodLength: Method has too many lines. [13/10]
  def get_suggestion_from_response(hash) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:74:8: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
    if (hash["bossresponse"].try{|h| h["responsecode"]} != "200")
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:74:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if (hash["bossresponse"].try{|h| h["responsecode"]} != "200")
             ^^^^^^^^^^^^^^
app/models/yboss_spell.rb:74:33: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    if (hash["bossresponse"].try{|h| h["responsecode"]} != "200")
                                ^
app/models/yboss_spell.rb:74:33: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    if (hash["bossresponse"].try{|h| h["responsecode"]} != "200")
                                ^^
app/models/yboss_spell.rb:74:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if (hash["bossresponse"].try{|h| h["responsecode"]} != "200")
                                       ^^^^^^^^^^^^^^
app/models/yboss_spell.rb:74:55: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    if (hash["bossresponse"].try{|h| h["responsecode"]} != "200")
                                                      ^
app/models/yboss_spell.rb:74:60: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if (hash["bossresponse"].try{|h| h["responsecode"]} != "200")
                                                           ^^^^^
app/models/yboss_spell.rb:75:7: C: Style/RaiseArgs: Provide an exception class and message as arguments to raise.
      raise Error.new("YBoss reported failure: #{hash.inspect}")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:77:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:78:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    spell_hash = hash["bossresponse"].try{|h| h["spelling"]}
                      ^^^^^^^^^^^^^^
app/models/yboss_spell.rb:78:42: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    spell_hash = hash["bossresponse"].try{|h| h["spelling"]}
                                         ^
app/models/yboss_spell.rb:78:42: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    spell_hash = hash["bossresponse"].try{|h| h["spelling"]}
                                         ^^
app/models/yboss_spell.rb:78:49: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    spell_hash = hash["bossresponse"].try{|h| h["spelling"]}
                                                ^^^^^^^^^^
app/models/yboss_spell.rb:78:60: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    spell_hash = hash["bossresponse"].try{|h| h["spelling"]}
                                                           ^
app/models/yboss_spell.rb:79:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:80:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if spell_hash.blank?
    ^^
app/models/yboss_spell.rb:81:7: C: Style/RaiseArgs: Provide an exception class and message as arguments to raise.
      raise Error.new("YBoss response missing spelling info: #{hash.inspect}")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:83:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:84:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if spell_hash["count"].to_i < 1
    ^^
app/models/yboss_spell.rb:84:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if spell_hash["count"].to_i < 1
                  ^^^^^^^
app/models/yboss_spell.rb:87:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:88:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    suggestion = spell_hash["results"].first["suggestion"]
                            ^^^^^^^^^
app/models/yboss_spell.rb:88:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    suggestion = spell_hash["results"].first["suggestion"]
                                             ^^^^^^^^^^^^
app/models/yboss_spell.rb:92:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:93:5: C: Style/RedundantReturn: Redundant return detected.
    return suggestion
    ^^^^^^
app/models/yboss_spell.rb:95:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:98:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :format => self.format,
      ^^^^^^^^^^
app/models/yboss_spell.rb:99:7: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
      :q      => pre_escape_query(query),
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:99:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :q      => pre_escape_query(query),
      ^^^^^^^^^^
app/models/yboss_spell.rb:99:41: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
      :q      => pre_escape_query(query),
                                        ^
app/models/yboss_spell.rb:99:42: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      :q      => pre_escape_query(query),
                                         ^^^^^
app/models/yboss_spell.rb:101:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:102:11: C: Style/RedundantSelf: Redundant self detected.
    url = self.base_uri + '?' +
          ^^^^^^^^^^^^^
app/models/yboss_spell.rb:102:32: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    url = self.base_uri + '?' +
                               ^
app/models/yboss_spell.rb:103:7: C: Layout/MultilineOperationIndentation: Align the operands of an expression in an assignment spanning multiple lines.
      params.find_all { |k,v| ! v.nil? }.collect { |k,v| "#{k}=#{URI.escape(v)}" }.join('&')
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:103:26: W: Lint/UnusedBlockArgument: Unused block argument - k. If it's necessary, use _ or _k as an argument name to indicate that it won't be used.
      params.find_all { |k,v| ! v.nil? }.collect { |k,v| "#{k}=#{URI.escape(v)}" }.join('&')
                         ^
app/models/yboss_spell.rb:103:27: C: Layout/SpaceAfterComma: Space missing after comma.
      params.find_all { |k,v| ! v.nil? }.collect { |k,v| "#{k}=#{URI.escape(v)}" }.join('&')
                          ^
app/models/yboss_spell.rb:103:31: C: Layout/SpaceAfterNot: Do not leave space between ! and its argument.
      params.find_all { |k,v| ! v.nil? }.collect { |k,v| "#{k}=#{URI.escape(v)}" }.join('&')
                              ^^^^^^^^
app/models/yboss_spell.rb:103:54: C: Layout/SpaceAfterComma: Space missing after comma.
      params.find_all { |k,v| ! v.nil? }.collect { |k,v| "#{k}=#{URI.escape(v)}" }.join('&')
                                                     ^
app/models/yboss_spell.rb:103:66: W: Lint/UriEscapeUnescape: URI.escape method is obsolete and should not be used. Instead, use CGI.escape, URI.encode_www_form or URI.encode_www_form_component depending on your specific use case.
      params.find_all { |k,v| ! v.nil? }.collect { |k,v| "#{k}=#{URI.escape(v)}" }.join('&')
                                                                 ^^^^^^^^^^^^^
app/models/yboss_spell.rb:104:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:105:5: C: Style/RedundantReturn: Redundant return detected.
    return url
    ^^^^^^
app/models/yboss_spell.rb:110:12: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # spaces.
           ^
app/models/yboss_spell.rb:115:18: W: Lint/UriEscapeUnescape: URI.decode method is obsolete and should not be used. Instead, use CGI.unescape, URI.decode_www_form or URI.decode_www_form_component depending on your specific use case.
    suggestion = URI.decode(suggestion)
                 ^^^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:118:80: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # a mess. It's tagged UTF-8,  if it's not even valid UTF-8, just ignore it.
                                                                               ^
app/models/yboss_spell.rb:125:31: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # entered spaces, oh well.
                              ^^
app/models/yboss_spell.rb:128:5: C: Style/RedundantReturn: Redundant return detected.
    return suggestion
    ^^^^^^
app/models/yboss_spell.rb:130:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:134:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:138:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:142:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:146:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:147:70: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Yes, experiments show we need to sort of "double escape" queries,
                                                                     ^
app/models/yboss_spell.rb:149:72: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # with those percent combos, THEN actually URI-escape the result TOO.
                                                                       ^
app/models/yboss_spell.rb:150:58: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Yes, this is confusing and a mess, but seems to work.
                                                         ^
app/models/yboss_spell.rb:155:28: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # &#39; in suggestions!
                           ^
app/models/yboss_spell.rb:157:81: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # Do not need to double escape spaces even though they do need URI escaping.
                                                                                ^^
app/models/yboss_spell.rb:161:76: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # diacritics and other non-latin. Which means the output is still UTF8,
                                                                           ^^^^
app/models/yboss_spell.rb:163:63: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # later with illegal bytes -- so we need to retag as UTF-8
                                                              ^^^^
app/models/yboss_spell.rb:164:5: C: Style/RedundantReturn: Redundant return detected.
    return URI.escape(query, "/?&;:@,$=%\"#*<>{}|[]^\\`()'").force_encoding("UTF-8")
    ^^^^^^
app/models/yboss_spell.rb:164:12: W: Lint/UriEscapeUnescape: URI.escape method is obsolete and should not be used. Instead, use CGI.escape, URI.encode_www_form or URI.encode_www_form_component depending on your specific use case.
    return URI.escape(query, "/?&;:@,$=%\"#*<>{}|[]^\\`()'").force_encoding("UTF-8")
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:164:77: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return URI.escape(query, "/?&;:@,$=%\"#*<>{}|[]^\\`()'").force_encoding("UTF-8")
                                                                            ^^^^^^^
app/models/yboss_spell.rb:166:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:167:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:170:45: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # But modified to work slightly different.
                                            ^
app/models/yboss_spell.rb:174:4: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  #
   ^
app/models/yboss_spell.rb:184:3: C: Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 3).
  # specific prior written permission.
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:185:1: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
   class OAuth
^^^
app/models/yboss_spell.rb:185:4: C: Layout/IndentationConsistency: Inconsistent indentation detected.
   class OAuth ...
   ^^^^^^^^^^^
app/models/yboss_spell.rb:186:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:187:4: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
    attr_accessor :consumer_key, :consumer_secret, :token, :token_secret, :req_method,
   ^
app/models/yboss_spell.rb:188:5: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
    :sig_method, :oauth_version, :callback_url, :params, :req_url, :base_str
    ^^^^^^^^^^^
app/models/yboss_spell.rb:189:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:190:4: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
    def initialize(options = {})
   ^
app/models/yboss_spell.rb:190:33: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    def initialize(options = {})
                                ^^^^^^
app/models/yboss_spell.rb:200:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:203:4: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
    def nonce
   ^
app/models/yboss_spell.rb:204:7: C: Style/UnpackFirst: Use Array.new( 5 ) { rand(256) }.pack('C*').unpack1('H*') instead of Array.new( 5 ) { rand(256) }.pack('C*').unpack('H*').first.
      Array.new( 5 ) { rand(256) }.pack('C*').unpack('H*').first
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:204:17: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      Array.new( 5 ) { rand(256) }.pack('C*').unpack('H*').first
                ^
app/models/yboss_spell.rb:204:19: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      Array.new( 5 ) { rand(256) }.pack('C*').unpack('H*').first
                  ^
app/models/yboss_spell.rb:206:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:207:4: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
    def percent_encode( string )
   ^
app/models/yboss_spell.rb:207:24: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    def percent_encode( string )
                       ^
app/models/yboss_spell.rb:207:31: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    def percent_encode( string )
                              ^
app/models/yboss_spell.rb:208:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:210:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:211:7: C: Style/RedundantReturn: Redundant return detected.
      return URI.escape( string, Regexp.new("[^#{URI::PATTERN::UNRESERVED.gsub("'", "")}]") ).gsub('*', '%2A')
      ^^^^^^
app/models/yboss_spell.rb:211:14: W: Lint/UriEscapeUnescape: URI.escape method is obsolete and should not be used. Instead, use CGI.escape, URI.encode_www_form or URI.encode_www_form_component depending on your specific use case.
      return URI.escape( string, Regexp.new("[^#{URI::PATTERN::UNRESERVED.gsub("'", "")}]") ).gsub('*', '%2A')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:211:25: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      return URI.escape( string, Regexp.new("[^#{URI::PATTERN::UNRESERVED.gsub("'", "")}]") ).gsub('*', '%2A')
                        ^
app/models/yboss_spell.rb:211:85: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
      return URI.escape( string, Regexp.new("[^#{URI::PATTERN::UNRESERVED.gsub("'", "")}]") ).gsub('*', '%2A')
                                                                                    ^^
app/models/yboss_spell.rb:211:92: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      return URI.escape( string, Regexp.new("[^#{URI::PATTERN::UNRESERVED.gsub("'", "")}]") ).gsub('*', '%2A')
                                                                                           ^
app/models/yboss_spell.rb:213:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:215:4: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
    def signature
   ^
app/models/yboss_spell.rb:216:28: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      key = percent_encode( @consumer_secret ) + '&' + percent_encode( @token_secret )
                           ^
app/models/yboss_spell.rb:216:45: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      key = percent_encode( @consumer_secret ) + '&' + percent_encode( @token_secret )
                                            ^
app/models/yboss_spell.rb:216:71: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      key = percent_encode( @consumer_secret ) + '&' + percent_encode( @token_secret )
                                                                      ^
app/models/yboss_spell.rb:216:85: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      key = percent_encode( @consumer_secret ) + '&' + percent_encode( @token_secret )
                                                                                    ^
app/models/yboss_spell.rb:217:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:219:44: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      digest = OpenSSL::Digest::Digest.new( 'sha1' )
                                           ^
app/models/yboss_spell.rb:219:51: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      digest = OpenSSL::Digest::Digest.new( 'sha1' )
                                                  ^
app/models/yboss_spell.rb:220:35: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      hmac = OpenSSL::HMAC.digest( digest, key, @base_str )
                                  ^
app/models/yboss_spell.rb:220:58: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      hmac = OpenSSL::HMAC.digest( digest, key, @base_str )
                                                         ^
app/models/yboss_spell.rb:221:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:223:23: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      Base64.encode64( hmac ).chomp.gsub( /\n/, '' )
                      ^
app/models/yboss_spell.rb:223:28: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      Base64.encode64( hmac ).chomp.gsub( /\n/, '' )
                           ^
app/models/yboss_spell.rb:223:42: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      Base64.encode64( hmac ).chomp.gsub( /\n/, '' )
                                         ^
app/models/yboss_spell.rb:223:51: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      Base64.encode64( hmac ).chomp.gsub( /\n/, '' )
                                                  ^
app/models/yboss_spell.rb:225:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:230:4: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
    def query_string
   ^
app/models/yboss_spell.rb:232:25: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      @params.sort.each { | key, val |
                        ^
app/models/yboss_spell.rb:232:28: C: Layout/SpaceAroundBlockParameters: Space before first block parameter detected.
      @params.sort.each { | key, val |
                           ^
app/models/yboss_spell.rb:232:37: C: Layout/SpaceAroundBlockParameters: Space after last block parameter detected.
      @params.sort.each { | key, val |
                                    ^
app/models/yboss_spell.rb:233:20: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        pairs.push( "#{ percent_encode( key ) }=#{ percent_encode( val.to_s ) }" )
                   ^
app/models/yboss_spell.rb:233:24: C: Layout/SpaceInsideStringInterpolation: Space inside string interpolation detected.
        pairs.push( "#{ percent_encode( key ) }=#{ percent_encode( val.to_s ) }" )
                       ^
app/models/yboss_spell.rb:233:40: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        pairs.push( "#{ percent_encode( key ) }=#{ percent_encode( val.to_s ) }" )
                                       ^
app/models/yboss_spell.rb:233:44: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        pairs.push( "#{ percent_encode( key ) }=#{ percent_encode( val.to_s ) }" )
                                           ^
app/models/yboss_spell.rb:233:46: C: Layout/SpaceInsideStringInterpolation: Space inside string interpolation detected.
        pairs.push( "#{ percent_encode( key ) }=#{ percent_encode( val.to_s ) }" )
                                             ^
app/models/yboss_spell.rb:233:51: C: Layout/SpaceInsideStringInterpolation: Space inside string interpolation detected.
        pairs.push( "#{ percent_encode( key ) }=#{ percent_encode( val.to_s ) }" )
                                                  ^
app/models/yboss_spell.rb:233:67: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        pairs.push( "#{ percent_encode( key ) }=#{ percent_encode( val.to_s ) }" )
                                                                  ^
app/models/yboss_spell.rb:233:76: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        pairs.push( "#{ percent_encode( key ) }=#{ percent_encode( val.to_s ) }" )
                                                                           ^
app/models/yboss_spell.rb:233:78: C: Layout/SpaceInsideStringInterpolation: Space inside string interpolation detected.
        pairs.push( "#{ percent_encode( key ) }=#{ percent_encode( val.to_s ) }" )
                                                                             ^
app/models/yboss_spell.rb:233:81: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        pairs.push( "#{ percent_encode( key ) }=#{ percent_encode( val.to_s ) }" )
                                                                                ^
app/models/yboss_spell.rb:237:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:239:4: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
    def sign( parsed_url )
   ^
app/models/yboss_spell.rb:239:5: C: Metrics/AbcSize: Assignment Branch Condition size for sign is too high. [<8, 27, 6> 28.79/15]
    def sign( parsed_url ) ...
    ^^^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:239:5: C: Metrics/MethodLength: Method has too many lines. [26/10]
    def sign( parsed_url ) ...
    ^^^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:239:14: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    def sign( parsed_url )
             ^
app/models/yboss_spell.rb:239:25: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    def sign( parsed_url )
                        ^
app/models/yboss_spell.rb:240:31: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
      parsed_url = parsed_url.kind_of?(URI) ? parsed_url.clone : URI.parse(parsed_url)
                              ^^^^^^^^
app/models/yboss_spell.rb:241:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:242:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:250:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:253:19: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        CGI.parse( parsed_url.query ).each do |k,v|
                  ^
app/models/yboss_spell.rb:253:36: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        CGI.parse( parsed_url.query ).each do |k,v|
                                   ^
app/models/yboss_spell.rb:253:49: C: Layout/SpaceAfterComma: Space missing after comma.
        CGI.parse( parsed_url.query ).each do |k,v|
                                                ^
app/models/yboss_spell.rb:254:11: C: Style/ConditionalAssignment: Use the return of the conditional for variable assignment and comparison.
          if v.is_a?(Array) && v.count == 1 ...
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:262:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:265:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:269:20: C: Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the start of the line where the left square bracket is.
                   @req_method,
                   ^^^^^^^^^^^
app/models/yboss_spell.rb:270:35: C: Layout/SpaceInsideParens: Space inside parentheses detected.
                   percent_encode( req_url ),
                                  ^
app/models/yboss_spell.rb:270:43: C: Layout/SpaceInsideParens: Space inside parentheses detected.
                   percent_encode( req_url ),
                                          ^
app/models/yboss_spell.rb:271:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:273:35: C: Layout/SpaceInsideParens: Space inside parentheses detected.
                   percent_encode( query_string )
                                  ^
app/models/yboss_spell.rb:273:48: C: Layout/SpaceInsideParens: Space inside parentheses detected.
                   percent_encode( query_string )
                                               ^
app/models/yboss_spell.rb:274:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:275:19: C: Layout/FirstArrayElementIndentation: Indent the right bracket the same as the start of the line where the left bracket is.
                  ].join( '&' )
                  ^
app/models/yboss_spell.rb:275:26: C: Layout/SpaceInsideParens: Space inside parentheses detected.
                  ].join( '&' )
                         ^
app/models/yboss_spell.rb:275:30: C: Layout/SpaceInsideParens: Space inside parentheses detected.
                  ].join( '&' )
                             ^
app/models/yboss_spell.rb:276:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:278:15: C: Layout/SpaceInsideReferenceBrackets: Do not use space inside reference brackets.
      @params[ 'oauth_signature' ] = signature
              ^
app/models/yboss_spell.rb:278:33: C: Layout/SpaceInsideReferenceBrackets: Do not use space inside reference brackets.
      @params[ 'oauth_signature' ] = signature
                                ^
app/models/yboss_spell.rb:279:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:280:26: C: Style/RedundantSelf: Redundant self detected.
      parsed_url.query = self.query_string
                         ^^^^^^^^^^^^^^^^^
app/models/yboss_spell.rb:281:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:282:7: C: Style/RedundantReturn: Redundant return detected.
      return parsed_url
      ^^^^^^
app/models/yboss_spell.rb:284:3: W: Layout/EndAlignment: end at 284, 2 is not aligned with class at 185, 3.
  end
  ^^^
app/models/yboss_spell.rb:285:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/yboss_spell.rb:286:30: C: Layout/SpaceBeforeSemicolon: Space found before semicolon.
  class Error < StandardError ; end
                             ^
app/models/yboss_spell.rb:287:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/search_builder_filters/home_page_solr_params_logic.rb:4:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# to make it a cheap search.
                            ^
app/search_builder_filters/home_page_solr_params_logic.rb:10:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/search_builder_filters/home_page_solr_params_logic.rb:13:46: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # of results for everything in the catalog.
                                             ^
app/search_builder_filters/home_page_solr_params_logic.rb:17:3: C: Metrics/AbcSize: Assignment Branch Condition size for home_page_solr_params is too high. [<3, 22, 11> 24.78/15]
  def home_page_solr_params(solr_params) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/search_builder_filters/home_page_solr_params_logic.rb:17:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for home_page_solr_params is too high. [9/7]
  def home_page_solr_params(solr_params) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/search_builder_filters/home_page_solr_params_logic.rb:17:3: C: Metrics/MethodLength: Method has too many lines. [12/10]
  def home_page_solr_params(solr_params) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/search_builder_filters/home_page_solr_params_logic.rb:17:3: C: Metrics/PerceivedComplexity: Perceived complexity for home_page_solr_params is too high. [9/7]
  def home_page_solr_params(solr_params) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/search_builder_filters/home_page_solr_params_logic.rb:18:9: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    if ( blacklight_params[:format].blank? || blacklight_params[:format] == "html") &&
        ^
app/search_builder_filters/home_page_solr_params_logic.rb:18:77: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if ( blacklight_params[:format].blank? || blacklight_params[:format] == "html") &&
                                                                            ^^^^^^
app/search_builder_filters/home_page_solr_params_logic.rb:18:87: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    if ( blacklight_params[:format].blank? || blacklight_params[:format] == "html") &&
                                                                                      ^
app/search_builder_filters/home_page_solr_params_logic.rb:19:9: C: Layout/MultilineOperationIndentation: Align the operands of a condition in an if statement spanning multiple lines.
        blacklight_params[:controller] == 'catalog' && blacklight_params[:action] == 'index' &&
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/search_builder_filters/home_page_solr_params_logic.rb:20:9: C: Layout/MultilineOperationIndentation: Align the operands of a condition in an if statement spanning multiple lines.
        !(blacklight_params[:q].present? ||  ...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/search_builder_filters/home_page_solr_params_logic.rb:20:44: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        !(blacklight_params[:q].present? ||
                                           ^
app/search_builder_filters/home_page_solr_params_logic.rb:21:44: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          blacklight_params[:f].present? ||
                                           ^
app/search_builder_filters/home_page_solr_params_logic.rb:24:11: C: Layout/ClosingParenthesisIndentation: Align ) with (.
          )
          ^
app/search_builder_filters/home_page_solr_params_logic.rb:25:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/search_builder_filters/home_page_solr_params_logic.rb:27:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      solr_params[:facet] = "false"
                            ^^^^^^^
app/search_builder_filters/home_page_solr_params_logic.rb:28:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      solr_params[:stats] = "false"
                            ^^^^^^^
app/search_builder_filters/home_page_solr_params_logic.rb:29:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      solr_params[:rows] = "0"
                           ^^^
app/search_builder_filters/home_page_solr_params_logic.rb:31:5: C: Style/RedundantReturn: Redundant return detected.
    return solr_params
    ^^^^^^
app/search_builder_filters/home_page_solr_params_logic.rb:31:23: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    return solr_params
                      ^^^^
app/search_builder_filters/home_page_solr_params_logic.rb:32:6: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  end
     ^^
app/search_builder_filters/home_page_solr_params_logic.rb:33:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/search_builder_filters/journal_title_apply_limit.rb:2:1: C: Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body beginning.
app/search_builder_filters/journal_title_apply_limit.rb:4:5: W: Lint/UselessAssignment: Useless assignment to variable - i.
    i = klass.default_processor_chain << :journal_title_apply_limit
    ^
app/search_builder_filters/journal_title_apply_limit.rb:4:68: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    i = klass.default_processor_chain << :journal_title_apply_limit
                                                                   ^^^^
app/search_builder_filters/journal_title_apply_limit.rb:10:15: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # below too.
              ^
app/search_builder_filters/journal_title_apply_limit.rb:12:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body beginning.
app/search_builder_filters/journal_title_apply_limit.rb:13:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if blacklight_params["search_field"] == "journal_title"
                         ^^^^^^^^^^^^^^
app/search_builder_filters/journal_title_apply_limit.rb:13:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if blacklight_params["search_field"] == "journal_title"
                                            ^^^^^^^^^^^^^^^
app/search_builder_filters/journal_title_apply_limit.rb:15:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      solr_params[:fq] << "{!raw f=format}Journal/Newspaper"
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/search_builder_filters/journal_title_apply_limit.rb:16:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    end
       ^^^^^^^^
app/search_builder_filters/journal_title_apply_limit.rb:18:5: C: Style/RedundantReturn: Redundant return detected.
    return solr_params
    ^^^^^^
app/search_builder_filters/journal_title_apply_limit.rb:20:1: C: Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body end.
app/search_builder_filters/journal_title_apply_limit.rb:21:4: C: Layout/TrailingEmptyLines: Final newline missing.
end

app/search_builder_filters/unstem_solr_params.rb:2:1: C: Layout/LeadingCommentSpace: Missing space after #.
#, to support :unstem_search param to search only un-stemmed fields.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/search_builder_filters/unstem_solr_params.rb:2:69: C: Layout/TrailingWhitespace: Trailing whitespace detected.
#, to support :unstem_search param to search only un-stemmed fields.
                                                                    ^
app/search_builder_filters/unstem_solr_params.rb:5:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/search_builder_filters/unstem_solr_params.rb:7:5: W: Lint/UselessAssignment: Useless assignment to variable - i.
    i = klass.default_processor_chain << :add_unstemmed_overrides_to_solr
    ^
app/search_builder_filters/unstem_solr_params.rb:7:74: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    i = klass.default_processor_chain << :add_unstemmed_overrides_to_solr
                                                                         ^^^^
app/search_builder_filters/unstem_solr_params.rb:9:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/search_builder_filters/unstem_solr_params.rb:14:48: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # request to contain only unstemmed fields.
                                               ^
app/search_builder_filters/unstem_solr_params.rb:15:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def add_unstemmed_overrides_to_solr(solr_parameters)
^^^^
app/search_builder_filters/unstem_solr_params.rb:15:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    def add_unstemmed_overrides_to_solr(solr_parameters) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/search_builder_filters/unstem_solr_params.rb:16:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/search_builder_filters/unstem_solr_params.rb:20:12: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        end
           ^^^^^^^^
app/search_builder_filters/unstem_solr_params.rb:21:10: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      end
         ^^^^^^^^^^^^
app/search_builder_filters/unstem_solr_params.rb:22:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/search_builder_filters/unstem_solr_params.rb:23:7: C: Style/RedundantReturn: Redundant return detected.
      return solr_parameters
      ^^^^^^
app/search_builder_filters/unstem_solr_params.rb:25:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config.ru:3:16: C: Style/ExpandPathArguments: Use expand_path('config/environment', __dir__) instead of expand_path('../config/environment', __FILE__).
require ::File.expand_path('../config/environment',  __FILE__)
               ^^^^^^^^^^^
config.ru:3:52: C: Layout/ExtraSpacing: Unnecessary spacing detected.
require ::File.expand_path('../config/environment',  __FILE__)
                                                   ^
config/application.rb:1:14: C: Style/ExpandPathArguments: Use expand_path('boot', __dir__) instead of expand_path('../boot', __FILE__).
require File.expand_path('../boot', __FILE__)
             ^^^^^^^^^^^
config/application.rb:5:1: C: Layout/EmptyLines: Extra blank line detected.
config/application.rb:7:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# to staging and check logs.
                            ^
config/application.rb:8:14: C: Rails/UnknownEnv: Unknown environment demo.
if Rails.env.demo? || Rails.env.development?
             ^^^^^
config/application.rb:11:3: C: Style/StderrPuts: Use warn instead of $stderr.puts to allow such output to be disabled.
  $stderr.puts "Logging Deprecations from Blacklight and Deprecation gem..."
  ^^^^^^^^^^^^
config/application.rb:11:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  $stderr.puts "Logging Deprecations from Blacklight and Deprecation gem..."
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/application.rb:17:1: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
if defined?(Bundler)
^^
config/application.rb:17:21: C: Layout/TrailingWhitespace: Trailing whitespace detected.
if defined?(Bundler)
                    ^^
config/application.rb:18:39: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  Bundler.require(:default, Rails.env)
                                      ^^
config/application.rb:19:4: C: Layout/TrailingWhitespace: Trailing whitespace detected.
end
   ^
config/application.rb:21:1: C: Layout/EmptyLines: Extra blank line detected.
config/application.rb:22:1: C: Layout/EmptyLines: Extra blank line detected.
config/application.rb:23:16: C: Layout/TrailingWhitespace: Trailing whitespace detected.
module Catalyst
               ^
config/application.rb:54:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.encoding = "utf-8"
                      ^^^^^^^
config/application.rb:62:88: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # https://github.com/h5bp/html5-boilerplate/blob/v4.0.0/doc/html.md#x-ua-compatible
                                                                                       ^
config/application.rb:65:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # actual headers.
                     ^
config/application.rb:67:9: C: Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
        'X-UA-Compatible' => 'IE=edge,chrome=1'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/application.rb:68:5: C: Layout/FirstHashElementIndentation: Indent the right brace the same as the first position after the preceding left parenthesis.
    })
    ^
config/application.rb:70:1: C: Layout/EmptyLines: Extra blank line detected.
config/application.rb:72:33: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    config.assets.enabled = true
                                ^^^^
config/application.rb:73:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/application.rb:75:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #config.assets.precompile += ['print.css']
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/application.rb:79:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/application.rb:84:1: C: Layout/EmptyLines: Extra blank line detected.
config/application.rb:85:1: C: Layout/EmptyLines: Extra blank line detected.
config/application.rb:88:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/application.rb:90:19: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # of catalyst.
                  ^
config/application.rb:91:32: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    ActionMailer::Base.default :from => '"Johns Hopkins Libraries" <ask@jhu.libanswers.com>'
                               ^^^^^^^^
config/application.rb:94:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #config.x.suppress_browse = true
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/application.rb:95:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/boot.rb:4:32: C: Style/ExpandPathArguments: Use expand_path('../Gemfile', __dir__) instead of expand_path('../../Gemfile', __FILE__).
ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../../Gemfile', __FILE__)
                               ^^^^^^^^^^^
config/boot.rb:6:33: W: Lint/DeprecatedClassMethods: File.exists? is deprecated in favor of File.exist?.
require 'bundler/setup' if File.exists?(ENV['BUNDLE_GEMFILE'])
                                ^^^^^^^
config/compass.rb:2:1: W: Lint/UselessAssignment: Useless assignment to variable - project_type.
project_type = :rails
^^^^^^^^^^^^
config/ebsco_dbs.rb:1:1: C: Style/GlobalVars: Do not introduce global variables.
$ebsco_dbs = []
^^^^^^^^^^
config/ebsco_dbs.rb:2:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'asn' )  # Academic Search Ultimate **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:2:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'asn' )  # Academic Search Ultimate **
    ^^^^^^^^^^
config/ebsco_dbs.rb:2:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'asn' )  # Academic Search Ultimate **
                    ^
config/ebsco_dbs.rb:2:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'asn' )  # Academic Search Ultimate **
                          ^
config/ebsco_dbs.rb:3:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'awn' )  # Africa-Wide Information **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:3:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'awn' )  # Africa-Wide Information **
    ^^^^^^^^^^
config/ebsco_dbs.rb:3:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'awn' )  # Africa-Wide Information **
                    ^
config/ebsco_dbs.rb:3:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'awn' )  # Africa-Wide Information **
                          ^
config/ebsco_dbs.rb:3:59: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'awn' )  # Africa-Wide Information **
                                                          ^
config/ebsco_dbs.rb:4:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'ahl' )  # America: History & Life **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:4:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'ahl' )  # America: History & Life **
    ^^^^^^^^^^
config/ebsco_dbs.rb:4:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'ahl' )  # America: History & Life **
                    ^
config/ebsco_dbs.rb:4:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'ahl' )  # America: History & Life **
                          ^
config/ebsco_dbs.rb:4:59: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'ahl' )  # America: History & Life **
                                                          ^
config/ebsco_dbs.rb:5:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'rfh' )  # ATLA Religion Database with ATLASerials **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:5:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'rfh' )  # ATLA Religion Database with ATLASerials **
    ^^^^^^^^^^
config/ebsco_dbs.rb:5:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'rfh' )  # ATLA Religion Database with ATLASerials **
                    ^
config/ebsco_dbs.rb:5:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'rfh' )  # ATLA Religion Database with ATLASerials **
                          ^
config/ebsco_dbs.rb:5:75: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'rfh' )  # ATLA Religion Database with ATLASerials **
                                                                          ^
config/ebsco_dbs.rb:6:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'rzh' )  # CINAHL Plus with Full Text **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:6:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'rzh' )  # CINAHL Plus with Full Text **
    ^^^^^^^^^^
config/ebsco_dbs.rb:6:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'rzh' )  # CINAHL Plus with Full Text **
                    ^
config/ebsco_dbs.rb:6:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'rzh' )  # CINAHL Plus with Full Text **
                          ^
config/ebsco_dbs.rb:6:62: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'rzh' )  # CINAHL Plus with Full Text **
                                                             ^
config/ebsco_dbs.rb:7:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'cmedm') # Medline
    ^^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:7:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'cmedm') # Medline
    ^^^^^^^^^^
config/ebsco_dbs.rb:7:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'cmedm') # Medline
                    ^
config/ebsco_dbs.rb:7:40: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'cmedm') # Medline
                                       ^
config/ebsco_dbs.rb:8:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'ufh' )  # Communication & Mass Media Complete **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:8:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'ufh' )  # Communication & Mass Media Complete **
    ^^^^^^^^^^
config/ebsco_dbs.rb:8:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'ufh' )  # Communication & Mass Media Complete **
                    ^
config/ebsco_dbs.rb:8:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'ufh' )  # Communication & Mass Media Complete **
                          ^
config/ebsco_dbs.rb:8:71: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'ufh' )  # Communication & Mass Media Complete **
                                                                      ^
config/ebsco_dbs.rb:9:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'eoh' )  # EconLit with Full Text **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:9:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'eoh' )  # EconLit with Full Text **
    ^^^^^^^^^^
config/ebsco_dbs.rb:9:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'eoh' )  # EconLit with Full Text **
                    ^
config/ebsco_dbs.rb:9:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'eoh' )  # EconLit with Full Text **
                          ^
config/ebsco_dbs.rb:9:58: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'eoh' )  # EconLit with Full Text **
                                                         ^
config/ebsco_dbs.rb:10:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( '20h' )  # Educational Administration Abstracts **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:10:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( '20h' )  # Educational Administration Abstracts **
    ^^^^^^^^^^
config/ebsco_dbs.rb:10:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( '20h' )  # Educational Administration Abstracts **
                    ^
config/ebsco_dbs.rb:10:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( '20h' )  # Educational Administration Abstracts **
                          ^
config/ebsco_dbs.rb:10:72: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( '20h' )  # Educational Administration Abstracts **
                                                                       ^
config/ebsco_dbs.rb:11:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'eric')  # ERIC
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:11:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'eric')  # ERIC
    ^^^^^^^^^^
config/ebsco_dbs.rb:11:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'eric')  # ERIC
                    ^
config/ebsco_dbs.rb:11:37: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'eric')  # ERIC
                                    ^
config/ebsco_dbs.rb:12:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'flh' )  # Family & Society Studies Worldwide **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:12:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'flh' )  # Family & Society Studies Worldwide **
    ^^^^^^^^^^
config/ebsco_dbs.rb:12:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'flh' )  # Family & Society Studies Worldwide **
                    ^
config/ebsco_dbs.rb:12:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'flh' )  # Family & Society Studies Worldwide **
                          ^
config/ebsco_dbs.rb:12:70: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'flh' )  # Family & Society Studies Worldwide **
                                                                     ^
config/ebsco_dbs.rb:13:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'f3h' )  # Film & Television Literature Index with Full Text **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:13:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'f3h' )  # Film & Television Literature Index with Full Text **
    ^^^^^^^^^^
config/ebsco_dbs.rb:13:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'f3h' )  # Film & Television Literature Index with Full Text **
                    ^
config/ebsco_dbs.rb:13:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'f3h' )  # Film & Television Literature Index with Full Text **
                          ^
config/ebsco_dbs.rb:13:85: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'f3h' )  # Film & Television Literature Index with Full Text **
                                                                                    ^^
config/ebsco_dbs.rb:14:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'fmh' )  # Gender Studies Database **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:14:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'fmh' )  # Gender Studies Database **
    ^^^^^^^^^^
config/ebsco_dbs.rb:14:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'fmh' )  # Gender Studies Database **
                    ^
config/ebsco_dbs.rb:14:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'fmh' )  # Gender Studies Database **
                          ^
config/ebsco_dbs.rb:14:59: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'fmh' )  # Gender Studies Database **
                                                          ^
config/ebsco_dbs.rb:15:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'geh' )  # GeoRef **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:15:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'geh' )  # GeoRef **
    ^^^^^^^^^^
config/ebsco_dbs.rb:15:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'geh' )  # GeoRef **
                    ^
config/ebsco_dbs.rb:15:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'geh' )  # GeoRef **
                          ^
config/ebsco_dbs.rb:15:42: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'geh' )  # GeoRef **
                                         ^^^^
config/ebsco_dbs.rb:16:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( '8gh' )  # GreenFILE **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:16:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( '8gh' )  # GreenFILE **
    ^^^^^^^^^^
config/ebsco_dbs.rb:16:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( '8gh' )  # GreenFILE **
                    ^
config/ebsco_dbs.rb:16:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( '8gh' )  # GreenFILE **
                          ^
config/ebsco_dbs.rb:16:45: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( '8gh' )  # GreenFILE **
                                            ^
config/ebsco_dbs.rb:17:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'hch' )  # Health Source: Nursing/Academic Edition **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:17:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'hch' )  # Health Source: Nursing/Academic Edition **
    ^^^^^^^^^^
config/ebsco_dbs.rb:17:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'hch' )  # Health Source: Nursing/Academic Edition **
                    ^
config/ebsco_dbs.rb:17:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'hch' )  # Health Source: Nursing/Academic Edition **
                          ^
config/ebsco_dbs.rb:17:75: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'hch' )  # Health Source: Nursing/Academic Edition **
                                                                          ^
config/ebsco_dbs.rb:18:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'hia' )  # Historical Abstracts **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:18:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'hia' )  # Historical Abstracts **
    ^^^^^^^^^^
config/ebsco_dbs.rb:18:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'hia' )  # Historical Abstracts **
                    ^
config/ebsco_dbs.rb:18:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'hia' )  # Historical Abstracts **
                          ^
config/ebsco_dbs.rb:18:56: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'hia' )  # Historical Abstracts **
                                                       ^
config/ebsco_dbs.rb:19:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( '22h' )  # Human Resources Abstracts **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:19:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( '22h' )  # Human Resources Abstracts **
    ^^^^^^^^^^
config/ebsco_dbs.rb:19:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( '22h' )  # Human Resources Abstracts **
                    ^
config/ebsco_dbs.rb:19:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( '22h' )  # Human Resources Abstracts **
                          ^
config/ebsco_dbs.rb:19:61: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( '22h' )  # Human Resources Abstracts **
                                                            ^
config/ebsco_dbs.rb:20:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'hgh' )  # Humanities International Index **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:20:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'hgh' )  # Humanities International Index **
    ^^^^^^^^^^
config/ebsco_dbs.rb:20:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'hgh' )  # Humanities International Index **
                    ^
config/ebsco_dbs.rb:20:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'hgh' )  # Humanities International Index **
                          ^
config/ebsco_dbs.rb:20:66: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'hgh' )  # Humanities International Index **
                                                                 ^^
config/ebsco_dbs.rb:21:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'ijh' )  # International Political Science Abstracts **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:21:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'ijh' )  # International Political Science Abstracts **
    ^^^^^^^^^^
config/ebsco_dbs.rb:21:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'ijh' )  # International Political Science Abstracts **
                    ^
config/ebsco_dbs.rb:21:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'ijh' )  # International Political Science Abstracts **
                          ^
config/ebsco_dbs.rb:21:77: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'ijh' )  # International Political Science Abstracts **
                                                                            ^
config/ebsco_dbs.rb:22:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'lxh' )  # Library, Information Science & Technology Abstracts **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:22:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'lxh' )  # Library, Information Science & Technology Abstracts **
    ^^^^^^^^^^
config/ebsco_dbs.rb:22:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'lxh' )  # Library, Information Science & Technology Abstracts **
                    ^
config/ebsco_dbs.rb:22:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'lxh' )  # Library, Information Science & Technology Abstracts **
                          ^
config/ebsco_dbs.rb:22:87: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'lxh' )  # Library, Information Science & Technology Abstracts **
                                                                                      ^
config/ebsco_dbs.rb:23:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'f5h' )  # MasterFILE Premier **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:23:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'f5h' )  # MasterFILE Premier **
    ^^^^^^^^^^
config/ebsco_dbs.rb:23:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'f5h' )  # MasterFILE Premier **
                    ^
config/ebsco_dbs.rb:23:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'f5h' )  # MasterFILE Premier **
                          ^
config/ebsco_dbs.rb:23:54: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'f5h' )  # MasterFILE Premier **
                                                     ^
config/ebsco_dbs.rb:24:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'mth' )  # Military & Government Collection **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:24:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'mth' )  # Military & Government Collection **
    ^^^^^^^^^^
config/ebsco_dbs.rb:24:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'mth' )  # Military & Government Collection **
                    ^
config/ebsco_dbs.rb:24:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'mth' )  # Military & Government Collection **
                          ^
config/ebsco_dbs.rb:24:68: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'mth' )  # Military & Government Collection **
                                                                   ^
config/ebsco_dbs.rb:25:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'mzh' )  # MLA International Bibliography **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:25:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'mzh' )  # MLA International Bibliography **
    ^^^^^^^^^^
config/ebsco_dbs.rb:25:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'mzh' )  # MLA International Bibliography **
                    ^
config/ebsco_dbs.rb:25:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'mzh' )  # MLA International Bibliography **
                          ^
config/ebsco_dbs.rb:25:66: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'mzh' )  # MLA International Bibliography **
                                                                 ^
config/ebsco_dbs.rb:27:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'pdh' )  # PsycARTICLES **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:27:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'pdh' )  # PsycARTICLES **
    ^^^^^^^^^^
config/ebsco_dbs.rb:27:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'pdh' )  # PsycARTICLES **
                    ^
config/ebsco_dbs.rb:27:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'pdh' )  # PsycARTICLES **
                          ^
config/ebsco_dbs.rb:27:29: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    $ebsco_dbs.push( 'pdh' )  # PsycARTICLES **
                            ^
config/ebsco_dbs.rb:27:48: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'pdh' )  # PsycARTICLES **
                                               ^
config/ebsco_dbs.rb:28:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'psyh' )  # PsycINFO **
    ^^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:28:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'psyh' )  # PsycINFO **
    ^^^^^^^^^^
config/ebsco_dbs.rb:28:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'psyh' )  # PsycINFO **
                    ^
config/ebsco_dbs.rb:28:28: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'psyh' )  # PsycINFO **
                           ^
config/ebsco_dbs.rb:28:30: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    $ebsco_dbs.push( 'psyh' )  # PsycINFO **
                             ^
config/ebsco_dbs.rb:28:45: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'psyh' )  # PsycINFO **
                                            ^^^
config/ebsco_dbs.rb:29:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'rih' )  # RILM  Abstracts of Music Literature **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:29:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'rih' )  # RILM  Abstracts of Music Literature **
    ^^^^^^^^^^
config/ebsco_dbs.rb:29:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'rih' )  # RILM  Abstracts of Music Literature **
                    ^
config/ebsco_dbs.rb:29:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'rih' )  # RILM  Abstracts of Music Literature **
                          ^
config/ebsco_dbs.rb:29:71: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'rih' )  # RILM  Abstracts of Music Literature **
                                                                      ^
config/ebsco_dbs.rb:30:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'rph' )  # RIPM - Retrospective Index to Music Periodicals **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:30:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'rph' )  # RIPM - Retrospective Index to Music Periodicals **
    ^^^^^^^^^^
config/ebsco_dbs.rb:30:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'rph' )  # RIPM - Retrospective Index to Music Periodicals **
                    ^
config/ebsco_dbs.rb:30:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'rph' )  # RIPM - Retrospective Index to Music Periodicals **
                          ^
config/ebsco_dbs.rb:30:83: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'rph' )  # RIPM - Retrospective Index to Music Periodicals **
                                                                                  ^
config/ebsco_dbs.rb:31:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 's3h' )  # SPORTDiscus with Full Text **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:31:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 's3h' )  # SPORTDiscus with Full Text **
    ^^^^^^^^^^
config/ebsco_dbs.rb:31:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 's3h' )  # SPORTDiscus with Full Text **
                    ^
config/ebsco_dbs.rb:31:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 's3h' )  # SPORTDiscus with Full Text **
                          ^
config/ebsco_dbs.rb:31:62: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 's3h' )  # SPORTDiscus with Full Text **
                                                             ^^^^
config/ebsco_dbs.rb:32:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'trh' )  # Teacher Reference Center **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:32:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'trh' )  # Teacher Reference Center **
    ^^^^^^^^^^
config/ebsco_dbs.rb:32:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'trh' )  # Teacher Reference Center **
                    ^
config/ebsco_dbs.rb:32:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'trh' )  # Teacher Reference Center **
                          ^
config/ebsco_dbs.rb:32:60: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'trh' )  # Teacher Reference Center **
                                                           ^
config/ebsco_dbs.rb:33:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'mah' )  # Music Index **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:33:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'mah' )  # Music Index **
    ^^^^^^^^^^
config/ebsco_dbs.rb:33:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'mah' )  # Music Index **
                    ^
config/ebsco_dbs.rb:33:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'mah' )  # Music Index **
                          ^
config/ebsco_dbs.rb:33:47: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'mah' )  # Music Index **
                                              ^
config/ebsco_dbs.rb:34:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'bsu' )  # Business Source Ultimate **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:34:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'bsu' )  # Business Source Ultimate **
    ^^^^^^^^^^
config/ebsco_dbs.rb:34:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'bsu' )  # Business Source Ultimate **
                    ^
config/ebsco_dbs.rb:34:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'bsu' )  # Business Source Ultimate **
                          ^
config/ebsco_dbs.rb:35:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'i3h' )  # Criminal Justice Abstracts with full text **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:35:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'i3h' )  # Criminal Justice Abstracts with full text **
    ^^^^^^^^^^
config/ebsco_dbs.rb:35:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'i3h' )  # Criminal Justice Abstracts with full text **
                    ^
config/ebsco_dbs.rb:35:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'i3h' )  # Criminal Justice Abstracts with full text **
                          ^
config/ebsco_dbs.rb:35:77: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'i3h' )  # Criminal Justice Abstracts with full text **
                                                                            ^^
config/ebsco_dbs.rb:36:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'lft' )  # Index to Legal Periodicals & Books Full Text (H.W. Wilson) **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:36:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'lft' )  # Index to Legal Periodicals & Books Full Text (H.W. Wilson) **
    ^^^^^^^^^^
config/ebsco_dbs.rb:36:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'lft' )  # Index to Legal Periodicals & Books Full Text (H.W. Wilson) **
                    ^
config/ebsco_dbs.rb:36:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'lft' )  # Index to Legal Periodicals & Books Full Text (H.W. Wilson) **
                          ^
config/ebsco_dbs.rb:36:94: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'lft' )  # Index to Legal Periodicals & Books Full Text (H.W. Wilson) **
                                                                                             ^
config/ebsco_dbs.rb:37:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'asf' )  # Applied Science & Technology Full Text (H.W. Wilson) **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:37:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'asf' )  # Applied Science & Technology Full Text (H.W. Wilson) **
    ^^^^^^^^^^
config/ebsco_dbs.rb:37:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'asf' )  # Applied Science & Technology Full Text (H.W. Wilson) **
                    ^
config/ebsco_dbs.rb:37:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'asf' )  # Applied Science & Technology Full Text (H.W. Wilson) **
                          ^
config/ebsco_dbs.rb:37:88: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'asf' )  # Applied Science & Technology Full Text (H.W. Wilson) **
                                                                                       ^^
config/ebsco_dbs.rb:38:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'hsr' )  # Humanities & Social Sciences Index Retrospective: 1907-1984 (H.W. Wilson) **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:38:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'hsr' )  # Humanities & Social Sciences Index Retrospective: 1907-1984 (H.W. Wilson) **
    ^^^^^^^^^^
config/ebsco_dbs.rb:38:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'hsr' )  # Humanities & Social Sciences Index Retrospective: 1907-1984 (H.W. Wilson) **
                    ^
config/ebsco_dbs.rb:38:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'hsr' )  # Humanities & Social Sciences Index Retrospective: 1907-1984 (H.W. Wilson) **
                          ^
config/ebsco_dbs.rb:38:109: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'hsr' )  # Humanities & Social Sciences Index Retrospective: 1907-1984 (H.W. Wilson) **
                                                                                                            ^
config/ebsco_dbs.rb:39:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'rgr' )  # Readers' Guide Retrospective: 1890-1982 (H.W. Wilson) **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:39:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'rgr' )  # Readers' Guide Retrospective: 1890-1982 (H.W. Wilson) **
    ^^^^^^^^^^
config/ebsco_dbs.rb:39:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'rgr' )  # Readers' Guide Retrospective: 1890-1982 (H.W. Wilson) **
                    ^
config/ebsco_dbs.rb:39:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'rgr' )  # Readers' Guide Retrospective: 1890-1982 (H.W. Wilson) **
                          ^
config/ebsco_dbs.rb:39:89: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'rgr' )  # Readers' Guide Retrospective: 1890-1982 (H.W. Wilson) **
                                                                                        ^
config/ebsco_dbs.rb:42:47: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # that we currently do not have access to.
                                              ^
config/ebsco_dbs.rb:43:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #$ebsco_dbs.push( 'ofm' )  # Wilson OmniFile
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:43:49: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    #$ebsco_dbs.push( 'ofm' )  # Wilson OmniFile
                                                ^
config/ebsco_dbs.rb:45:1: C: Layout/EmptyLines: Extra blank line detected.
config/ebsco_dbs.rb:46:65: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # for reasons we don't know, we lost access to Ed Full Text.
                                                                ^
config/ebsco_dbs.rb:48:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #$ebsco_dbs.push( 'eft' )  # Education Full Text (H.W. Wilson) **
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:48:70: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    #$ebsco_dbs.push( 'eft' )  # Education Full Text (H.W. Wilson) **
                                                                     ^
config/ebsco_dbs.rb:49:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'air' )  # Art Index Retrospective (H.W. Wilson) **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:49:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'air' )  # Art Index Retrospective (H.W. Wilson) **
    ^^^^^^^^^^
config/ebsco_dbs.rb:49:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'air' )  # Art Index Retrospective (H.W. Wilson) **
                    ^
config/ebsco_dbs.rb:49:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'air' )  # Art Index Retrospective (H.W. Wilson) **
                          ^
config/ebsco_dbs.rb:49:73: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'air' )  # Art Index Retrospective (H.W. Wilson) **
                                                                        ^
config/ebsco_dbs.rb:50:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'aft' )  # Art Full Text (H.W. Wilson) **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:50:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'aft' )  # Art Full Text (H.W. Wilson) **
    ^^^^^^^^^^
config/ebsco_dbs.rb:50:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'aft' )  # Art Full Text (H.W. Wilson) **
                    ^
config/ebsco_dbs.rb:50:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'aft' )  # Art Full Text (H.W. Wilson) **
                          ^
config/ebsco_dbs.rb:50:63: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'aft' )  # Art Full Text (H.W. Wilson) **
                                                              ^
config/ebsco_dbs.rb:51:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'ofm' )  # OmniFile Full Text Mega (H.W. Wilson) **
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:51:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'ofm' )  # OmniFile Full Text Mega (H.W. Wilson) **
    ^^^^^^^^^^
config/ebsco_dbs.rb:51:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'ofm' )  # OmniFile Full Text Mega (H.W. Wilson) **
                    ^
config/ebsco_dbs.rb:51:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'ofm' )  # OmniFile Full Text Mega (H.W. Wilson) **
                          ^
config/ebsco_dbs.rb:51:73: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    $ebsco_dbs.push( 'ofm' )  # OmniFile Full Text Mega (H.W. Wilson) **
                                                                        ^
config/ebsco_dbs.rb:52:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/ebsco_dbs.rb:56:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #$ebsco_dbs.push( 'rgm' )  # Readers' Guide Full Text Mega (H.W. Wilson)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:56:77: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    #$ebsco_dbs.push( 'rgm' )  # Readers' Guide Full Text Mega (H.W. Wilson)
                                                                            ^^
config/ebsco_dbs.rb:57:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #$ebsco_dbs.push( 'ssf' )  # Social Sciences Full Text (H.W. Wilson) **
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:57:76: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    #$ebsco_dbs.push( 'ssf' )  # Social Sciences Full Text (H.W. Wilson) **
                                                                           ^
config/ebsco_dbs.rb:58:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #$ebsco_dbs.push( 'hft' )  # Humanities Full Text (H.W. Wilson) **
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:58:71: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    #$ebsco_dbs.push( 'hft' )  # Humanities Full Text (H.W. Wilson) **
                                                                      ^
config/ebsco_dbs.rb:59:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #$ebsco_dbs.push( 'gft' )  # General Science Full Text (H.W. Wilson) **
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:59:76: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    #$ebsco_dbs.push( 'gft' )  # General Science Full Text (H.W. Wilson) **
                                                                           ^
config/ebsco_dbs.rb:60:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #$ebsco_dbs.push( 'bft' )  # Business Abstracts with Full Text (H.W. Wilson) **
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:60:84: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    #$ebsco_dbs.push( 'bft' )  # Business Abstracts with Full Text (H.W. Wilson) **
                                                                                   ^
config/ebsco_dbs.rb:63:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    $ebsco_dbs.push( 'tsh' )   # International Security & Counter Terrorism Reference Center
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:63:5: C: Style/GlobalVars: Do not introduce global variables.
    $ebsco_dbs.push( 'tsh' )   # International Security & Counter Terrorism Reference Center
    ^^^^^^^^^^
config/ebsco_dbs.rb:63:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'tsh' )   # International Security & Counter Terrorism Reference Center
                    ^
config/ebsco_dbs.rb:63:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    $ebsco_dbs.push( 'tsh' )   # International Security & Counter Terrorism Reference Center
                          ^
config/ebsco_dbs.rb:63:29: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    $ebsco_dbs.push( 'tsh' )   # International Security & Counter Terrorism Reference Center
                            ^^
config/ebsco_dbs.rb:65:5: C: Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 0).
    #$ebsco_dbs.push( 'ieh' )   # Inspec Archive - Science Abstracts 1898-1968
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:65:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #$ebsco_dbs.push( 'ieh' )   # Inspec Archive - Science Abstracts 1898-1968
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/ebsco_dbs.rb:66:1: C: Layout/TrailingEmptyLines: 2 trailing blank lines detected.
config/environment.rb:2:14: C: Style/ExpandPathArguments: Use expand_path('application', __dir__) instead of expand_path('../application', __FILE__).
require File.expand_path('../application', __FILE__)
             ^^^^^^^^^^^
config/environments/demo.rb:4:1: C: Layout/EmptyLines: Extra blank line detected.
config/environments/demo.rb:9:1: C: Layout/EmptyLines: Extra blank line detected.
config/environments/demo.rb:69:3: C: Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 1).
  # config.active_record.auto_explain_threshold_in_seconds = 0.5
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/demo.rb:71:1: C: Layout/IndentationStyle: Tab detected in indentation.
	# Google Analytis tracking code for MSEL account, blacklight.library.jhu.edu
^
config/environments/demo.rb:71:2: C: Layout/CommentIndentation: Incorrect indentation detected (column 1 instead of 2).
	# Google Analytis tracking code for MSEL account, blacklight.library.jhu.edu
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/demo.rb:72:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  config.tracker = "UA-7867593-5"
                   ^^^^^^^^^^^^^^
config/environments/demo.rb:73:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  ENV["GOOGLE_ANALYTICS"] = config.tracker
      ^^^^^^^^^^^^^^^^^^
config/environments/demo.rb:74:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
config/environments/development.rb:9:27: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Do not compress assets
                          ^^
config/environments/development.rb:10:33: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  config.assets.compress = false
                                ^
config/environments/development.rb:11:39: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  config.assets.css_compressor = :sass
                                      ^
config/environments/development.rb:12:26: C: Style/DoubleNegation: Avoid the use of double negation (!!).
  config.assets.digest = !!ENV['DIGEST_ASSETS']
                         ^
config/environments/development.rb:14:44: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Expands the lines which load the assets
                                           ^^
config/environments/development.rb:15:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  config.assets.debug = true
                            ^^
config/environments/development.rb:32:1: C: Layout/IndentationStyle: Tab detected in indentation.
	# Google Analytis tracking code farooqsadiq.com
^
config/environments/development.rb:33:1: C: Layout/IndentationStyle: Tab detected in indentation.
	# TODO how do you us config in layouts?
^
config/environments/development.rb:33:41: C: Layout/TrailingWhitespace: Trailing whitespace detected.
	# TODO how do you us config in layouts?
                                        ^
config/environments/development.rb:34:1: C: Layout/IndentationStyle: Tab detected in indentation.
	# As a workaround, I am using an ENV
^
config/environments/development.rb:34:2: C: Layout/CommentIndentation: Incorrect indentation detected (column 1 instead of 2).
	# As a workaround, I am using an ENV
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:34:38: C: Layout/TrailingWhitespace: Trailing whitespace detected.
	# As a workaround, I am using an ENV
                                     ^^
config/environments/development.rb:35:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  config.tracker = "UA-1581694-2"
                   ^^^^^^^^^^^^^^
config/environments/development.rb:36:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  ENV["GOOGLE_ANALYTICS"] = config.tracker
      ^^^^^^^^^^^^^^^^^^
config/environments/development.rb:38:1: C: Layout/EmptyLines: Extra blank line detected.
config/environments/development.rb:39:1: C: Layout/EmptyLines: Extra blank line detected.
config/environments/development.rb:53:1: C: Layout/TrailingEmptyLines: 1 trailing blank lines detected.
config/environments/production.rb:4:1: C: Layout/EmptyLines: Extra blank line detected.
config/environments/production.rb:67:3: C: Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 1).
  # config.active_record.auto_explain_threshold_in_seconds = 0.5
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:69:1: C: Layout/IndentationStyle: Tab detected in indentation.
	# Google Analytis tracking code for MSEL account, catalyst.library.jhu.edu
^
config/environments/production.rb:69:2: C: Layout/CommentIndentation: Incorrect indentation detected (column 1 instead of 2).
	# Google Analytis tracking code for MSEL account, catalyst.library.jhu.edu
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:70:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  config.tracker = "UA-7867593-9"
                   ^^^^^^^^^^^^^^
config/environments/production.rb:71:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  ENV["GOOGLE_ANALYTICS"] = config.tracker
      ^^^^^^^^^^^^^^^^^^
config/environments/production.rb:73:1: C: Layout/EmptyLines: Extra blank line detected.
config/environments/production.rb:73:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
config/environments/staging.rb:4:1: C: Layout/EmptyLines: Extra blank line detected.
config/environments/test.rb:16:79: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Configure static asset server for tests with Cache-Control for performance
                                                                              ^^
config/environments/test.rb:17:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  config.serve_static_files = true
                                  ^^
config/environments/test.rb:18:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  config.static_cache_control = "public, max-age=3600"
                                ^^^^^^^^^^^^^^^^^^^^^^
config/environments/test.rb:18:55: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  config.static_cache_control = "public, max-age=3600"
                                                      ^^
config/environments/test.rb:19:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/environments/test.rb:20:91: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Allow pass debug_assets=true as a query parameter to load pages with unpackaged assets
                                                                                          ^^
config/environments/test.rb:21:39: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  config.assets.allow_debugging = true
                                      ^
config/environments/test.rb:27:52: C: Layout/ExtraSpacing: Unnecessary spacing detected.
  config.action_controller.allow_forgery_protection    = false
                                                   ^^^
config/environments/test.rb:27:56: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
  config.action_controller.allow_forgery_protection    = false
                                                       ^
config/environments/test.rb:42:1: C: Layout/IndentationStyle: Tab detected in indentation.
	# Google Analytis tracking code for MSEL account, blacklight.library.jhu.edu
^
config/environments/test.rb:42:2: C: Layout/CommentIndentation: Incorrect indentation detected (column 1 instead of 2).
	# Google Analytis tracking code for MSEL account, blacklight.library.jhu.edu
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/test.rb:43:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  config.tracker = "UA-7867593-5"
                   ^^^^^^^^^^^^^^
config/environments/test.rb:44:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  ENV["GOOGLE_ANALYTICS"] = config.tracker
      ^^^^^^^^^^^^^^^^^^
config/environments/test.rb:46:1: C: Layout/EmptyLines: Extra blank line detected.
config/environments/test.rb:46:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
config/initializers/assets.rb:6:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( favicon.ico )
                                              ^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:6:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( favicon.ico )
                                                 ^
config/initializers/assets.rb:6:62: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( favicon.ico )
                                                             ^
config/initializers/assets.rb:7:42: C: Rails/FilePath: Please use Rails.root.join('path/to') instead.
Rails.application.config.assets.paths << Rails.root.join('app', 'assets', 'fonts')
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:6:32: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# being postponed indefinitely.
                               ^
config/initializers/bento_search.rb:7:1: C: Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 3).
# BentoSearch.register_engine("library_web") do |conf|
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:9:5: C: Layout/TrailingWhitespace: Trailing whitespace detected.
   #
    ^
config/initializers/bento_search.rb:12:5: C: Layout/TrailingWhitespace: Trailing whitespace detected.
   #
    ^
config/initializers/bento_search.rb:13:24: C: Layout/TrailingWhitespace: Trailing whitespace detected.
   # # allow ajax load.
                       ^
config/initializers/bento_search.rb:14:40: C: Layout/TrailingWhitespace: Trailing whitespace detected.
   # conf.allow_routable_results = true
                                       ^^^
config/initializers/bento_search.rb:15:5: C: Layout/TrailingWhitespace: Trailing whitespace detected.
   #
    ^
config/initializers/bento_search.rb:16:4: C: Layout/CommentIndentation: Incorrect indentation detected (column 3 instead of 5).
   # conf.for_display do |display|
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:18:6: C: Layout/CommentIndentation: Incorrect indentation detected (column 5 instead of 3).
     # display.thing_name = "website"
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:20:4: C: Layout/CommentIndentation: Incorrect indentation detected (column 3 instead of 0).
   #
   ^^
config/initializers/bento_search.rb:20:5: C: Layout/TrailingWhitespace: Trailing whitespace detected.
   #
    ^
config/initializers/bento_search.rb:23:1: C: Layout/EmptyLines: Extra blank line detected.
config/initializers/bento_search.rb:24:73: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# not currently using worldcat, if we were here's a way to configure it.
                                                                        ^
config/initializers/bento_search.rb:25:1: C: Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 2).
# BentoSearch.register_engine("worldcat") do |conf|
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:26:3: C: Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 0).
  # conf.engine = "BentoSearch::WorldcatSruDcEngine"
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:27:1: C: Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 2).
#
^^
config/initializers/bento_search.rb:27:2: C: Layout/TrailingWhitespace: Trailing whitespace detected.
#
 ^
config/initializers/bento_search.rb:28:4: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  #
   ^
config/initializers/bento_search.rb:30:3: C: Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 3).
  #
  ^^
config/initializers/bento_search.rb:30:4: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  #
   ^
config/initializers/bento_search.rb:31:4: C: Layout/CommentIndentation: Incorrect indentation detected (column 3 instead of 2).
   # # allow ajax load.
   ^^^^^^^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:31:24: C: Layout/TrailingWhitespace: Trailing whitespace detected.
   # # allow ajax load.
                       ^
config/initializers/bento_search.rb:33:4: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  #
   ^
config/initializers/bento_search.rb:34:3: C: Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 4).
  # conf.for_display do |display|
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:35:60: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # display.error_partial = "multi_search/worldcat_error"
                                                           ^^^^
config/initializers/bento_search.rb:37:5: C: Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 2).
    # display.thing_name = "worldcat"
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:38:3: C: Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 0).
  # end
  ^^^^^
config/initializers/bento_search.rb:39:1: C: Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 3).
#
^^
config/initializers/bento_search.rb:39:2: C: Layout/TrailingWhitespace: Trailing whitespace detected.
#
 ^
config/initializers/bento_search.rb:41:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
   # # as extra link.
                     ^^^^
config/initializers/bento_search.rb:43:121: C: Layout/LineLength: Line is too long. [121/120]
   # BentoSearch::OpenurlAddOtherLink[:base_url => "http://findit.library.jhu.edu/resolve", :link_name => "Find It @ JH"]
                                                                                                                        ^
config/initializers/bento_search.rb:44:4: C: Layout/CommentIndentation: Incorrect indentation detected (column 3 instead of 0).
   # ]
   ^^^^^
config/initializers/bento_search.rb:44:7: C: Layout/TrailingWhitespace: Trailing whitespace detected.
   # ]
      ^^
config/initializers/bento_search.rb:50:33: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# can still play around with it.
                                ^
config/initializers/bento_search.rb:54:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
config/initializers/bento_search.rb:57:3: C: Metrics/MethodLength: Method has too many lines. [12/10]
  def other_links ...
  ^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:59:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :label => "Find It @ JH",
      ^^^^^^^^^
config/initializers/bento_search.rb:59:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :label => "Find It @ JH",
                ^^^^^^^^^^^^^^
config/initializers/bento_search.rb:60:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :url => "http://findit.library.jhu.edu/resolve?#{self.to_openurl_kev}&rfr_id=#{CGI.escape 'http://catalyst.library.jhu.edu/search/google_books'}"
      ^^^^^^^
config/initializers/bento_search.rb:60:56: C: Style/RedundantSelf: Redundant self detected.
      :url => "http://findit.library.jhu.edu/resolve?#{self.to_openurl_kev}&rfr_id=#{CGI.escape 'http://catalyst.library.jhu.edu/search/google_books'}"
                                                       ^^^^^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:60:150: C: Layout/LineLength: Line is too long. [151/120]
      :url => "http://findit.library.jhu.edu/resolve?#{self.to_openurl_kev}&rfr_id=#{CGI.escape 'http://catalyst.library.jhu.edu/search/google_books'}"
                                                                                                                                                     ^^
config/initializers/bento_search.rb:62:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/initializers/bento_search.rb:63:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    label = "Google Books"
            ^^^^^^^^^^^^^^
config/initializers/bento_search.rb:64:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if custom_data[:viewability] == "ALL_PAGES"
                                    ^^^^^^^^^^^
config/initializers/bento_search.rb:65:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      label += " (Full view)"
               ^^^^^^^^^^^^^^
config/initializers/bento_search.rb:66:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    elsif custom_data[:viewability] == "PARTIAL"
                                       ^^^^^^^^^
config/initializers/bento_search.rb:67:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      label += " (Preview)"
               ^^^^^^^^^^^^
config/initializers/bento_search.rb:69:41: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    google_link = BentoSearch::Link.new(:url => _base.link, :label => label)
                                        ^^^^^^^
config/initializers/bento_search.rb:69:61: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    google_link = BentoSearch::Link.new(:url => _base.link, :label => label)
                                                            ^^^^^^^^^
config/initializers/bento_search.rb:69:77: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    google_link = BentoSearch::Link.new(:url => _base.link, :label => label)
                                                                            ^
config/initializers/bento_search.rb:70:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/initializers/bento_search.rb:71:40: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    super + [openurl_link, google_link]
                                       ^
config/initializers/bento_search.rb:73:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/initializers/bento_search.rb:75:11: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  def link
          ^
config/initializers/bento_search.rb:76:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if custom_data[:viewability] == "ALL_PAGES"
                                    ^^^^^^^^^^^
config/initializers/bento_search.rb:79:48: C: Style/RedundantSelf: Redundant self detected.
      "http://findit.library.jhu.edu/resolve?#{self.to_openurl.kev}"
                                               ^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:83:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
BentoSearch.register_engine("google_books") do |conf|
                            ^^^^^^^^^^^^^^
config/initializers/bento_search.rb:84:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  conf.engine = "BentoSearch::GoogleBooksEngine"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:85:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/initializers/bento_search.rb:86:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  conf.api_key = "AIzaSyAfmJ0nYQKLUTME6A8dv9FbJtCAhj2Bz18"
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:87:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/initializers/bento_search.rb:89:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/initializers/bento_search.rb:91:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    display.error_partial = "multi_search/gbs_error"
                            ^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:92:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    display.search_type_label = "Google Books"
                                ^^^^^^^^^^^^^^
config/initializers/bento_search.rb:93:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    display.thing_name "google books"
                       ^^^^^^^^^^^^^^
config/initializers/bento_search.rb:94:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/initializers/bento_search.rb:95:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    display.decorator = "GoogleBooksDecorator"
                        ^^^^^^^^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:96:6: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  end
     ^^^^^
config/initializers/bento_search.rb:99:1: C: Layout/EmptyLines: Extra blank line detected.
config/initializers/bento_search.rb:101:83: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# might all be busy waiting on EBSCO significantly harming Catalyst response time.
                                                                                  ^
config/initializers/bento_search.rb:102:73: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# But EBSCO seems, at least intermittently, to have gotten a lot slower,
                                                                        ^
config/initializers/bento_search.rb:103:63: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# and we were getting too many timeouts with 6 second timeout.
                                                              ^
config/initializers/bento_search.rb:104:31: C: Naming/ConstantName: Use SCREAMING_SNAKE_CASE for constants.
BentoSearch::EbscoHostEngine::HttpTimeout = 9
                              ^^^^^^^^^^^
config/initializers/bento_search.rb:106:9: C: Rails/FilePath: Please use Rails.root.join('path/to') instead.
require "#{Rails.root}/config/ebsco_dbs.rb"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:107:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
BentoSearch.register_engine("articles") do |conf|
                            ^^^^^^^^^^
config/initializers/bento_search.rb:107:50: C: Layout/TrailingWhitespace: Trailing whitespace detected.
BentoSearch.register_engine("articles") do |conf|
                                                 ^^
config/initializers/bento_search.rb:108:14: C: Layout/ExtraSpacing: Unnecessary spacing detected.
  conf.engine       = "BentoSearch::EbscoHostEngine"
             ^^^^^^
config/initializers/bento_search.rb:108:21: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
  conf.engine       = "BentoSearch::EbscoHostEngine"
                    ^
config/initializers/bento_search.rb:108:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  conf.engine       = "BentoSearch::EbscoHostEngine"
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:109:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/initializers/bento_search.rb:112:29: C: Style/GlobalVars: Do not introduce global variables.
  conf.databases          = $ebsco_dbs
                            ^^^^^^^^^^
config/initializers/bento_search.rb:113:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/initializers/bento_search.rb:115:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    display.error_partial = "multi_search/articles_error"
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:116:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/initializers/bento_search.rb:117:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    display.sidebar_partial = "ebscohost_sidebar"
                              ^^^^^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:118:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/initializers/bento_search.rb:119:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    display.search_type_label = "Articles"
                                ^^^^^^^^^^
config/initializers/bento_search.rb:119:43: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    display.search_type_label = "Articles"
                                          ^^^
config/initializers/bento_search.rb:120:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/initializers/bento_search.rb:121:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    display.thing_name = "article"
                         ^^^^^^^^^
config/initializers/bento_search.rb:122:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/initializers/bento_search.rb:124:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    display.decorator = "BentoArticleDecorator"
                        ^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/bento_search.rb:126:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
config/initializers/bento_search.rb:128:1: C: Layout/TrailingEmptyLines: 1 trailing blank lines detected.
config/initializers/blacklight_advanced_search.rb:2:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/initializers/blacklight_advanced_search.rb:8:62: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # a sidebar, sidebar will end up beneath, what we want.
                                                             ^
config/initializers/blacklight_advanced_search.rb:9:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @doc_classes = "wide_right_sidebar"
                     ^^^^^^^^^^^^^^^^^^^^
config/initializers/blacklight_advanced_search.rb:11:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/initializers/blacklight_advanced_search.rb:13:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/initializers/blacklight_advanced_search.rb:15:31: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
    unless AdvancedController.kind_of? AdvancedControllerOverrides
                              ^^^^^^^^
config/initializers/blacklight_advanced_search.rb:16:7: C: Layout/LeadingCommentSpace: Missing space after #.
      #AdvancedController.send(:include, AdvancedControllerOverrides)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/blacklight_advanced_search.rb:17:7: C: Layout/LeadingCommentSpace: Missing space after #.
      #AdvancedController.before_filter(:wide_right_sidebar_layout, :only => :index)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/blacklight_advanced_search.rb:18:7: C: Layout/LeadingCommentSpace: Missing space after #.
      #AdvancedController.before_filter(:remove_advanced_javascript, :only => :index)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/blacklight_advanced_search.rb:22:1: C: Layout/EmptyLines: Extra blank line detected.
config/initializers/borrow_direct_initializer.rb:2:3: C: Layout/IndentationWidth: Use 2 (not -31) spaces for indentation.
  "q24P6iV7p5m2OhRjs10ldyY7WPhRV4235R/ibWxenTb6YUJr8yg="
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/borrow_direct_initializer.rb:2:3: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "q24P6iV7p5m2OhRjs10ldyY7WPhRV4235R/ibWxenTb6YUJr8yg="
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/borrow_direct_initializer.rb:3:1: C: Layout/ElseAlignment: Align else with if.
else
^^^^
config/initializers/borrow_direct_initializer.rb:4:3: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "JiDY1L7WIqOBMwNj+d1saGLgFN9IQBiS26LNFf6PfEsYEps0qs8="
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/borrow_direct_initializer.rb:5:1: W: Layout/EndAlignment: end at 5, 0 is not aligned with if at 1, 33.
end
^^^
config/initializers/disable_hip.rb:7:1: C: Layout/EmptyLines: Extra blank line detected.
config/initializers/disable_hip.rb:8:44: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# Recommended, set a custom outage message.
                                           ^
config/initializers/disable_hip.rb:9:41: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
JHConfig.params[:disable_hip_message] = "Sorry, patron account features are temporarily unavailable for maintenance. Full service is expected back by late afternoon Friday, June 7th. Sorry for the inconvenience."
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/disable_hip.rb:9:121: C: Layout/LineLength: Line is too long. [212/120]
JHConfig.params[:disable_hip_message] = "Sorry, patron account features are temporarily unavailable for maintenance. Full service is expected back by late afternoon Friday, June 7th. Sorry for the inconvenience."
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/formats.rb:4:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Date::DATE_FORMATS[:due_date] = "%b %e %Y"
                                ^^^^^^^^^^
config/initializers/formats.rb:6:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Time::DATE_FORMATS[:due_date] = "%b %e %Y %I:%M %p"
                                ^^^^^^^^^^^^^^^^^^^
config/initializers/google_scholar.rb:3:41: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
JHConfig.params[:google_scholar_inst] = "4855597776033322861"
                                        ^^^^^^^^^^^^^^^^^^^^^
config/initializers/google_scholar.rb:3:62: C: Layout/TrailingWhitespace: Trailing whitespace detected.
JHConfig.params[:google_scholar_inst] = "4855597776033322861"
                                                             ^
config/initializers/kaminari_config.rb:2:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
config/initializers/kaminari_config.rb:4:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
config/initializers/load_config.rb:1:13: C: Security/YAMLLoad: Prefer using YAML.safe_load over YAML.load.
yaml = YAML.load(ERB.new(File.read(Rails.root.join('config/config.yml'))).result)
            ^^^^
config/initializers/load_config.rb:3:53: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# env-specific if available, otherwise default hash.
                                                    ^
config/initializers/load_config.rb:4:61: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# yaml file itself should merge in defaults to env-specific.
                                                            ^
config/initializers/load_config.rb:5:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
APP_CONFIG = yaml[Rails.env] || yaml["default"]
                                     ^^^^^^^^^
config/initializers/load_config.rb:5:48: C: Layout/TrailingEmptyLines: Final newline missing.
APP_CONFIG = yaml[Rails.env] || yaml["default"]

config/initializers/logging.rb:1:1: C: Layout/LeadingCommentSpace: Missing space after #.
#require 'formatted_rails_logger'
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/logging.rb:3:1: C: Layout/EmptyLines: Extra blank line detected.
config/initializers/logging.rb:4:1: C: Layout/EmptyLines: Extra blank line detected.
config/initializers/logging.rb:5:1: C: Layout/EmptyLines: Extra blank line detected.
config/initializers/logging.rb:7:46: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# there are so many of them in the logs, ugh.
                                             ^
config/initializers/logging.rb:10:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    class LogSubscriber
^^^^
config/initializers/logging.rb:11:5: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
       def render_template(event)
    ^^^
config/initializers/logging.rb:12:8: C: Layout/IndentationWidth: Use 2 (not 5) spaces for indentation.
            message = "Rendered #{from_rails_root(event.payload[:identifier])}"
       ^^^^^
config/initializers/logging.rb:14:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            message << (" (%.1fms)" % event.duration)
                        ^^^^^^^^^^^
config/initializers/logging.rb:14:28: C: Style/FormatStringToken: Prefer annotated tokens (like %<foo>s) over unannotated tokens (like %s).
            message << (" (%.1fms)" % event.duration)
                           ^^^^
config/initializers/logging.rb:14:37: C: Style/FormatString: Favor format over String#%.
            message << (" (%.1fms)" % event.duration)
                                    ^
config/initializers/logging.rb:17:5: C: Layout/IndentationWidth: Use 2 (not 6) spaces for indentation.
          alias :render_partial :render_template
    ^^^^^^
config/initializers/logging.rb:17:11: C: Layout/IndentationConsistency: Inconsistent indentation detected.
          alias :render_partial :render_template
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/logging.rb:17:17: C: Style/Alias: Use alias render_partial render_template instead of alias :render_partial :render_template.
          alias :render_partial :render_template
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/logging.rb:18:5: C: Layout/IndentationWidth: Use 2 (not 6) spaces for indentation.
          alias :render_collection :render_template
    ^^^^^^
config/initializers/logging.rb:18:11: C: Layout/IndentationConsistency: Inconsistent indentation detected.
          alias :render_collection :render_template
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/logging.rb:18:17: C: Style/Alias: Use alias render_collection render_template instead of alias :render_collection :render_template.
          alias :render_collection :render_template
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/logging.rb:19:6: W: Layout/EndAlignment: end at 19, 5 is not aligned with class at 10, 4.
     end
     ^^^
config/initializers/logging.rb:20:3: W: Layout/EndAlignment: end at 20, 2 is not aligned with module at 9, 0.
  end
  ^^^
config/initializers/logging.rb:21:1: C: Layout/TrailingEmptyLines: 1 trailing blank lines detected.
config/initializers/marc.rb:4:1: C: Layout/TrailingEmptyLines: 1 trailing blank lines detected.
config/initializers/marc_display_localize.rb:3:48: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# local URLs not in the 856 for shared records.
                                               ^
config/initializers/marc_display_localize.rb:4:91: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
links_config = MarcDisplay.default_presenter_config_list.find { |hash| hash[:id] == :links}
                                                                                          ^
config/initializers/marc_display_localize.rb:5:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
links_config[:source] << "956uzy3"
                         ^^^^^^^^^
config/initializers/marc_display_localize.rb:9:52: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
MarcDisplay.default_presenter_config_list.find_all {|h| [:contents, :summary].include?(h[:id])}.each {|h| h[:display_on_empty] = :hidden}
                                                   ^^
config/initializers/marc_display_localize.rb:9:57: C: Style/SymbolArray: Use %i or %I for an array of symbols.
MarcDisplay.default_presenter_config_list.find_all {|h| [:contents, :summary].include?(h[:id])}.each {|h| h[:display_on_empty] = :hidden}
                                                        ^^^^^^^^^^^^^^^^^^^^^
config/initializers/marc_display_localize.rb:9:95: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
MarcDisplay.default_presenter_config_list.find_all {|h| [:contents, :summary].include?(h[:id])}.each {|h| h[:display_on_empty] = :hidden}
                                                                                              ^
config/initializers/marc_display_localize.rb:9:102: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
MarcDisplay.default_presenter_config_list.find_all {|h| [:contents, :summary].include?(h[:id])}.each {|h| h[:display_on_empty] = :hidden}
                                                                                                     ^^
config/initializers/marc_display_localize.rb:9:121: C: Layout/LineLength: Line is too long. [137/120]
MarcDisplay.default_presenter_config_list.find_all {|h| [:contents, :summary].include?(h[:id])}.each {|h| h[:display_on_empty] = :hidden}
                                                                                                                        ^^^^^^^^^^^^^^^^^
config/initializers/marc_display_localize.rb:9:137: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
MarcDisplay.default_presenter_config_list.find_all {|h| [:contents, :summary].include?(h[:id])}.each {|h| h[:display_on_empty] = :hidden}
                                                                                                                                        ^
config/initializers/marc_display_localize.rb:10:48: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
MarcDisplay.default_presenter_config_list.find {|h| h[:id] ==:links}[:display_on_empty] = true
                                               ^^
config/initializers/marc_display_localize.rb:10:60: C: Layout/SpaceAroundOperators: Surrounding space missing for operator ==.
MarcDisplay.default_presenter_config_list.find {|h| h[:id] ==:links}[:display_on_empty] = true
                                                           ^^
config/initializers/marc_display_localize.rb:10:68: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
MarcDisplay.default_presenter_config_list.find {|h| h[:id] ==:links}[:display_on_empty] = true
                                                                   ^
config/initializers/marc_display_localize.rb:12:1: C: Layout/EmptyLines: Extra blank line detected.
config/initializers/marc_display_localize.rb:18:55: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
fulltext = JHConfig.params[:main_presenter_list].find {|h| h[:id] == :links}
                                                      ^^
config/initializers/marc_display_localize.rb:18:76: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
fulltext = JHConfig.params[:main_presenter_list].find {|h| h[:id] == :links}
                                                                           ^
config/initializers/marc_display_localize.rb:21:47: C: Layout/TrailingWhitespace: Trailing whitespace detected.
JHConfig.params[:links_presenter] = [fulltext]
                                              ^
config/initializers/marc_display_localize.rb:21:48: C: Layout/TrailingEmptyLines: 1 trailing blank lines detected.
JHConfig.params[:links_presenter] = [fulltext]  ...

config/initializers/mime_types.rb:2:1: C: Layout/LeadingCommentSpace: Missing space after #.
#Mime::Type.register_alias "text/plain", :openurl_kev
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/mime_types.rb:3:1: C: Layout/LeadingCommentSpace: Missing space after #.
#Mime::Type.register "application/x-endnote-refer", :endnote
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/mime_types.rb:4:1: C: Layout/LeadingCommentSpace: Missing space after #.
#Mime::Type.register "application/marc", :marc
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/mime_types.rb:5:1: C: Layout/LeadingCommentSpace: Missing space after #.
#Mime::Type.register "application/marcxml+xml", :marcxml,
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/mime_types.rb:5:58: C: Layout/TrailingWhitespace: Trailing whitespace detected.
#Mime::Type.register "application/marcxml+xml", :marcxml,
                                                         ^
config/initializers/mime_types.rb:6:63: C: Layout/TrailingWhitespace: Trailing whitespace detected.
#      ["application/x-marc+xml", "application/x-marcxml+xml",
                                                              ^
config/initializers/mime_types.rb:9:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Mime::Type.register "application/x-research-info-systems", :ris
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/secret_token.rb:7:121: C: Layout/LineLength: Line is too long. [177/120]
Catalyst::Application.config.secret_token    = '34c1d31dc108011fd3743378289ce7bddc036338a176da187d634cab4810dcf147bb878f2ea520da2a06c2a0763f76386d50f6661bde280dd7581b28dc8ef674'
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/secret_token.rb:8:121: C: Layout/LineLength: Line is too long. [177/120]
Catalyst::Application.config.secret_key_base = '0f620ede6f3974870c708c75bb3e27ed0de8dbeaf550292405d7fea38af35bb788e3fd74dad7c3c2d479a683d5100c428c0e30a2bd6df75c9e7fc3dc3791a2bd'
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/umlaut_include.rb:3:75: C: Layout/TrailingEmptyLines: Final newline missing.
JHConfig.params[:umlaut_base_url] = APP_CONFIG['catalyst_umlaut_base_url']

config/initializers/yboss_auth.rb:1:39: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# YBoss, we use for spell suggestions.
                                      ^
config/initializers/yboss_auth.rb:12:1: C: Layout/LeadingCommentSpace: Missing space after #.
#Rails.application.config.yboss_consumer_key = 'dj0yJmk9YWJuYVZlOHZ1YTBKJmQ9WVdrOVEwdHRUVzlXTkdzbWNHbzlOamcyTWpVNE1qWXkmcz1jb25zdW1lcnNlY3JldCZ4PTU2'
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/yboss_auth.rb:12:121: C: Layout/LineLength: Line is too long. [149/120]
#Rails.application.config.yboss_consumer_key = 'dj0yJmk9YWJuYVZlOHZ1YTBKJmQ9WVdrOVEwdHRUVzlXTkdzbWNHbzlOamcyTWpVNE1qWXkmcz1jb25zdW1lcnNlY3JldCZ4PTU2'
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/yboss_auth.rb:13:1: C: Layout/LeadingCommentSpace: Missing space after #.
#Rails.application.config.yboss_consumer_secret = '38e757be98ff8f4ccc615334ee194c2c79678e89'
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/yboss_auth.rb:13:93: C: Layout/TrailingWhitespace: Trailing whitespace detected.
#Rails.application.config.yboss_consumer_secret = '38e757be98ff8f4ccc615334ee194c2c79678e89'
                                                                                            ^
config/routes.rb:1:1: C: Metrics/BlockLength: Block has too many lines. [53/25]
Catalyst::Application.routes.draw do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:2:7: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  ####
      ^
config/routes.rb:4:57: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # until we get shibboleth working for 'catalog' again.
                                                        ^
config/routes.rb:5:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #constraints(:host => "catalog.library.jhu.edu") do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:7:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #end
  ^^^^
config/routes.rb:10:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "catalog/explain" => "catalog#cql_explain"
      ^^^^^^^^^^^^^^^^^
config/routes.rb:10:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "catalog/explain" => "catalog#cql_explain"
                           ^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:12:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #Blacklight::Marc.add_routes(self)
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:14:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #Blacklight.add_routes(self)
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:37:69: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Blacklight provides a POST route for this, there is no GET path.
                                                                    ^
config/routes.rb:39:43: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # let's explicitly route it to an error.
                                          ^
config/routes.rb:40:42: C: Style/Lambda: Use the -> { ... } lambda literal syntax for single line lambdas.
  get 'catalog/:id/track(.:format)', to: lambda {|ev| [405, {'Content-Type' => 'text/plain', 'Allow' => 'POST'}, ["Only POST method supported for this path"]]}
                                         ^^^^^^
config/routes.rb:40:49: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
  get 'catalog/:id/track(.:format)', to: lambda {|ev| [405, {'Content-Type' => 'text/plain', 'Allow' => 'POST'}, ["Only POST method supported for this path"]]}
                                                ^^
config/routes.rb:40:51: W: Lint/UnusedBlockArgument: Unused block argument - ev. If it's necessary, use _ or _ev as an argument name to indicate that it won't be used. Also consider using a proc without arguments instead of a lambda if you want it to accept any arguments but don't care about them.
  get 'catalog/:id/track(.:format)', to: lambda {|ev| [405, {'Content-Type' => 'text/plain', 'Allow' => 'POST'}, ["Only POST method supported for this path"]]}
                                                  ^^
config/routes.rb:40:61: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  get 'catalog/:id/track(.:format)', to: lambda {|ev| [405, {'Content-Type' => 'text/plain', 'Allow' => 'POST'}, ["Only POST method supported for this path"]]}
                                                            ^
config/routes.rb:40:111: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  get 'catalog/:id/track(.:format)', to: lambda {|ev| [405, {'Content-Type' => 'text/plain', 'Allow' => 'POST'}, ["Only POST method supported for this path"]]}
                                                                                                              ^
config/routes.rb:40:115: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get 'catalog/:id/track(.:format)', to: lambda {|ev| [405, {'Content-Type' => 'text/plain', 'Allow' => 'POST'}, ["Only POST method supported for this path"]]}
                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:40:121: C: Layout/LineLength: Line is too long. [159/120]
  get 'catalog/:id/track(.:format)', to: lambda {|ev| [405, {'Content-Type' => 'text/plain', 'Allow' => 'POST'}, ["Only POST method supported for this path"]]}
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:40:159: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  get 'catalog/:id/track(.:format)', to: lambda {|ev| [405, {'Content-Type' => 'text/plain', 'Allow' => 'POST'}, ["Only POST method supported for this path"]]}
                                                                                                                                                              ^
config/routes.rb:42:1: C: Layout/EmptyLines: Extra blank line detected.
config/routes.rb:43:63: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Apache does an OPTIONS /* request, just as a sort of ping.
                                                              ^
config/routes.rb:44:69: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # let's keep it out of our 404 logs and just return a generic 200.
                                                                    ^
config/routes.rb:46:77: C: Style/Lambda: Use the -> { ... } lambda literal syntax for single line lambdas.
  match ':asterisk', via: [:options], constraints: { asterisk: /\*/ }, to:  lambda {|env| [200, {'Content-Type' => 'text/plain'}, ["OK\n"]]}
                                                                            ^^^^^^
config/routes.rb:46:84: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
  match ':asterisk', via: [:options], constraints: { asterisk: /\*/ }, to:  lambda {|env| [200, {'Content-Type' => 'text/plain'}, ["OK\n"]]}
                                                                                   ^^
config/routes.rb:46:86: W: Lint/UnusedBlockArgument: Unused block argument - env. If it's necessary, use _ or _env as an argument name to indicate that it won't be used. Also consider using a proc without arguments instead of a lambda if you want it to accept any arguments but don't care about them.
  match ':asterisk', via: [:options], constraints: { asterisk: /\*/ }, to:  lambda {|env| [200, {'Content-Type' => 'text/plain'}, ["OK\n"]]}
                                                                                     ^^^
config/routes.rb:46:97: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  match ':asterisk', via: [:options], constraints: { asterisk: /\*/ }, to:  lambda {|env| [200, {'Content-Type' => 'text/plain'}, ["OK\n"]]}
                                                                                                ^
config/routes.rb:46:121: C: Layout/LineLength: Line is too long. [140/120]
  match ':asterisk', via: [:options], constraints: { asterisk: /\*/ }, to:  lambda {|env| [200, {'Content-Type' => 'text/plain'}, ["OK\n"]]}
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^
config/routes.rb:46:128: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  match ':asterisk', via: [:options], constraints: { asterisk: /\*/ }, to:  lambda {|env| [200, {'Content-Type' => 'text/plain'}, ["OK\n"]]}
                                                                                                                               ^
config/routes.rb:46:140: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  match ':asterisk', via: [:options], constraints: { asterisk: /\*/ }, to:  lambda {|env| [200, {'Content-Type' => 'text/plain'}, ["OK\n"]]}
                                                                                                                                           ^
config/routes.rb:48:1: C: Layout/EmptyLines: Extra blank line detected.
config/routes.rb:53:1: C: Layout/EmptyLines: Extra blank line detected.
config/routes.rb:61:1: C: Layout/EmptyLines: Extra blank line detected.
config/routes.rb:67:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # home page at the moment.
                            ^
config/routes.rb:68:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "user" => "users#itemsout", :as => "user"
      ^^^^^^
config/routes.rb:68:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "user" => "users#itemsout", :as => "user"
                ^^^^^^^^^^^^^^^^
config/routes.rb:68:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "user" => "users#itemsout", :as => "user"
                                         ^^^^^^
config/routes.rb:69:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  put "user/profile" => "users#update"
      ^^^^^^^^^^^^^^
config/routes.rb:69:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  put "user/profile" => "users#update"
                        ^^^^^^^^^^^^^^
config/routes.rb:70:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "login" => "user_sessions#index", :as => "new_user_session"
      ^^^^^^^
config/routes.rb:70:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "login" => "user_sessions#index", :as => "new_user_session"
                 ^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:70:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "login" => "user_sessions#index", :as => "new_user_session"
                                               ^^^^^^^^^^^^^^^^^^
config/routes.rb:71:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "logout" => "user_sessions#destroy", :as => "destroy_user_session"
      ^^^^^^^^
config/routes.rb:71:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "logout" => "user_sessions#destroy", :as => "destroy_user_session"
                  ^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:71:51: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "logout" => "user_sessions#destroy", :as => "destroy_user_session"
                                                  ^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:72:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  post "login" => "user_sessions#create", :as => "user_sessions"
       ^^^^^^^
config/routes.rb:72:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  post "login" => "user_sessions#create", :as => "user_sessions"
                  ^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:72:50: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  post "login" => "user_sessions#create", :as => "user_sessions"
                                                 ^^^^^^^^^^^^^^^
config/routes.rb:73:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/routes.rb:75:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get 'user/itemsout' => redirect("/user") # /user/itemout used to be link, don't break it
                                  ^^^^^^^
config/routes.rb:76:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get 'user/requests' => "users#requests"
                         ^^^^^^^^^^^^^^^^
config/routes.rb:77:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get 'user/profile'  => "users#show"
                         ^^^^^^^^^^^^
config/routes.rb:78:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/routes.rb:80:47: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # one for specifying location limit in path.
                                              ^
config/routes.rb:84:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/routes.rb:87:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get 'multi_search' => "multi_search#index"
                        ^^^^^^^^^^^^^^^^^^^^
config/routes.rb:88:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "search/:engine", :to => "multi_search#search", :as => "bento_single_search"
      ^^^^^^^^^^^^^^^^
config/routes.rb:88:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  get "search/:engine", :to => "multi_search#search", :as => "bento_single_search"
                        ^^^^^^
config/routes.rb:88:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "search/:engine", :to => "multi_search#search", :as => "bento_single_search"
                               ^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:88:55: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  get "search/:engine", :to => "multi_search#search", :as => "bento_single_search"
                                                      ^^^^^^
config/routes.rb:88:62: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "search/:engine", :to => "multi_search#search", :as => "bento_single_search"
                                                             ^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:88:83: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  get "search/:engine", :to => "multi_search#search", :as => "bento_single_search"
                                                                                  ^
config/routes.rb:91:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "refworks_callback/:engine/:encrypted_id", :to => "multi_search#refworks_callback", :as => "refworks_callback"
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:91:50: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  get "refworks_callback/:engine/:encrypted_id", :to => "multi_search#refworks_callback", :as => "refworks_callback"
                                                 ^^^^^^
config/routes.rb:91:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "refworks_callback/:engine/:encrypted_id", :to => "multi_search#refworks_callback", :as => "refworks_callback"
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:91:91: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  get "refworks_callback/:engine/:encrypted_id", :to => "multi_search#refworks_callback", :as => "refworks_callback"
                                                                                          ^^^^^^
config/routes.rb:91:98: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "refworks_callback/:engine/:encrypted_id", :to => "multi_search#refworks_callback", :as => "refworks_callback"
                                                                                                 ^^^^^^^^^^^^^^^^^^^
config/routes.rb:93:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get 'disclaimer' => "disclaimer#index"
                      ^^^^^^^^^^^^^^^^^^
config/routes.rb:96:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  get 'floormap', :controller => "map", :action => "index"
                  ^^^^^^^^^^^^^^
config/routes.rb:96:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get 'floormap', :controller => "map", :action => "index"
                                 ^^^^^
config/routes.rb:96:41: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  get 'floormap', :controller => "map", :action => "index"
                                        ^^^^^^^^^^
config/routes.rb:96:52: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get 'floormap', :controller => "map", :action => "index"
                                                   ^^^^^^^
config/routes.rb:100:35: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  get 'shelfbrowse(/:call_type)', :to => "catalog#shelfbrowse", :as => "shelfbrowse"
                                  ^^^^^^
config/routes.rb:100:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get 'shelfbrowse(/:call_type)', :to => "catalog#shelfbrowse", :as => "shelfbrowse"
                                         ^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:100:65: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  get 'shelfbrowse(/:call_type)', :to => "catalog#shelfbrowse", :as => "shelfbrowse"
                                                                ^^^^^^
config/routes.rb:100:72: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get 'shelfbrowse(/:call_type)', :to => "catalog#shelfbrowse", :as => "shelfbrowse"
                                                                       ^^^^^^^^^^^^^
config/routes.rb:102:43: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  get 'stackview_data/:call_number_type', :to => "stackview_data#fetch", :as => "stackview_data"
                                          ^^^^^^
config/routes.rb:102:50: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get 'stackview_data/:call_number_type', :to => "stackview_data#fetch", :as => "stackview_data"
                                                 ^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:102:74: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  get 'stackview_data/:call_number_type', :to => "stackview_data#fetch", :as => "stackview_data"
                                                                         ^^^^^^
config/routes.rb:102:81: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get 'stackview_data/:call_number_type', :to => "stackview_data#fetch", :as => "stackview_data"
                                                                                ^^^^^^^^^^^^^^^^
config/routes.rb:104:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "shelfbrowse_item", :to => "catalog#shelfbrowse_item", :as => "stackview_browser_item"
      ^^^^^^^^^^^^^^^^^^
config/routes.rb:104:27: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  get "shelfbrowse_item", :to => "catalog#shelfbrowse_item", :as => "stackview_browser_item"
                          ^^^^^^
config/routes.rb:104:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "shelfbrowse_item", :to => "catalog#shelfbrowse_item", :as => "stackview_browser_item"
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:104:62: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  get "shelfbrowse_item", :to => "catalog#shelfbrowse_item", :as => "stackview_browser_item"
                                                             ^^^^^^
config/routes.rb:104:69: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "shelfbrowse_item", :to => "catalog#shelfbrowse_item", :as => "stackview_browser_item"
                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:105:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/routes.rb:106:41: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  match '/:controller(/:action(/:id))', :via => [:get, :post]
                                        ^^^^^^^
config/routes.rb:106:49: C: Style/SymbolArray: Use %i or %I for an array of symbols.
  match '/:controller(/:action(/:id))', :via => [:get, :post]
                                                ^^^^^^^^^^^^^
config/routes.rb:110:56: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get 'borrow_direct' => 'borrow_direct#index', :as => "borrow_direct"
                                                       ^^^^^^^^^^^^^^^
config/routes.rb:111:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/routes.rb:115:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/routes.rb:116:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get '/journals' => redirect("/search/articles")
                              ^^^^^^^^^^^^^^^^^^
config/routes.rb:117:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/routes.rb:118:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/routes.rb:123:1: C: Layout/EmptyLines: Extra blank line detected.
config/routes.rb:127:50: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # more consistent. /catalog?q=foo, not /?q=foo.
                                                 ^^^
config/routes.rb:128:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/routes.rb:131:66: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # anymore. But if one comes in from outside like that, REDIRECT
                                                                 ^
config/routes.rb:133:21: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # after we change.
                    ^
config/routes.rb:134:15: C: Style/Lambda: Use the -> { ... } lambda literal syntax for single line lambdas.
  constraints(lambda {|req| req.query_parameters.present? }) do
              ^^^^^^
config/routes.rb:134:22: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
  constraints(lambda {|req| req.query_parameters.present? }) do
                     ^^
config/routes.rb:135:63: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # need to use {} rather than do/end for precendence, argh.
                                                              ^^^^^
config/routes.rb:136:10: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    root :as => nil, :to => redirect { |params, request|
         ^^^^^^
config/routes.rb:136:22: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    root :as => nil, :to => redirect { |params, request|
                     ^^^^^^
config/routes.rb:136:41: W: Lint/UnusedBlockArgument: Unused block argument - params. If it's necessary, use _ or _params as an argument name to indicate that it won't be used.
    root :as => nil, :to => redirect { |params, request|
                                        ^^^^^^
config/routes.rb:136:57: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    root :as => nil, :to => redirect { |params, request|
                                                        ^^^^^^
config/routes.rb:140:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/routes.rb:142:8: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  root :to => "multi_search#index"
       ^^^^^^
config/routes.rb:142:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  root :to => "multi_search#index"
              ^^^^^^^^^^^^^^^^^^^^
config/routes.rb:142:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  root :to => "multi_search#index"
                                  ^^
config/routes.rb:143:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/routes.rb:147:17: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # in our logs.
                ^
config/routes.rb:148:5: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  ##
    ^^^
config/routes.rb:149:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get '*path' => "application#show404"
                 ^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:149:39: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  get '*path' => "application#show404"
                                      ^
config/routes.rb:150:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
features/step_definitions/api_steps.rb:4:7: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Given /^I send and accept (XML|JSON)$/ do |type|
      ^
features/step_definitions/api_steps.rb:5:9: C: Style/BarePercentLiterals: Use % instead of %Q.
  steps %Q{
        ^^^
features/step_definitions/api_steps.rb:5:9: C: Style/PercentLiteralDelimiters: %Q-literals should be delimited by ( and ).
  steps %Q{ ...
        ^^^
features/step_definitions/api_steps.rb:10:7: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Given /^I send "(.*?)" and accept "(.*?)"$/ do |content_type, accept|
      ^
features/step_definitions/api_steps.rb:12:7: C: Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
      :Accept => "#{accept}",
      ^^^^^^^^^^^^^^^^^^^^^^
features/step_definitions/api_steps.rb:12:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :Accept => "#{accept}",
      ^^^^^^^^^^
features/step_definitions/api_steps.rb:12:18: C: Style/RedundantInterpolation: Prefer to_s over string interpolation.
      :Accept => "#{accept}",
                 ^^^^^^^^^^^
features/step_definitions/api_steps.rb:13:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :'Content-Type' => "#{content_type}"
      ^^^^^^^^^^^^^^^^^^
features/step_definitions/api_steps.rb:13:26: C: Style/RedundantInterpolation: Prefer to_s over string interpolation.
      :'Content-Type' => "#{content_type}"
                         ^^^^^^^^^^^^^^^^^
features/step_definitions/api_steps.rb:17:6: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
When /^I send a (GET|POST|PATCH|PUT|DELETE) request to horizon servlet "(.*?)" with:$/ do |method, url, params|
     ^
features/step_definitions/api_steps.rb:20:36: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    query = params.hashes.first.map{|key, value| %/#{key}=#{value}/}.join("&")
                                   ^
features/step_definitions/api_steps.rb:20:36: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    query = params.hashes.first.map{|key, value| %/#{key}=#{value}/}.join("&")
                                   ^^
features/step_definitions/api_steps.rb:20:50: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
    query = params.hashes.first.map{|key, value| %/#{key}=#{value}/}.join("&")
                                                 ^^^^^^^^^^^^^^^^^^
features/step_definitions/api_steps.rb:20:68: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    query = params.hashes.first.map{|key, value| %/#{key}=#{value}/}.join("&")
                                                                   ^
features/step_definitions/api_steps.rb:20:75: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    query = params.hashes.first.map{|key, value| %/#{key}=#{value}/}.join("&")
                                                                          ^^^
features/step_definitions/api_steps.rb:21:31: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
    url = url.include?('?') ? %/#{url}&#{query}/ : %/#{url}?#{query}/
                              ^^^^^^^^^^^^^^^^^^
features/step_definitions/api_steps.rb:21:52: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
    url = url.include?('?') ? %/#{url}&#{query}/ : %/#{url}?#{query}/
                                                   ^^^^^^^^^^^^^^^^^^
features/step_definitions/api_steps.rb:23:9: C: Style/BarePercentLiterals: Use % instead of %Q.
  steps %Q{When I send a #{method} request to "#{url}"}
        ^^^
features/step_definitions/api_steps.rb:23:9: C: Style/PercentLiteralDelimiters: %Q-literals should be delimited by ( and ).
  steps %Q{When I send a #{method} request to "#{url}"}
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/step_definitions/api_steps.rb:26:1: C: Layout/EmptyLines: Extra blank line detected.
features/step_definitions/api_steps.rb:27:6: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
When /^I send a request to hip service with:$/ do |params|
     ^
features/step_definitions/api_steps.rb:30:36: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    query = params.hashes.first.map{|key, value| %/#{key}=#{value}/}.join("&")
                                   ^
features/step_definitions/api_steps.rb:30:36: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    query = params.hashes.first.map{|key, value| %/#{key}=#{value}/}.join("&")
                                   ^^
features/step_definitions/api_steps.rb:30:50: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
    query = params.hashes.first.map{|key, value| %/#{key}=#{value}/}.join("&")
                                                 ^^^^^^^^^^^^^^^^^^
features/step_definitions/api_steps.rb:30:68: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    query = params.hashes.first.map{|key, value| %/#{key}=#{value}/}.join("&")
                                                                   ^
features/step_definitions/api_steps.rb:30:75: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    query = params.hashes.first.map{|key, value| %/#{key}=#{value}/}.join("&")
                                                                          ^^^
features/step_definitions/api_steps.rb:34:23: C: Security/Open: The use of Kernel#open is a serious security risk.
  doc = Nokogiri::XML(open(url))
                      ^^^^
features/step_definitions/api_steps.rb:38:6: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
When /^I send the request again with barcode "(.*)" and pin "(.*)"$/ do |barcode, pin|
     ^
features/step_definitions/api_steps.rb:40:9: C: Style/BarePercentLiterals: Use % instead of %Q.
  steps %Q{When I send a GET request to "#{url}"}
        ^^^
features/step_definitions/api_steps.rb:40:9: C: Style/PercentLiteralDelimiters: %Q-literals should be delimited by ( and ).
  steps %Q{When I send a GET request to "#{url}"}
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/step_definitions/api_steps.rb:43:6: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
When /^I confirm the request with pickup location "(.*)"$/ do |location|
     ^
features/step_definitions/api_steps.rb:44:121: C: Layout/LineLength: Line is too long. [213/120]
  url = "https://#{ExternalApi.hip_host}/ipac20/ipac.jsp?GetXML=1&request_finish=Confirm&pickuplocation=#{location}&session=#{@session}&notifyby=mail&cl=PlaceRequestjsp&profile=general&aspect=none&requestcomment="
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/step_definitions/api_steps.rb:45:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #session=1513F0TN85726.4&profile=general&notifyby=mail&pickuplocation=EMSEL&requestcomment=&request_finish=Confirm&cl=PlaceRequestjsp&aspect=none
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/step_definitions/api_steps.rb:45:121: C: Layout/LineLength: Line is too long. [147/120]
  #session=1513F0TN85726.4&profile=general&notifyby=mail&pickuplocation=EMSEL&requestcomment=&request_finish=Confirm&cl=PlaceRequestjsp&aspect=none
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/step_definitions/api_steps.rb:46:9: C: Style/BarePercentLiterals: Use % instead of %Q.
  steps %Q{When I send a POST request to "#{url}"}
        ^^^
features/step_definitions/api_steps.rb:46:9: C: Style/PercentLiteralDelimiters: %Q-literals should be delimited by ( and ).
  steps %Q{When I send a POST request to "#{url}"}
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/step_definitions/api_steps.rb:49:6: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Then /^the XML response should (not)?\s?have "([^"]*)"$/ do |negative, xpath|
     ^
features/step_definitions/api_steps.rb:52:6: C: Style/RedundantSelf: Redundant self detected.
  if self.respond_to?(:expect)
     ^^^^^^^^^^^^^^^^^^^^^^^^^
features/step_definitions/api_steps.rb:59:5: C: Style/IfInsideElse: Convert if nested inside else to elsif.
    if negative.present?
    ^^
features/step_definitions/api_steps.rb:67:6: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Then /^the XML response should have "([^"]*)" with the text "([^"]*)"$/ do |xpath, text|
     ^
features/step_definitions/api_steps.rb:70:6: C: Style/RedundantSelf: Redundant self detected.
  if self.respond_to?(:expect)
     ^^^^^^^^^^^^^^^^^^^^^^^^^
features/step_definitions/api_steps.rb:72:121: C: Layout/LineLength: Line is too long. [130/120]
    expect(elements.find { |e| e.text == text }).not_to be_nil, "found elements but could not find #{text} in:\n#{@response.body}"
                                                                                                                        ^^^^^^^^^^
features/step_definitions/api_steps.rb:79:6: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Then /^the XML response should have (\d+) matches with xpath "([^"]*)"$/ do |count, xpath|
     ^
features/step_definitions/api_steps.rb:82:6: C: Style/RedundantSelf: Redundant self detected.
  if self.respond_to?(:expect)
     ^^^^^^^^^^^^^^^^^^^^^^^^^
features/step_definitions/api_steps.rb:83:121: C: Layout/LineLength: Line is too long. [140/120]
    expect(elements.size).to eq(count.to_i), "expect #{count} matches but found #{elements.size} with xpath #{xpath} in:\n#{@response.body}"
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^
features/step_definitions/api_steps.rb:85:121: C: Layout/LineLength: Line is too long. [135/120]
    assert elements.size == count.to_i, "expect #{count} matches but found #{elements.size} with xpath #{xpath} in:\n#{@response.body}"
                                                                                                                        ^^^^^^^^^^^^^^^
features/step_definitions/api_steps.rb:87:4: C: Layout/TrailingEmptyLines: Final newline missing.
end

features/step_definitions/basic_search_steps.rb:5:60: C: Naming/BlockParameterName: Only use lowercase characters for block parameter.
When(/^I search for "(.*?)"(?: with scope "(.*?)")?$/) do |searchText, scope|
                                                           ^^^^^^^^^^
features/step_definitions/basic_search_steps.rb:5:60: C: Naming/VariableName: Use snake_case for variable names.
When(/^I search for "(.*?)"(?: with scope "(.*?)")?$/) do |searchText, scope|
                                                           ^^^^^^^^^^
features/step_definitions/basic_search_steps.rb:7:22: C: Naming/VariableName: Use snake_case for variable names.
  fill_in 'q', with: searchText
                     ^^^^^^^^^^
features/step_definitions/commons_steps.rb:2:1: C: Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
Given /^I click on ajax link "(.*)"$/ do |text|
^^^^^
features/step_definitions/commons_steps.rb:2:7: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Given /^I click on ajax link "(.*)"$/ do |text|
      ^
features/step_definitions/commons_steps.rb:7:7: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Given /^I click on the status label$/ do
      ^
features/step_definitions/commons_steps.rb:11:7: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Given /^I click on link "(.*)"$/ do |text|
      ^
features/step_definitions/commons_steps.rb:15:7: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Given /^I click on button "(.*)"$/ do |text|
      ^
features/step_definitions/commons_steps.rb:19:7: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Given /^I click on "Multiple Items" for the copy "(.*)"$/ do |copy|
      ^
features/step_definitions/commons_steps.rb:23:7: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Given /^I open detail page for bib id (.*)$/ do |bib_id|
      ^
features/step_definitions/commons_steps.rb:27:6: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Then /^I should see "(.*)"$/ do |expectedText|
     ^
features/step_definitions/commons_steps.rb:27:34: C: Naming/BlockParameterName: Only use lowercase characters for block parameter.
Then /^I should see "(.*)"$/ do |expectedText|
                                 ^^^^^^^^^^^^
features/step_definitions/commons_steps.rb:27:34: C: Naming/VariableName: Use snake_case for variable names.
Then /^I should see "(.*)"$/ do |expectedText|
                                 ^^^^^^^^^^^^
features/step_definitions/commons_steps.rb:28:32: C: Naming/VariableName: Use snake_case for variable names.
  expect(page).to have_content expectedText
                               ^^^^^^^^^^^^
features/step_definitions/commons_steps.rb:31:6: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Then /^I should not see "(.*)"$/ do |text|
     ^
features/step_definitions/commons_steps.rb:35:6: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Then /^I should see (\d+) occurrence(?:s?) of "(.*)"$/ do |count, text|
     ^
features/step_definitions/commons_steps.rb:39:6: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Then /^I should see (\d+) "txt" button(?:s?)$/ do |count|
     ^
features/step_definitions/commons_steps.rb:43:6: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Then /^I should see a link "(.*?)" with URL "(.*?)"$/ do |link_label, link_url|
     ^
features/step_definitions/commons_steps.rb:47:6: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Then /^I should find more than (\d+) (catalog|articles) records?$/ do |count, type|
     ^
features/step_definitions/commons_steps.rb:51:6: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Then /^I should find less than (\d+) records?$/ do |count|
     ^
features/step_definitions/commons_steps.rb:52:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  expect(page.all(:css, "div.page_links span.page_entries strong").last.text.delete(',').to_i).to be < count.to_i
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/step_definitions/commons_steps.rb:55:7: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Given /^I visit page "([^"]*)"$/ do |url|
      ^
features/step_definitions/commons_steps.rb:57:4: C: Layout/TrailingEmptyLines: Final newline missing.
end

features/step_definitions/security_scan_steps.rb:3:7: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Given /^I inject (.*) to the route (.*)$/ do |inject, route|
      ^
features/step_definitions/security_scan_steps.rb:4:7: W: Lint/UriEscapeUnescape: URI.encode method is obsolete and should not be used. Instead, use CGI.escape, URI.encode_www_form or URI.encode_www_form_component depending on your specific use case.
  get URI.encode "#{route}#{inject}"
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/step_definitions/security_scan_steps.rb:7:6: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Then /^I should not see (.*) in the page source$/ do | text |
     ^
features/step_definitions/security_scan_steps.rb:7:55: C: Layout/SpaceAroundBlockParameters: Space before first block parameter detected.
Then /^I should not see (.*) in the page source$/ do | text |
                                                      ^
features/step_definitions/security_scan_steps.rb:7:60: C: Layout/SpaceAroundBlockParameters: Space after last block parameter detected.
Then /^I should not see (.*) in the page source$/ do | text |
                                                           ^
features/step_definitions/security_scan_steps.rb:11:6: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Then /^the response should not have "(.*)"$/ do |text|
     ^
features/step_definitions/security_scan_steps.rb:14:1: C: Layout/TrailingEmptyLines: 2 trailing blank lines detected.
features/step_definitions/user_account_steps.rb:1:7: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
Given /^I am not logged in$/ do
      ^
features/step_definitions/user_account_steps.rb:3:4: C: Layout/TrailingEmptyLines: Final newline missing.
end

features/support/cucumber_api.rb:11:69: C: Layout/TrailingEmptyLines: Final newline missing.
ExternalApi.hip_host = ENV['HIP_HOST'] || 'hip-test.library.jhu.edu'

features/support/env.rb:58:1: C: Layout/TrailingEmptyLines: 1 trailing blank lines detected.
features/support/selenium_webdriver.rb:8:7: C: Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
      chromeOptions: { args: %w[headless disable-gpu disable-xss-auditor] }
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/support/selenium_webdriver.rb:9:3: C: Layout/ClosingParenthesisIndentation: Indent ) to column 4 (not 2)
  )
  ^
features/support/selenium_webdriver.rb:19:46: C: Layout/TrailingEmptyLines: Final newline missing.
Capybara.javascript_driver = :headless_chrome

features/support/wait_until.rb:5:28: W: Lint/AssignmentInCondition: Use == if you meant to do a comparison or wrap the expression in parentheses to indicate you meant to assign in a condition.
    sleep(0.1) until value = yield
                           ^
lib/custom_log_formatter.rb:1:25: C: Layout/TrailingWhitespace: Trailing whitespace detected.
class CustomLogFormatter
                        ^
lib/custom_log_formatter.rb:2:71: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Unlike Logger, not seeing a need to include the PID, the progname,
                                                                      ^
lib/custom_log_formatter.rb:3:27: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # or the Severity twice.
                          ^
lib/custom_log_formatter.rb:4:3: C: Style/ClassVars: Replace class var @@format_str with a class instance var.
  @@format_str = "[%s] %5s  %s"
  ^^^^^^^^^^^^
lib/custom_log_formatter.rb:4:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  @@format_str = "[%s] %5s  %s"
                 ^^^^^^^^^^^^^^
lib/custom_log_formatter.rb:5:3: C: Style/ClassVars: Replace class var @@datetime_format with a class instance var.
  @@datetime_format = nil
  ^^^^^^^^^^^^^^^^^
lib/custom_log_formatter.rb:5:26: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  @@datetime_format = nil
                         ^
lib/custom_log_formatter.rb:7:3: C: Metrics/AbcSize: Assignment Branch Condition size for call is too high. [<5, 14, 4> 15.39/15]
  def call(severity, time, progname, msg)  ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/custom_log_formatter.rb:7:28: W: Lint/UnusedMethodArgument: Unused method argument - progname. If it's necessary, use _ or _progname as an argument name to indicate that it won't be used.
  def call(severity, time, progname, msg)
                           ^^^^^^^^
lib/custom_log_formatter.rb:7:42: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  def call(severity, time, progname, msg)
                                         ^
lib/custom_log_formatter.rb:8:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    msg = "" if msg.nil? # need to manipulate it as string
          ^^
lib/custom_log_formatter.rb:11:19: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # we will too.
                  ^
lib/custom_log_formatter.rb:12:16: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    msg += "\n"
               ^^^^
lib/custom_log_formatter.rb:13:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/custom_log_formatter.rb:17:47: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # avoid causing problems with later logic.
                                              ^
lib/custom_log_formatter.rb:20:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/custom_log_formatter.rb:21:68: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # see no need for micro-seconds like in Logger, milis suffices.
                                                                   ^
lib/custom_log_formatter.rb:23:31: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # do not work in strftime.
                              ^
lib/custom_log_formatter.rb:25:7: C: Layout/IndentationWidth: Use 2 (not -15) spaces for indentation.
      time.strftime(@@datetime_format)
      ^^^^^^^^^^^^^^^
lib/custom_log_formatter.rb:26:5: C: Layout/ElseAlignment: Align else with if.
    else
    ^^^^
lib/custom_log_formatter.rb:27:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      time.strftime("%Y-%m-%d %H:%M:%S.") << time.usec.to_s[0..2].rjust(3)
                    ^^^^^^^^^^^^^^^^^^^^
lib/custom_log_formatter.rb:28:5: W: Layout/EndAlignment: end at 28, 4 is not aligned with if at 24, 21.
    end
    ^^^
lib/custom_log_formatter.rb:31:55: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # logfile. We want to preserve those when present,
                                                      ^
lib/custom_log_formatter.rb:33:5: C: Naming/VariableName: Use snake_case for variable names.
    matchData = ( /\A(\n*)/.match(msg)  )
    ^^^^^^^^^
lib/custom_log_formatter.rb:33:17: C: Style/RedundantParentheses: Don't use parentheses around a method call.
    matchData = ( /\A(\n*)/.match(msg)  )
                ^^^^^^^^^^^^^^^^^^^^^^^^^
lib/custom_log_formatter.rb:33:18: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    matchData = ( /\A(\n*)/.match(msg)  )
                 ^
lib/custom_log_formatter.rb:33:39: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    matchData = ( /\A(\n*)/.match(msg)  )
                                      ^
lib/custom_log_formatter.rb:33:39: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    matchData = ( /\A(\n*)/.match(msg)  )
                                      ^^
lib/custom_log_formatter.rb:33:42: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    matchData = ( /\A(\n*)/.match(msg)  )
                                         ^^^^
lib/custom_log_formatter.rb:34:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/custom_log_formatter.rb:35:5: C: Naming/VariableName: Use snake_case for variable names.
    matchData[0] + (@@format_str % [formatted_time, severity, matchData.post_match])
    ^^^^^^^^^
lib/custom_log_formatter.rb:35:34: C: Style/FormatString: Favor format over String#%.
    matchData[0] + (@@format_str % [formatted_time, severity, matchData.post_match])
                                 ^
lib/custom_log_formatter.rb:35:63: C: Naming/VariableName: Use snake_case for variable names.
    matchData[0] + (@@format_str % [formatted_time, severity, matchData.post_match])
                                                              ^^^^^^^^^
lib/custom_log_formatter.rb:37:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
lib/custom_log_formatter.rb:38:4: C: Layout/TrailingEmptyLines: Final newline missing.
end

lib/dlf_expanded_passthrough/document_extension.rb:6:62: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# Adds on a #to_dlf_expanded and #export_as_dlf_expanded to a
                                                             ^
lib/dlf_expanded_passthrough/document_extension.rb:13:31: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# for request URL replacement.
                              ^
lib/dlf_expanded_passthrough/document_extension.rb:24:3: C: Naming/ConstantName: Use SCREAMING_SNAKE_CASE for constants.
  HttpTimeout = 5 # seconds. Yes, sometimes it takes this long, for reasons we do not understand.
  ^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:24:98: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  HttpTimeout = 5 # seconds. Yes, sometimes it takes this long, for reasons we do not understand.
                                                                                                 ^
lib/dlf_expanded_passthrough/document_extension.rb:25:3: C: Metrics/ModuleLength: Module has too many lines. [132/100]
  module DocumentExtension ...
  ^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:26:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:28:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      document.will_export_as(:dlf_expanded, "application/xml")
                                             ^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:28:64: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      document.will_export_as(:dlf_expanded, "application/xml")
                                                               ^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:30:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:36:7: C: Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      unless defined? @_to_dlf_expanded
      ^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:36:40: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      unless defined? @_to_dlf_expanded
                                       ^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:39:7: C: Style/RedundantReturn: Redundant return detected.
      return @_to_dlf_expanded
      ^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:42:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:43:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def to_dlf_expanded_for_holdingset(copy_id)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:47:73: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        enhance_dlf(Nokogiri::XML(DocumentExtension.safe_http_get(url)))
                                                                        ^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:48:7: C: Layout/RescueEnsureAlignment: rescue at 48, 6 is not aligned with begin at 46, 33.
      rescue OpenURI::HTTPError => e
      ^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:50:36: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        # oh well, we have nothing.
                                   ^
lib/dlf_expanded_passthrough/document_extension.rb:55:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:60:7: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
         Rails.logger.warn("No dlf_expanded available for #{self["id"]}")
      ^^^
lib/dlf_expanded_passthrough/document_extension.rb:60:66: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
         Rails.logger.warn("No dlf_expanded available for #{self["id"]}")
                                                                 ^^^^
lib/dlf_expanded_passthrough/document_extension.rb:61:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
         return ""
                ^^
lib/dlf_expanded_passthrough/document_extension.rb:63:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:69:7: C: Style/RedundantReturn: Redundant return detected.
      return @_export_as_dlf_expanded
      ^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:71:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:73:25: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # Remove the prefix.
                        ^
lib/dlf_expanded_passthrough/document_extension.rb:74:9: C: Naming/MethodName: Use snake_case for method names.
    def dlf_bibId
        ^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:78:56: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # Solr id, let's make it available under this name.
                                                       ^
lib/dlf_expanded_passthrough/document_extension.rb:79:5: C: Style/Alias: Use alias instead of alias_method in a module body.
    alias_method :ils_bib_id, :dlf_bibId
    ^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:82:19: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # can call it.
                  ^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:86:58: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # attached to the receiver, this is a utility method.
                                                         ^
lib/dlf_expanded_passthrough/document_extension.rb:88:43: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # Adds floor-level stuff into XML too.
                                          ^
lib/dlf_expanded_passthrough/document_extension.rb:89:5: C: Metrics/AbcSize: Assignment Branch Condition size for enhance_dlf is too high. [<15, 41, 6> 44.07/15]
    def enhance_dlf(dlf) ...
    ^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:89:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for enhance_dlf is too high. [8/7]
    def enhance_dlf(dlf) ...
    ^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:89:5: C: Metrics/MethodLength: Method has too many lines. [24/10]
    def enhance_dlf(dlf) ...
    ^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:90:50: C: Layout/TrailingWhitespace: Trailing whitespace detected.
     # Change request URL to be proper internally
                                                 ^
lib/dlf_expanded_passthrough/document_extension.rb:91:5: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
     dlf.xpath("./dlf:record/dlf:items/dlf:item/daia:daia/daia:document/daia:item/daia:available", dlf_xml_ns).each do |avail_node|
    ^
lib/dlf_expanded_passthrough/document_extension.rb:91:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
     dlf.xpath("./dlf:record/dlf:items/dlf:item/daia:daia/daia:document/daia:item/daia:available", dlf_xml_ns).each do |avail_node|
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:91:121: C: Layout/LineLength: Line is too long. [140/120]
     dlf.xpath("./dlf:record/dlf:items/dlf:item/daia:daia/daia:document/daia:item/daia:available", dlf_xml_ns).each do |avail_node|
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:91:132: C: Layout/TrailingWhitespace: Trailing whitespace detected.
     dlf.xpath("./dlf:record/dlf:items/dlf:item/daia:daia/daia:document/daia:item/daia:available", dlf_xml_ns).each do |avail_node|
                                                                                                                                   ^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:93:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
       bib_id = avail_node.at_xpath("ancestor::dlf:item/marc:record/marc:controlfield[@tag=004]", dlf_xml_ns).text()
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:93:115: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
       bib_id = avail_node.at_xpath("ancestor::dlf:item/marc:record/marc:controlfield[@tag=004]", dlf_xml_ns).text()
                                                                                                                  ^^
lib/dlf_expanded_passthrough/document_extension.rb:94:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
       item_id =  avail_node.at_xpath("ancestor::dlf:item", dlf_xml_ns)["id"]
                                      ^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:94:73: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
       item_id =  avail_node.at_xpath("ancestor::dlf:item", dlf_xml_ns)["id"]
                                                                        ^^^^
lib/dlf_expanded_passthrough/document_extension.rb:95:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:96:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
       avail_node["href"]=  self.class.extension_parameters[:self_uri_prefix].chomp("/") + "/bib_" + bib_id + "/item/" + item_id + "/request"
                  ^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:96:26: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =.
       avail_node["href"]=  self.class.extension_parameters[:self_uri_prefix].chomp("/") + "/bib_" + bib_id + "/item/" + item_id + "/request"
                         ^
lib/dlf_expanded_passthrough/document_extension.rb:96:27: C: Layout/ExtraSpacing: Unnecessary spacing detected.
       avail_node["href"]=  self.class.extension_parameters[:self_uri_prefix].chomp("/") + "/bib_" + bib_id + "/item/" + item_id + "/request"
                          ^
lib/dlf_expanded_passthrough/document_extension.rb:96:85: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
       avail_node["href"]=  self.class.extension_parameters[:self_uri_prefix].chomp("/") + "/bib_" + bib_id + "/item/" + item_id + "/request"
                                                                                    ^^^
lib/dlf_expanded_passthrough/document_extension.rb:96:92: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
       avail_node["href"]=  self.class.extension_parameters[:self_uri_prefix].chomp("/") + "/bib_" + bib_id + "/item/" + item_id + "/request"
                                                                                           ^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:96:111: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
       avail_node["href"]=  self.class.extension_parameters[:self_uri_prefix].chomp("/") + "/bib_" + bib_id + "/item/" + item_id + "/request"
                                                                                                              ^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:96:121: C: Layout/LineLength: Line is too long. [141/120]
       avail_node["href"]=  self.class.extension_parameters[:self_uri_prefix].chomp("/") + "/bib_" + bib_id + "/item/" + item_id + "/request"
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:96:132: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
       avail_node["href"]=  self.class.extension_parameters[:self_uri_prefix].chomp("/") + "/bib_" + bib_id + "/item/" + item_id + "/request"
                                                                                                                                   ^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:98:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:100:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
     (dlf.xpath("//dlf:holdingsrec", dlf_xml_ns) + dlf.xpath("//dlf:item", dlf_xml_ns)).each do |node|
                ^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:100:62: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
     (dlf.xpath("//dlf:holdingsrec", dlf_xml_ns) + dlf.xpath("//dlf:item", dlf_xml_ns)).each do |node|
                                                             ^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:102:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
       collection_code = node.xpath("./ilsitem:description/ilsitem:collection/dc:identifier", dlf_xml_ns).inner_text
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:103:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:104:8: C: Style/Next: Use next to skip iteration.
       if (extra = LCCToExtraLabel.translate( collection_code, call_num ))
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:104:46: C: Layout/SpaceInsideParens: Space inside parentheses detected.
       if (extra = LCCToExtraLabel.translate( collection_code, call_num ))
                                             ^
lib/dlf_expanded_passthrough/document_extension.rb:104:72: C: Layout/SpaceInsideParens: Space inside parentheses detected.
       if (extra = LCCToExtraLabel.translate( collection_code, call_num ))
                                                                       ^
lib/dlf_expanded_passthrough/document_extension.rb:105:116: C: Layout/TrailingWhitespace: Trailing whitespace detected.
         coll_node = node.at_xpath("./marc:record/marc:datafield[@tag='852']/marc:subfield[@code='c']", dlf_xml_ns)
                                                                                                                   ^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:105:121: C: Layout/LineLength: Line is too long. [122/120]
         coll_node = node.at_xpath("./marc:record/marc:datafield[@tag='852']/marc:subfield[@code='c']", dlf_xml_ns)
                                                                                                                        ^^
lib/dlf_expanded_passthrough/document_extension.rb:106:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
         local_coll_node = node.at_xpath("./ilsitem:description/ilsitem:collection/dc:title", dlf_xml_ns)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:107:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:108:53: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
         label = coll_node ? coll_node.inner_text : ""
                                                    ^^
lib/dlf_expanded_passthrough/document_extension.rb:109:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:111:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
         after = "Eisenhower"
                 ^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:113:10: C: Style/ConditionalAssignment: Use the return of the conditional for variable assignment and comparison.
         if index ...
         ^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:114:38: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
           label = label.insert index+after.length, " #{extra}"
                                     ^
lib/dlf_expanded_passthrough/document_extension.rb:116:12: C: Style/SelfAssignment: Use self-assignment shorthand +=.
           label = label + " #{extra}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:118:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:122:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:125:6: C: Style/RedundantReturn: Redundant return detected.
     return dlf
     ^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:127:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:129:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:131:5: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
       {
    ^^^
lib/dlf_expanded_passthrough/document_extension.rb:132:7: C: Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
      "dlf" => "http://diglib.org/ilsdi/1.1",
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:132:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dlf" => "http://diglib.org/ilsdi/1.1",
      ^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:132:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dlf" => "http://diglib.org/ilsdi/1.1",
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:133:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "marc" => "http://www.loc.gov/MARC21/slim",
      ^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:133:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "marc" => "http://www.loc.gov/MARC21/slim",
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:134:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "daia" => "http://ws.gbv.de/daia/",
      ^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:134:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "daia" => "http://ws.gbv.de/daia/",
                ^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:135:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "atom" => "http://www.w3.org/2005/Atom",
      ^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:135:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "atom" => "http://www.w3.org/2005/Atom",
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:136:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "opensearch" => "http://a9.com/-/spec/opensearch/1.1/",
      ^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:136:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "opensearch" => "http://a9.com/-/spec/opensearch/1.1/",
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:137:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ilsitem" => "http://purl.org/NET/ils-holdings-schema/1",
      ^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:137:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ilsitem" => "http://purl.org/NET/ils-holdings-schema/1",
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:138:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dc" => "http://purl.org/dc/elements/1.1/"
      ^^^^
lib/dlf_expanded_passthrough/document_extension.rb:138:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dc" => "http://purl.org/dc/elements/1.1/"
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:140:6: W: Layout/DefEndAlignment: end at 140, 5 is not aligned with def at 130, 4.
     end
     ^^^
lib/dlf_expanded_passthrough/document_extension.rb:141:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:145:3: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
     def self.safe_http_get(url)
  ^^^
lib/dlf_expanded_passthrough/document_extension.rb:145:6: C: Layout/IndentationConsistency: Inconsistent indentation detected.
     def self.safe_http_get(url) ...
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:145:6: W: Lint/IneffectiveAccessModifier: protected (on line 128) does not make singleton methods protected. Use protected inside a class << self block instead.
     def self.safe_http_get(url)
     ^^^
lib/dlf_expanded_passthrough/document_extension.rb:146:15: C: Style/ColonMethodCall: Do not use :: for method calls.
       Timeout::timeout(DlfExpandedPassthrough::HttpTimeout) do
              ^^
lib/dlf_expanded_passthrough/document_extension.rb:147:17: C: Security/Open: The use of Kernel#open is a serious security risk.
         return open(url).read
                ^^^^
lib/dlf_expanded_passthrough/document_extension.rb:150:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:152:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:154:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def dlf_lookup
    ^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:155:7: C: Style/RedundantBegin: Redundant begin block detected.
      begin
      ^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:157:38: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        # got copies. Just top level.
                                     ^
lib/dlf_expanded_passthrough/document_extension.rb:158:103: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        url = dlf_base_url.chomp('/') + "/availability?id_type=bib&includeItems=false&id=#{dlf_bibId}"
                                                                                                      ^
lib/dlf_expanded_passthrough/document_extension.rb:160:7: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?
      rescue Exception => e ...
      ^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:165:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:167:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:168:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def dlf_base_url
    ^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:178:5: W: Lint/IneffectiveAccessModifier: protected (on line 128) does not make singleton methods protected. Use protected inside a class << self block instead.
    def self.bulk_load(documents)
    ^^^
lib/dlf_expanded_passthrough/document_extension.rb:178:5: C: Metrics/AbcSize: Assignment Branch Condition size for bulk_load is too high. [<18, 54, 10> 57.79/15]
    def self.bulk_load(documents) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:178:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for bulk_load is too high. [12/7]
    def self.bulk_load(documents) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:178:5: C: Metrics/MethodLength: Method has too many lines. [42/10]
    def self.bulk_load(documents) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:178:5: C: Metrics/PerceivedComplexity: Perceived complexity for bulk_load is too high. [8/7]
    def self.bulk_load(documents) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:179:25: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
      start_time = Time.now
                        ^^^
lib/dlf_expanded_passthrough/document_extension.rb:180:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:186:73: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # things will be bad. okay, we'll actually throw on that, why not.
                                                                        ^
lib/dlf_expanded_passthrough/document_extension.rb:187:25: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      dlf_base_url = nil
                        ^
lib/dlf_expanded_passthrough/document_extension.rb:188:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:192:9: C: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
        next unless doc.respond_to?(:dlf_bibId)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:197:9: C: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
        raise Exception.new("bulk_load documents with different dlf_base_url's? Not going to work.") if ( (!dlf_base_url.nil?) && dlf_base_url != doc.send(:dlf_base_url) )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:197:9: C: Style/RaiseArgs: Provide an exception class and message as arguments to raise.
        raise Exception.new("bulk_load documents with different dlf_base_url's? Not going to work.") if ( (!dlf_base_url.nil?) && dlf_base_url != doc.send(:dlf_base_url) )
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:197:102: C: Style/IfUnlessModifier: Modifier form of if makes the line too long.
        raise Exception.new("bulk_load documents with different dlf_base_url's? Not going to work.") if ( (!dlf_base_url.nil?) && dlf_base_url != doc.send(:dlf_base_url) )
                                                                                                     ^^
lib/dlf_expanded_passthrough/document_extension.rb:197:105: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
        raise Exception.new("bulk_load documents with different dlf_base_url's? Not going to work.") if ( (!dlf_base_url.nil?) && dlf_base_url != doc.send(:dlf_base_url) )
                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:197:106: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        raise Exception.new("bulk_load documents with different dlf_base_url's? Not going to work.") if ( (!dlf_base_url.nil?) && dlf_base_url != doc.send(:dlf_base_url) )
                                                                                                         ^
lib/dlf_expanded_passthrough/document_extension.rb:197:107: C: Style/RedundantParentheses: Don't use parentheses around an unary operation.
        raise Exception.new("bulk_load documents with different dlf_base_url's? Not going to work.") if ( (!dlf_base_url.nil?) && dlf_base_url != doc.send(:dlf_base_url) )
                                                                                                          ^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:197:121: C: Layout/LineLength: Line is too long. [171/120]
        raise Exception.new("bulk_load documents with different dlf_base_url's? Not going to work.") if ( (!dlf_base_url.nil?) && dlf_base_url != doc.send(:dlf_base_url) )
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:197:170: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        raise Exception.new("bulk_load documents with different dlf_base_url's? Not going to work.") if ( (!dlf_base_url.nil?) && dlf_base_url != doc.send(:dlf_base_url) )
                                                                                                                                                                         ^
lib/dlf_expanded_passthrough/document_extension.rb:200:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:201:67: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # no documents, or no documents with DlfExpandedPassthrough.
                                                                  ^^
lib/dlf_expanded_passthrough/document_extension.rb:204:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      url = dlf_base_url.chomp("/") + "/availability?id_type=bib&includeItems=false&id=#{bib_ids.join(",")}"
                               ^^^
lib/dlf_expanded_passthrough/document_extension.rb:204:103: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
      url = dlf_base_url.chomp("/") + "/availability?id_type=bib&includeItems=false&id=#{bib_ids.join(",")}"
                                                                                                      ^^^
lib/dlf_expanded_passthrough/document_extension.rb:208:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:209:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:210:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:211:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        records = whole_xml.xpath("dlf:collection/dlf:record", {"dlf" => "http://diglib.org/ilsdi/1.1"})
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:211:64: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
        records = whole_xml.xpath("dlf:collection/dlf:record", {"dlf" => "http://diglib.org/ilsdi/1.1"})
                                                               ^
lib/dlf_expanded_passthrough/document_extension.rb:211:65: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        records = whole_xml.xpath("dlf:collection/dlf:record", {"dlf" => "http://diglib.org/ilsdi/1.1"})
                                                                ^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:211:74: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        records = whole_xml.xpath("dlf:collection/dlf:record", {"dlf" => "http://diglib.org/ilsdi/1.1"})
                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:211:103: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
        records = whole_xml.xpath("dlf:collection/dlf:record", {"dlf" => "http://diglib.org/ilsdi/1.1"})
                                                                                                      ^
lib/dlf_expanded_passthrough/document_extension.rb:214:9: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
        if (records.size == 0)
        ^^
lib/dlf_expanded_passthrough/document_extension.rb:214:12: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
        if (records.size == 0)
           ^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:214:13: C: Style/NumericPredicate: Use records.size.zero? instead of records.size == 0.
        if (records.size == 0)
            ^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:214:13: C: Style/ZeroLengthPredicate: Use empty? instead of size == 0.
        if (records.size == 0)
            ^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:215:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          records = whole_xml.xpath("dlf:record", {"dlf" => "http://diglib.org/ilsdi/1.1"})
                                    ^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:215:51: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
          records = whole_xml.xpath("dlf:record", {"dlf" => "http://diglib.org/ilsdi/1.1"})
                                                  ^
lib/dlf_expanded_passthrough/document_extension.rb:215:52: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          records = whole_xml.xpath("dlf:record", {"dlf" => "http://diglib.org/ilsdi/1.1"})
                                                   ^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:215:61: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          records = whole_xml.xpath("dlf:record", {"dlf" => "http://diglib.org/ilsdi/1.1"})
                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:215:90: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
          records = whole_xml.xpath("dlf:record", {"dlf" => "http://diglib.org/ilsdi/1.1"})
                                                                                         ^
lib/dlf_expanded_passthrough/document_extension.rb:217:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:218:33: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        records.each do |record|
                                ^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:224:18: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an unless.
          unless (record == whole_xml.root)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:226:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              record[attr] = value
                                  ^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:229:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:231:56: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          # in our result set, not off the current one.
                                                       ^
lib/dlf_expanded_passthrough/document_extension.rb:232:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          bib_id = record.at_xpath("./dlf:bibliographic", {"dlf" => "http://diglib.org/ilsdi/1.1"}).attribute("id").to_s
                                   ^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:232:59: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
          bib_id = record.at_xpath("./dlf:bibliographic", {"dlf" => "http://diglib.org/ilsdi/1.1"}).attribute("id").to_s
                                                          ^
lib/dlf_expanded_passthrough/document_extension.rb:232:60: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          bib_id = record.at_xpath("./dlf:bibliographic", {"dlf" => "http://diglib.org/ilsdi/1.1"}).attribute("id").to_s
                                                           ^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:232:69: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          bib_id = record.at_xpath("./dlf:bibliographic", {"dlf" => "http://diglib.org/ilsdi/1.1"}).attribute("id").to_s
                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:232:98: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
          bib_id = record.at_xpath("./dlf:bibliographic", {"dlf" => "http://diglib.org/ilsdi/1.1"}).attribute("id").to_s
                                                                                                 ^
lib/dlf_expanded_passthrough/document_extension.rb:232:111: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          bib_id = record.at_xpath("./dlf:bibliographic", {"dlf" => "http://diglib.org/ilsdi/1.1"}).attribute("id").to_s
                                                                                                              ^^^^
lib/dlf_expanded_passthrough/document_extension.rb:234:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:235:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:237:32: C: Layout/SpaceInsideParens: Space inside parentheses detected.
          new_record_doc.parse( record.to_xml ).first.parent = new_record_doc
                               ^
lib/dlf_expanded_passthrough/document_extension.rb:237:46: C: Layout/SpaceInsideParens: Space inside parentheses detected.
          new_record_doc.parse( record.to_xml ).first.parent = new_record_doc
                                             ^
lib/dlf_expanded_passthrough/document_extension.rb:239:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:240:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:241:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:243:33: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          # we've pre-loaded it.
                                ^
lib/dlf_expanded_passthrough/document_extension.rb:244:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          doc.instance_variable_set("@_to_dlf_expanded", record  )
                                    ^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:244:64: C: Layout/ExtraSpacing: Unnecessary spacing detected.
          doc.instance_variable_set("@_to_dlf_expanded", record  )
                                                               ^
lib/dlf_expanded_passthrough/document_extension.rb:244:64: C: Layout/SpaceInsideParens: Space inside parentheses detected.
          doc.instance_variable_set("@_to_dlf_expanded", record  )
                                                               ^^
lib/dlf_expanded_passthrough/document_extension.rb:244:67: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          doc.instance_variable_set("@_to_dlf_expanded", record  )
                                                                  ^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:247:7: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?
      rescue Exception => e ...
      ^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:250:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:252:67: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # any bib_ids we didn't find any records for, set to nil, to
                                                                  ^
lib/dlf_expanded_passthrough/document_extension.rb:256:58: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        doc_by_bib_id[orphaned_id].instance_variable_set("@_to_dlf_expanded", nil)
                                                         ^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:257:10: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      end
         ^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:258:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:259:108: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
      Rails.logger.info("DlfExpandedPassthrough::DocumentExtension.bulk_load (#{documents.length} bibs) (#{"%.1f" % ((Time.now.to_f - start_time.to_f) * 1000)})")
                                                                                                           ^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:259:109: C: Style/FormatStringToken: Prefer annotated tokens (like %<foo>s) over unannotated tokens (like %s).
      Rails.logger.info("DlfExpandedPassthrough::DocumentExtension.bulk_load (#{documents.length} bibs) (#{"%.1f" % ((Time.now.to_f - start_time.to_f) * 1000)})")
                                                                                                            ^^^^
lib/dlf_expanded_passthrough/document_extension.rb:259:115: C: Style/FormatString: Favor format over String#%.
      Rails.logger.info("DlfExpandedPassthrough::DocumentExtension.bulk_load (#{documents.length} bibs) (#{"%.1f" % ((Time.now.to_f - start_time.to_f) * 1000)})")
                                                                                                                  ^
lib/dlf_expanded_passthrough/document_extension.rb:259:121: C: Layout/LineLength: Line is too long. [168/120]
      Rails.logger.info("DlfExpandedPassthrough::DocumentExtension.bulk_load (#{documents.length} bibs) (#{"%.1f" % ((Time.now.to_f - start_time.to_f) * 1000)})")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:259:163: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      Rails.logger.info("DlfExpandedPassthrough::DocumentExtension.bulk_load (#{documents.length} bibs) (#{"%.1f" % ((Time.now.to_f - start_time.to_f) * 1000)})")
                                                                                                                                                                  ^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:261:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/document_extension.rb:265:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Eg:
       ^
lib/dlf_expanded_passthrough/document_extension.rb:277:7: C: Style/RedundantReturn: Redundant return detected.
      return [response, doc_list]
      ^^^^^^
lib/dlf_expanded_passthrough/document_extension.rb:279:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:2:1: C: Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
module DlfExpandedPassthrough
^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:3:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:12:36: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # in the HorizonItemInfo Servlet.
                                   ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:18:38: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # method and way to fetch children.
                                     ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:19:4: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  #
   ^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:20:3: C: Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 8).
  # SolrDocument.extension_parameters[:ils_di_base] =
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:20:54: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # SolrDocument.extension_parameters[:ils_di_base] =
                                                     ^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:21:1: C: Layout/IndentationWidth: Use 2 (not 8) spaces for indentation.
        "http://catalog.library.jhu.edu/ws/holdings"
^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:21:9: W: Lint/Void: Literal "http://catalog.library.jhu.edu/ws/holdings" used in void context.
        "http://catalog.library.jhu.edu/ws/holdings"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:21:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "http://catalog.library.jhu.edu/ws/holdings"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:26:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:27:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  module ToHoldingsExtension    ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:27:3: C: Metrics/ModuleLength: Module has too many lines. [153/100]
  module ToHoldingsExtension    ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:27:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  module ToHoldingsExtension
                            ^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:28:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:29:5: C: Metrics/AbcSize: Assignment Branch Condition size for to_holdings is too high. [<8, 32, 8> 33.94/15]
    def to_holdings ...
    ^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:29:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for to_holdings is too high. [8/7]
    def to_holdings ...
    ^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:29:5: C: Metrics/MethodLength: Method has too many lines. [28/10]
    def to_holdings ...
    ^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:29:5: C: Metrics/PerceivedComplexity: Perceived complexity for to_holdings is too high. [8/7]
    def to_holdings ...
    ^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:31:28: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
        bench_start = Time.now
                           ^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:32:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:34:11: C: Style/GuardClause: Use a guard clause (return fake_error_holdings if to_dlf_expanded.nil?) instead of wrapping the code inside a conditional expression.
          if to_dlf_expanded.nil?
          ^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:37:42: C: Layout/TrailingWhitespace: Trailing whitespace detected.
            # the error holdings message.
                                         ^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:40:49: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            orig_xml = to_dlf_expanded.at_xpath("dlf:record", ToHoldingsExtension.xml_namespaces) #nokogiri assumed
                                                ^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:40:99: C: Layout/LeadingCommentSpace: Missing space after #.
            orig_xml = to_dlf_expanded.at_xpath("dlf:record", ToHoldingsExtension.xml_namespaces) #nokogiri assumed
                                                                                                  ^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:42:9: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?
        rescue Exception => e ...
        ^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:43:67: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
          Rails.logger.error("Could not fetch holdings for #{self["id"]}, #{e.class} #{e.message}")
                                                                  ^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:43:100: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          Rails.logger.error("Could not fetch holdings for #{self["id"]}, #{e.class} #{e.message}")
                                                                                                   ^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:46:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:48:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:50:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:51:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        list = orig_xml.xpath("dlf:holdings/dlf:holdingset/dlf:holdingsrec", ToHoldingsExtension.xml_namespaces)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:52:12: C: Style/NumericPredicate: Use list.length.zero? instead of list.length == 0.
        if list.length == 0
           ^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:52:12: C: Style/ZeroLengthPredicate: Use empty? instead of length == 0.
        if list.length == 0
           ^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:54:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          list = orig_xml.xpath("dlf:items/dlf:item", ToHoldingsExtension.xml_namespaces)
                                ^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:56:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:57:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:59:9: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            h = Holding.new
        ^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:60:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:62:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:64:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:65:26: C: Layout/TrailingWhitespace: Trailing whitespace detected.
            holdings << h
                         ^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:66:12: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        end
           ^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:67:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:68:59: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
        Rails.logger.debug("to_holdings id=#{self[:id]}(#{"%.1f" % ((Time.now.to_f - bench_start.to_f)*1000)}ms)")
                                                          ^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:68:60: C: Style/FormatStringToken: Prefer annotated tokens (like %<foo>s) over unannotated tokens (like %s).
        Rails.logger.debug("to_holdings id=#{self[:id]}(#{"%.1f" % ((Time.now.to_f - bench_start.to_f)*1000)}ms)")
                                                           ^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:68:66: C: Style/FormatString: Favor format over String#%.
        Rails.logger.debug("to_holdings id=#{self[:id]}(#{"%.1f" % ((Time.now.to_f - bench_start.to_f)*1000)}ms)")
                                                                 ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:68:103: C: Layout/SpaceAroundOperators: Surrounding space missing for operator *.
        Rails.logger.debug("to_holdings id=#{self[:id]}(#{"%.1f" % ((Time.now.to_f - bench_start.to_f)*1000)}ms)")
                                                                                                      ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:69:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:72:7: C: Style/RedundantReturn: Redundant return detected.
      return @_to_holdings
      ^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:75:1: C: Layout/EmptyLines: Extra blank line detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:76:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def to_holdings_for_holdingset(copy_id)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:76:5: C: Metrics/MethodLength: Method has too many lines. [15/10]
    def to_holdings_for_holdingset(copy_id) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:79:59: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        orig_xml = to_dlf_expanded_for_holdingset(copy_id)
                                                          ^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:81:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          list = orig_xml.xpath("dlf:record/dlf:items/dlf:item", ToHoldingsExtension.xml_namespaces)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:87:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:89:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:90:26: C: Layout/TrailingWhitespace: Trailing whitespace detected.
            holdings << h
                         ^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:97:50: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # fetch a single item, return Holding object.
                                                 ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:99:49: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # to apply custom logic to the request form.
                                                ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:100:5: C: Metrics/AbcSize: Assignment Branch Condition size for fetch_item_holding is too high. [<6, 20, 2> 20.98/15]
    def self.fetch_item_holding(item_id)        ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:100:5: C: Metrics/MethodLength: Method has too many lines. [13/10]
    def self.fetch_item_holding(item_id)        ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:100:41: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    def self.fetch_item_holding(item_id)
                                        ^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:102:40: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # architecture has become a mess.
                                       ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:105:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        url = base.chomp("/") + "/availability?id_type=item&id=#{item_id}"
                         ^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:107:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:109:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:111:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        item = noko.at_xpath("dlf:record/dlf:items/dlf:item", DlfExpandedPassthrough::ToHoldingsExtension.xml_namespaces)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:111:121: C: Layout/LineLength: Line is too long. [122/120]
        item = noko.at_xpath("dlf:record/dlf:items/dlf:item", DlfExpandedPassthrough::ToHoldingsExtension.xml_namespaces)
                                                                                                                        ^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:111:122: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        item = noko.at_xpath("dlf:record/dlf:items/dlf:item", DlfExpandedPassthrough::ToHoldingsExtension.xml_namespaces)
                                                                                                                         ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:112:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:114:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:116:7: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?
      rescue Exception => e ...
      ^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:117:64: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
        Rails.logger.error("Could not load item with id #{self["id"]}, #{e.class} #{e.message}")
                                                               ^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:118:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:121:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:122:7: C: Style/RedundantReturn: Redundant return detected.
      return h
      ^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:127:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "dlf" => "http://diglib.org/ilsdi/1.1",
        ^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:127:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "dlf" => "http://diglib.org/ilsdi/1.1",
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:128:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "marc" => "http://www.loc.gov/MARC21/slim",
        ^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:128:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "marc" => "http://www.loc.gov/MARC21/slim",
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:129:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "daia" => "http://ws.gbv.de/daia/",
        ^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:129:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "daia" => "http://ws.gbv.de/daia/",
                  ^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:130:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "atom" => "http://www.w3.org/2005/Atom",
        ^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:130:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "atom" => "http://www.w3.org/2005/Atom",
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:131:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "opensearch" => "http://a9.com/-/spec/opensearch/1.1/",
        ^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:131:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "opensearch" => "http://a9.com/-/spec/opensearch/1.1/",
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:132:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "ilsitem" => "http://purl.org/NET/ils-holdings-schema/1",
        ^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:132:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "ilsitem" => "http://purl.org/NET/ils-holdings-schema/1",
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:133:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "dc" => "http://purl.org/dc/elements/1.1/"
        ^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:133:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "dc" => "http://purl.org/dc/elements/1.1/"
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:134:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      }
       ^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:138:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:143:5: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        fake_holding = Holding.new
    ^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:144:49: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        fake_holding.collection.display_label = "Error fetching holdings!"
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:145:9: C: Style/RedundantReturn: Redundant return detected.
        return [fake_holding]
        ^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:148:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:149:56: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # Just instance method conveneince on class method.
                                                       ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:150:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def fill_in_holding_from_xml(holding, xml_entity)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:151:5: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
       DlfExpandedPassthrough::ToHoldingsExtension.fill_in_holding_from_xml(holding, xml_entity)
    ^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:151:97: C: Layout/TrailingWhitespace: Trailing whitespace detected.
       DlfExpandedPassthrough::ToHoldingsExtension.fill_in_holding_from_xml(holding, xml_entity)
                                                                                                ^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:156:70: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # to fill in a holdings record. Mutates holding record passed in.
                                                                     ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:157:5: W: Lint/IneffectiveAccessModifier: protected (on line 137) does not make singleton methods protected. Use protected inside a class << self block instead.
    def self.fill_in_holding_from_xml(holding, xml_entity)
    ^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:157:5: C: Metrics/AbcSize: Assignment Branch Condition size for fill_in_holding_from_xml is too high. [<16, 46, 8> 49.36/15]
    def self.fill_in_holding_from_xml(holding, xml_entity) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:157:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for fill_in_holding_from_xml is too high. [8/7]
    def self.fill_in_holding_from_xml(holding, xml_entity) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:157:5: C: Metrics/MethodLength: Method has too many lines. [57/10]
    def self.fill_in_holding_from_xml(holding, xml_entity) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:158:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body beginning.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:159:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      holding.has_children = true if xml_entity.name == "holdingsrec"
                                                        ^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:163:56: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      holding.requestable = true if xml_entity.name != "holdingsrec"
                                                       ^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:166:9: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
        "dlf:simpleavailability/dlf:identifier",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:166:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "dlf:simpleavailability/dlf:identifier",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:167:9: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
        "marc:record/marc:controlfield[@tag='001']"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:167:52: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        "marc:record/marc:controlfield[@tag='001']"
                                                   ^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:168:7: C: Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the same line as the last argument when opening brace is on the same line as the first argument.
      ) || xml_entity.attribute("id")
      ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:168:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      ) || xml_entity.attribute("id")
                                ^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:169:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:170:39: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      holding.location.display_label =
                                      ^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:171:11: C: Layout/AssignmentIndentation: Indent the first line of the right-hand-side of a multi-line assignment.
          first_non_blank_xpath(xml_entity, ...
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:171:11: C: Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
          first_non_blank_xpath(xml_entity, ...
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:172:11: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
          "marc:record/marc:datafield[@tag='852']/marc:subfield[@code='b']",
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:173:11: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
          "ilsitem:description/ilsitem:location/dc:title",
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:173:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          "ilsitem:description/ilsitem:location/dc:title",
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:174:11: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
          "daia:daia/daia:document/daia:item/daia:department",
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:174:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          "daia:daia/daia:document/daia:item/daia:department",
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:175:11: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
          "dlf:simpleavailability/dlf:location"
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:175:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          "dlf:simpleavailability/dlf:location"
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:176:11: C: Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the same line as the last argument when opening brace is on the same line as the first argument.
          )
          ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:178:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        first_non_blank_xpath(xml_entity, "ilsitem:description/ilsitem:location/dc:identifier")
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:179:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:180:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:182:41: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      holding.collection.display_label =
                                        ^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:184:9: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
        "marc:record/marc:datafield[@tag='852']/marc:subfield[@code='c']",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:185:9: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
        "ilsitem:description/ilsitem:collection/dc:title",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:185:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "ilsitem:description/ilsitem:collection/dc:title",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:186:9: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
        "daia:daia/daia:document/daia:item/daia:storage"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:186:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "daia:daia/daia:document/daia:item/daia:storage"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:187:9: C: Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the same line as the last argument when opening brace is on the same line as the first argument.
        )
        ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:188:41: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      holding.collection.internal_code =
                                        ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:189:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        first_non_blank_xpath(xml_entity, "ilsitem:description/ilsitem:collection/dc:identifier")
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:189:98: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        first_non_blank_xpath(xml_entity, "ilsitem:description/ilsitem:collection/dc:identifier")
                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:189:121: C: Layout/LineLength: Line is too long. [121/120]
        first_non_blank_xpath(xml_entity, "ilsitem:description/ilsitem:collection/dc:identifier")
                                                                                                                        ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:190:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:192:62: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      holding.call_number = first_non_blank_xpath(xml_entity,               "marc:record/marc:datafield[@tag='852']/marc:subfield[@code='h']",
                                                             ^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:192:121: C: Layout/LineLength: Line is too long. [142/120]
      holding.call_number = first_non_blank_xpath(xml_entity,               "marc:record/marc:datafield[@tag='852']/marc:subfield[@code='h']",
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:193:7: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
      "daia:daia/daia:document/daia:item/daia:label"
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:193:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "daia:daia/daia:document/daia:item/daia:label"
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:194:7: C: Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the same line as the last argument when opening brace is on the same line as the first argument.
      )
      ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:195:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:201:57: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      holding.notes << first_non_blank_xpath(xml_entity,               "marc:record/marc:datafield[@tag='852']/marc:subfield[@code='z']")
                                                        ^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:201:121: C: Layout/LineLength: Line is too long. [137/120]
      holding.notes << first_non_blank_xpath(xml_entity,               "marc:record/marc:datafield[@tag='852']/marc:subfield[@code='z']")
                                                                                                                        ^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:203:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:204:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:205:72: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      holding.status.internal_code = first_non_blank_xpath(xml_entity, "ilsitem:description/ilsitem:itemStatus/dc:identifier")
                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:205:121: C: Layout/LineLength: Line is too long. [126/120]
      holding.status.internal_code = first_non_blank_xpath(xml_entity, "ilsitem:description/ilsitem:itemStatus/dc:identifier")
                                                                                                                        ^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:206:76: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      holding.status.dlf_expanded_code = first_non_blank_xpath(xml_entity, "dlf:simpleavailability/dlf:availabilitystatus")
                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:206:121: C: Layout/LineLength: Line is too long. [123/120]
      holding.status.dlf_expanded_code = first_non_blank_xpath(xml_entity, "dlf:simpleavailability/dlf:availabilitystatus")
                                                                                                                        ^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:207:71: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      holding.status.display_label = first_non_blank_xpath(xml_entity,
                                                                      ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:208:9: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
        "dlf:simpleavailabilty/dlf:availabilitymsg",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:208:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "dlf:simpleavailabilty/dlf:availabilitymsg",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:209:9: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
        "ilsitem:description/ilsitem:itemStatus/dc:title"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:209:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "ilsitem:description/ilsitem:itemStatus/dc:title"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:210:7: C: Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the same line as the last argument when opening brace is on the same line as the first argument.
      )
      ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:211:7: C: Layout/LeadingCommentSpace: Missing space after #.
      #holding.status.display_label = "Multiple items" if holding.status.display_label.blank? && holding.has_children?
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:213:56: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      due_date_str = first_non_blank_xpath(xml_entity, "dlf:simpleavailability/dlf:dateavailable")
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:213:99: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      due_date_str = first_non_blank_xpath(xml_entity, "dlf:simpleavailability/dlf:dateavailable")
                                                                                                  ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:215:9: C: Style/ConditionalAssignment: Use the return of the conditional for variable assignment and comparison.
        if due_date_str =~ /T/ ...
        ^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:216:11: C: Layout/LeadingCommentSpace: Missing space after #.
          #it's got a time, use DateTime
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:217:28: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
          holding.due_date =  DateTime.strptime(due_date_str, "%Y-%m-%dT%H:%M:%S")
                           ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:217:29: C: Layout/ExtraSpacing: Unnecessary spacing detected.
          holding.due_date =  DateTime.strptime(due_date_str, "%Y-%m-%dT%H:%M:%S")
                            ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:217:63: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          holding.due_date =  DateTime.strptime(due_date_str, "%Y-%m-%dT%H:%M:%S")
                                                              ^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:217:83: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          holding.due_date =  DateTime.strptime(due_date_str, "%Y-%m-%dT%H:%M:%S")
                                                                                  ^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:219:69: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          holding.due_date = Date.strptime(due_date_str, '%Y-%m-%d')
                                                                    ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:220:12: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        end
           ^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:222:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:223:121: C: Layout/LineLength: Line is too long. [157/120]
      xml_entity.xpath("marc:record/marc:datafield[@tag='866' or @tag='867' or @tag='868']", ToHoldingsExtension.xml_namespaces).each do |marc_run_statement|
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:224:52: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        holding.run_statements << Holding::Run.new(
                                                   ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:225:11: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          :marc_type => marc_run_statement.attribute("tag").to_s,
          ^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:225:54: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          :marc_type => marc_run_statement.attribute("tag").to_s,
                                                     ^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:226:11: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          :display_statement => first_non_blank_xpath(marc_run_statement, "marc:subfield[@code='a']"),
          ^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:227:11: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          :note => first_non_blank_xpath(marc_run_statement, "marc:subfield[@code='z']")
          ^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:229:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:231:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:232:7: C: Layout/LeadingCommentSpace: Missing space after #.
      #localInfo is where we keep barcode and rmst, using Horizon
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:233:46: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # column names: ibarcode ; moravia_rmst
                                             ^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:234:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      xml_entity.xpath("ilsitem:description/ilsitem:localInfo", ToHoldingsExtension.xml_namespaces).each do |node|
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:235:27: C: Layout/SpaceInsideReferenceBrackets: Do not use space inside reference brackets.
        holding.localInfo[ node["key"].to_s ] = node.text
                          ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:235:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        holding.localInfo[ node["key"].to_s ] = node.text
                                ^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:235:44: C: Layout/SpaceInsideReferenceBrackets: Do not use space inside reference brackets.
        holding.localInfo[ node["key"].to_s ] = node.text
                                           ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:238:7: C: Style/RedundantReturn: Redundant return detected.
      return holding
      ^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:240:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:242:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #JHU-specific logic, some holdings we'd like to suppress, because
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:243:41: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # they are fake internet 'holdings'.
                                        ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:244:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def suppress_holding?(holding)
    ^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:247:46: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # has a dozen or more collection codes.
                                             ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:248:7: C: Layout/SpaceAfterNot: Do not leave space between ! and its argument.
      ! (["Welch Online Journal", "Internet", "Internet resource", "Electronic Resources -- Welch Medical Library", "Welch Online Journals", "Gibson - Electronic Journals", "Gibson-Electronic Books or Documents", "Internet resource", "Online Book", "Friedheim -- Electronic Access", "OCLC Electronic Collections Online", /Electronic Resource/i, /Online Book/i ].find {|test| test === holding.collection.display_label  }).nil?
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:248:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      ! (["Welch Online Journal", "Internet", "Internet resource", "Electronic Resources -- Welch Medical Library", "Welch Online Journals", "Gibson - Electronic Journals", "Gibson-Electronic Books or Documents", "Internet resource", "Online Book", "Friedheim -- Electronic Access", "OCLC Electronic Collections Online", /Electronic Resource/i, /Online Book/i ].find {|test| test === holding.collection.display_label  }).nil?
          ^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:248:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      ! (["Welch Online Journal", "Internet", "Internet resource", "Electronic Resources -- Welch Medical Library", "Welch Online Journals", "Gibson - Electronic Journals", "Gibson-Electronic Books or Documents", "Internet resource", "Online Book", "Friedheim -- Electronic Access", "OCLC Electronic Collections Online", /Electronic Resource/i, /Online Book/i ].find {|test| test === holding.collection.display_label  }).nil?
                                  ^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:248:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      ! (["Welch Online Journal", "Internet", "Internet resource", "Electronic Resources -- Welch Medical Library", "Welch Online Journals", "Gibson - Electronic Journals", "Gibson-Electronic Books or Documents", "Internet resource", "Online Book", "Friedheim -- Electronic Access", "OCLC Electronic Collections Online", /Electronic Resource/i, /Online Book/i ].find {|test| test === holding.collection.display_label  }).nil?
                                              ^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:248:68: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      ! (["Welch Online Journal", "Internet", "Internet resource", "Electronic Resources -- Welch Medical Library", "Welch Online Journals", "Gibson - Electronic Journals", "Gibson-Electronic Books or Documents", "Internet resource", "Online Book", "Friedheim -- Electronic Access", "OCLC Electronic Collections Online", /Electronic Resource/i, /Online Book/i ].find {|test| test === holding.collection.display_label  }).nil?
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:248:117: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      ! (["Welch Online Journal", "Internet", "Internet resource", "Electronic Resources -- Welch Medical Library", "Welch Online Journals", "Gibson - Electronic Journals", "Gibson-Electronic Books or Documents", "Internet resource", "Online Book", "Friedheim -- Electronic Access", "OCLC Electronic Collections Online", /Electronic Resource/i, /Online Book/i ].find {|test| test === holding.collection.display_label  }).nil?
                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:248:121: C: Layout/LineLength: Line is too long. [425/120]
      ! (["Welch Online Journal", "Internet", "Internet resource", "Electronic Resources -- Welch Medical Library", "Welch Online Journals", "Gibson - Electronic Journals", "Gibson-Electronic Books or Documents", "Internet resource", "Online Book", "Friedheim -- Electronic Access", "OCLC Electronic Collections Online", /Electronic Resource/i, /Online Book/i ].find {|test| test === holding.collection.display_label  }).nil?
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:248:142: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      ! (["Welch Online Journal", "Internet", "Internet resource", "Electronic Resources -- Welch Medical Library", "Welch Online Journals", "Gibson - Electronic Journals", "Gibson-Electronic Books or Documents", "Internet resource", "Online Book", "Friedheim -- Electronic Access", "OCLC Electronic Collections Online", /Electronic Resource/i, /Online Book/i ].find {|test| test === holding.collection.display_label  }).nil?
                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:248:174: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      ! (["Welch Online Journal", "Internet", "Internet resource", "Electronic Resources -- Welch Medical Library", "Welch Online Journals", "Gibson - Electronic Journals", "Gibson-Electronic Books or Documents", "Internet resource", "Online Book", "Friedheim -- Electronic Access", "OCLC Electronic Collections Online", /Electronic Resource/i, /Online Book/i ].find {|test| test === holding.collection.display_label  }).nil?
                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:248:214: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      ! (["Welch Online Journal", "Internet", "Internet resource", "Electronic Resources -- Welch Medical Library", "Welch Online Journals", "Gibson - Electronic Journals", "Gibson-Electronic Books or Documents", "Internet resource", "Online Book", "Friedheim -- Electronic Access", "OCLC Electronic Collections Online", /Electronic Resource/i, /Online Book/i ].find {|test| test === holding.collection.display_label  }).nil?
                                                                                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:248:235: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      ! (["Welch Online Journal", "Internet", "Internet resource", "Electronic Resources -- Welch Medical Library", "Welch Online Journals", "Gibson - Electronic Journals", "Gibson-Electronic Books or Documents", "Internet resource", "Online Book", "Friedheim -- Electronic Access", "OCLC Electronic Collections Online", /Electronic Resource/i, /Online Book/i ].find {|test| test === holding.collection.display_label  }).nil?
                                                                                                                                                                                                                                          ^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:248:250: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      ! (["Welch Online Journal", "Internet", "Internet resource", "Electronic Resources -- Welch Medical Library", "Welch Online Journals", "Gibson - Electronic Journals", "Gibson-Electronic Books or Documents", "Internet resource", "Online Book", "Friedheim -- Electronic Access", "OCLC Electronic Collections Online", /Electronic Resource/i, /Online Book/i ].find {|test| test === holding.collection.display_label  }).nil?
                                                                                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:248:284: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      ! (["Welch Online Journal", "Internet", "Internet resource", "Electronic Resources -- Welch Medical Library", "Welch Online Journals", "Gibson - Electronic Journals", "Gibson-Electronic Books or Documents", "Internet resource", "Online Book", "Friedheim -- Electronic Access", "OCLC Electronic Collections Online", /Electronic Resource/i, /Online Book/i ].find {|test| test === holding.collection.display_label  }).nil?
                                                                                                                                                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:248:360: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
      ! (["Welch Online Journal", "Internet", "Internet resource", "Electronic Resources -- Welch Medical Library", "Welch Online Journals", "Gibson - Electronic Journals", "Gibson-Electronic Books or Documents", "Internet resource", "Online Book", "Friedheim -- Electronic Access", "OCLC Electronic Collections Online", /Electronic Resource/i, /Online Book/i ].find {|test| test === holding.collection.display_label  }).nil?
                                                                                                                                                                                                                                                                                                                                                                       ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:248:368: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
      ! (["Welch Online Journal", "Internet", "Internet resource", "Electronic Resources -- Welch Medical Library", "Welch Online Journals", "Gibson - Electronic Journals", "Gibson-Electronic Books or Documents", "Internet resource", "Online Book", "Friedheim -- Electronic Access", "OCLC Electronic Collections Online", /Electronic Resource/i, /Online Book/i ].find {|test| test === holding.collection.display_label  }).nil?
                                                                                                                                                                                                                                                                                                                                                                               ^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:248:381: C: Style/CaseEquality: Avoid the use of the case equality operator ===.
      ! (["Welch Online Journal", "Internet", "Internet resource", "Electronic Resources -- Welch Medical Library", "Welch Online Journals", "Gibson - Electronic Journals", "Gibson-Electronic Books or Documents", "Internet resource", "Online Book", "Friedheim -- Electronic Access", "OCLC Electronic Collections Online", /Electronic Resource/i, /Online Book/i ].find {|test| test === holding.collection.display_label  }).nil?
                                                                                                                                                                                                                                                                                                                                                                                            ^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:248:417: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      ! (["Welch Online Journal", "Internet", "Internet resource", "Electronic Resources -- Welch Medical Library", "Welch Online Journals", "Gibson - Electronic Journals", "Gibson-Electronic Books or Documents", "Internet resource", "Online Book", "Friedheim -- Electronic Access", "OCLC Electronic Collections Online", /Electronic Resource/i, /Online Book/i ].find {|test| test === holding.collection.display_label  }).nil?
                                                                                                                                                                                                                                                                                                                                                                                                                                ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:250:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:251:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:254:33: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # returns nil if none found.
                                ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:255:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def self.first_non_blank_xpath(*args)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:255:5: W: Lint/IneffectiveAccessModifier: protected (on line 137) does not make singleton methods protected. Use protected inside a class << self block instead.
    def self.first_non_blank_xpath(*args)
    ^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:257:35: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
      xpaths = args[1..args.length+1]
                                  ^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:260:27: C: Rails/Present: Use if value.present? instead of unless value.blank?.
        return value.text unless value.blank?
                          ^^^^^^^^^^^^^^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:262:7: C: Style/RedundantReturn: Redundant return detected.
      return nil
      ^^^^^^
lib/dlf_expanded_passthrough/to_holdings_extension.rb:264:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:265:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/dlf_expanded_passthrough/to_holdings_extension.rb:268:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/hip_config.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Some class-level methods for reading the config/hip.yml initializer ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_config.rb:5:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/hip_config.rb:7:5: C: Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 2).
    #Run config file threw ERB before loading the YAML
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_config.rb:7:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #Run config file threw ERB before loading the YAML
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_config.rb:8:1: C: Layout/IndentationStyle: Tab detected in indentation.
		@parsed_yaml ||= YAML.load(ERB.new(File.read("config/hip.yml")).result)
^^
lib/hip_config.rb:8:3: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
		@parsed_yaml ||= YAML.load(ERB.new(File.read("config/hip.yml")).result)

lib/hip_config.rb:8:25: C: Security/YAMLLoad: Prefer using YAML.safe_load over YAML.load.
		@parsed_yaml ||= YAML.load(ERB.new(File.read("config/hip.yml")).result)
                        ^^^^
lib/hip_config.rb:8:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		@parsed_yaml ||= YAML.load(ERB.new(File.read("config/hip.yml")).result)
                                               ^^^^^^^^^^^^^^^^
lib/hip_config.rb:10:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def self.parsed_yaml
  ^^^^^^^^^^^^^^^^^^^^
lib/hip_config.rb:11:5: C: Style/RedundantSelf: Redundant self detected.
    self.instance.parsed_yaml
    ^^^^^^^^^^^^^
lib/hip_config.rb:13:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/hip_config.rb:15:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    parsed_yaml[Rails.env]["host"]
                           ^^^^^^
lib/hip_config.rb:15:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    parsed_yaml[Rails.env]["host"]
                                  ^^^^
lib/hip_config.rb:17:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/hip_config.rb:19:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    parsed_yaml[Rails.env]["borrower_ws_auth"]
                           ^^^^^^^^^^^^^^^^^^
lib/hip_config.rb:21:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/hip_config.rb:25:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/hip_config.rb:28:14: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # location.
             ^
lib/hip_config.rb:30:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if (ws_direct = parsed_yaml[Rails.env]["web_service_url"])
                                           ^^^^^^^^^^^^^^^^^
lib/hip_config.rb:36:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/hip_config.rb:43:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/hip_pilot.rb:11:1: C: Layout/EmptyLines: Extra blank line detected.
lib/hip_pilot.rb:14:1: C: Metrics/ClassLength: Class has too many lines. [364/100]
class HipPilot ...
^^^^^^^^^^^^^^
lib/hip_pilot.rb:17:3: C: Style/ClassVars: Replace class var @@timeout with a class instance var.
  @@timeout = 10 # seconds. HIP is slow sometimes.
  ^^^^^^^^^
lib/hip_pilot.rb:18:3: C: Style/ClassVars: Replace class var @@renewal_timeout with a class instance var.
  @@renewal_timeout = 120 # seconds, renew all can take a really long time, sorry.
  ^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:20:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #need to provide the current logged in BL user, so we can get HIP borrower#
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:21:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #etc if needed. Need to provide the current controller session object,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:24:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body beginning.
lib/hip_pilot.rb:27:55: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # raise, and we'll give them a nice error message.
                                                      ^
lib/hip_pilot.rb:28:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if JHConfig.params[:disable_hip]
    ^^
lib/hip_pilot.rb:28:37: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    if JHConfig.params[:disable_hip]
                                    ^
lib/hip_pilot.rb:32:1: C: Layout/EmptyLines: Extra blank line detected.
lib/hip_pilot.rb:37:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
lib/hip_pilot.rb:41:3: C: Metrics/AbcSize: Assignment Branch Condition size for items_out is too high. [<2, 23, 2> 23.17/15]
  def items_out ...
  ^^^^^^^^^^^^^
lib/hip_pilot.rb:41:3: C: Metrics/MethodLength: Method has too many lines. [18/10]
  def items_out ...
  ^^^^^^^^^^^^^
lib/hip_pilot.rb:44:1: C: Layout/EmptyLines: Extra blank line detected.
lib/hip_pilot.rb:45:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    xml.xpath("/*/itemsoutdata/itemout").collect do |ixml|
              ^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:47:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :bib_id => at_xpath_text(ixml, "key"),
        ^^^^^^^^^^
lib/hip_pilot.rb:47:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :bib_id => at_xpath_text(ixml, "key"),
                                       ^^^^^
lib/hip_pilot.rb:48:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :item_id => at_xpath_text(ixml, "ikey"),
        ^^^^^^^^^^^
lib/hip_pilot.rb:48:41: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :item_id => at_xpath_text(ixml, "ikey"),
                                        ^^^^^^
lib/hip_pilot.rb:49:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :item_barcode => at_xpath_text(ixml, "holdingkey"),
        ^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:49:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :item_barcode => at_xpath_text(ixml, "holdingkey"),
                                             ^^^^^^^^^^^^
lib/hip_pilot.rb:50:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :date_initiated => safe_date_parse(ixml.at_xpath("ckodate")),
        ^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:50:58: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :date_initiated => safe_date_parse(ixml.at_xpath("ckodate")),
                                                         ^^^^^^^^^
lib/hip_pilot.rb:51:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :date_complete =>
        ^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:52:11: C: Style/UnlessElse: Do not use unless with else. Rewrite these with the positive case first.
          unless (time = ixml.at_xpath("duetime").text).blank? ...
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:52:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          unless (time = ixml.at_xpath("duetime").text).blank?
                                       ^^^^^^^^^
lib/hip_pilot.rb:53:41: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            Time.strptime(ixml.at_xpath("duedate").text() + " " + time, "%m/%d/%Y %H:%M %p")
                                        ^^^^^^^^^
lib/hip_pilot.rb:53:56: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
            Time.strptime(ixml.at_xpath("duedate").text() + " " + time, "%m/%d/%Y %H:%M %p")
                                                       ^^
lib/hip_pilot.rb:53:61: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            Time.strptime(ixml.at_xpath("duedate").text() + " " + time, "%m/%d/%Y %H:%M %p")
                                                            ^^^
lib/hip_pilot.rb:53:73: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            Time.strptime(ixml.at_xpath("duedate").text() + " " + time, "%m/%d/%Y %H:%M %p")
                                                                        ^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:55:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            safe_date_parse(ixml.at_xpath("duedate"))
                                          ^^^^^^^^^
lib/hip_pilot.rb:57:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :times_renewed => at_xpath_text(ixml, "numrenewals"),
        ^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:57:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :times_renewed => at_xpath_text(ixml, "numrenewals"),
                                              ^^^^^^^^^^^^^
lib/hip_pilot.rb:58:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :label => at_xpath_text(ixml, "disptitle"),
        ^^^^^^^^^
lib/hip_pilot.rb:58:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :label => at_xpath_text(ixml, "disptitle"),
                                      ^^^^^^^^^^^
lib/hip_pilot.rb:62:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :collection_str => at_xpath_text(ixml, "cell[1]/data/text")
        ^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:62:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :collection_str => at_xpath_text(ixml, "cell[1]/data/text")
                                               ^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:68:3: C: Metrics/AbcSize: Assignment Branch Condition size for requests_pending is too high. [<1, 30, 0> 30.02/15]
  def requests_pending ...
  ^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:68:3: C: Metrics/MethodLength: Method has too many lines. [17/10]
  def requests_pending ...
  ^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:71:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    xml.xpath("/*/holdsdata/waiting/waitingitem").collect do |ixml|
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:73:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :bib_id => ixml.at_xpath("key").text(),
        ^^^^^^^^^^
lib/hip_pilot.rb:73:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :bib_id => ixml.at_xpath("key").text(),
                                 ^^^^^
lib/hip_pilot.rb:73:45: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
        :bib_id => ixml.at_xpath("key").text(),
                                            ^^
lib/hip_pilot.rb:74:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :item_id => ixml.at_xpath("itemkey").text(),
        ^^^^^^^^^^^
lib/hip_pilot.rb:74:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :item_id => ixml.at_xpath("itemkey").text(),
                                  ^^^^^^^^^
lib/hip_pilot.rb:74:50: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
        :item_id => ixml.at_xpath("itemkey").text(),
                                                 ^^
lib/hip_pilot.rb:75:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :queue_position => ixml.at_xpath("queuepos").text().to_i,
        ^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:75:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :queue_position => ixml.at_xpath("queuepos").text().to_i,
                                         ^^^^^^^^^^
lib/hip_pilot.rb:75:58: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
        :queue_position => ixml.at_xpath("queuepos").text().to_i,
                                                         ^^
lib/hip_pilot.rb:76:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :date_initiated => safe_date_parse(ixml.at_xpath("dateplaced")),
        ^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:76:58: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :date_initiated => safe_date_parse(ixml.at_xpath("dateplaced")),
                                                         ^^^^^^^^^^^^
lib/hip_pilot.rb:77:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :date_complete => safe_date_parse(ixml.at_xpath("dateexpires")),
        ^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:77:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :date_complete => safe_date_parse(ixml.at_xpath("dateexpires")),
                                                        ^^^^^^^^^^^^^
lib/hip_pilot.rb:78:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :pickup_location => ixml.at_xpath("pickuploc").text(),
        ^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:78:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :pickup_location => ixml.at_xpath("pickuploc").text(),
                                          ^^^^^^^^^^^
lib/hip_pilot.rb:78:60: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
        :pickup_location => ixml.at_xpath("pickuploc").text(),
                                                           ^^
lib/hip_pilot.rb:79:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :label => ixml.at_xpath("disptitle").text(),
        ^^^^^^^^^
lib/hip_pilot.rb:79:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :label => ixml.at_xpath("disptitle").text(),
                                ^^^^^^^^^^^
lib/hip_pilot.rb:79:50: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
        :label => ixml.at_xpath("disptitle").text(),
                                                 ^^
lib/hip_pilot.rb:80:9: C: Layout/LeadingCommentSpace: Missing space after #.
        #these are fragile xpaths,oh well.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:81:9: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
        :collection_str  => ixml.at_xpath("cell[1]/data/text").text(),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:81:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :collection_str  => ixml.at_xpath("cell[1]/data/text").text(),
        ^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:81:26: C: Layout/SpaceAroundOperators: Operator => should be surrounded by a single space.
        :collection_str  => ixml.at_xpath("cell[1]/data/text").text(),
                         ^^
lib/hip_pilot.rb:81:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :collection_str  => ixml.at_xpath("cell[1]/data/text").text(),
                                          ^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:81:68: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
        :collection_str  => ixml.at_xpath("cell[1]/data/text").text(),
                                                                   ^^
lib/hip_pilot.rb:82:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :item_status => ixml.at_xpath("cell[3]/data/text").text(),
        ^^^^^^^^^^^^^^^
lib/hip_pilot.rb:82:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :item_status => ixml.at_xpath("cell[3]/data/text").text(),
                                      ^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:82:64: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
        :item_status => ixml.at_xpath("cell[3]/data/text").text(),
                                                               ^^
lib/hip_pilot.rb:83:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :due_date => safe_date_parse(ixml.at_xpath("cell[4]/data"))
        ^^^^^^^^^^^^
lib/hip_pilot.rb:83:52: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :due_date => safe_date_parse(ixml.at_xpath("cell[4]/data"))
                                                   ^^^^^^^^^^^^^^
lib/hip_pilot.rb:84:8: C: Layout/ClosingParenthesisIndentation: Indent ) to column 6 (not 7)
       )
       ^
lib/hip_pilot.rb:85:5: C: Style/MultilineBlockChain: Avoid multi-line chains of blocks.
    end.sort do |a, b|
    ^^^^^^^^
lib/hip_pilot.rb:90:3: C: Metrics/AbcSize: Assignment Branch Condition size for requests_available is too high. [<1, 21, 0> 21.02/15]
  def requests_available ...
  ^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:90:3: C: Metrics/MethodLength: Method has too many lines. [13/10]
  def requests_available ...
  ^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:92:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    xml.xpath("/*/holdsdata/ready/readyitem").collect do |ixml|
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:94:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :bib_id => ixml.at_xpath("key").text(),
        ^^^^^^^^^^
lib/hip_pilot.rb:94:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :bib_id => ixml.at_xpath("key").text(),
                                 ^^^^^
lib/hip_pilot.rb:94:45: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
        :bib_id => ixml.at_xpath("key").text(),
                                            ^^
lib/hip_pilot.rb:95:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :item_id => ixml.at_xpath("itemkey").text(),
        ^^^^^^^^^^^
lib/hip_pilot.rb:95:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :item_id => ixml.at_xpath("itemkey").text(),
                                  ^^^^^^^^^
lib/hip_pilot.rb:95:50: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
        :item_id => ixml.at_xpath("itemkey").text(),
                                                 ^^
lib/hip_pilot.rb:96:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :date_initiated => safe_date_parse(ixml.at_xpath("dateplaced")),
        ^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:96:58: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :date_initiated => safe_date_parse(ixml.at_xpath("dateplaced")),
                                                         ^^^^^^^^^^^^
lib/hip_pilot.rb:97:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :date_complete => safe_date_parse(ixml.at_xpath("dateexpires")),
        ^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:97:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :date_complete => safe_date_parse(ixml.at_xpath("dateexpires")),
                                                        ^^^^^^^^^^^^^
lib/hip_pilot.rb:98:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :pickup_location => ixml.at_xpath("pickuploc").text(),
        ^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:98:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :pickup_location => ixml.at_xpath("pickuploc").text(),
                                          ^^^^^^^^^^^
lib/hip_pilot.rb:98:60: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
        :pickup_location => ixml.at_xpath("pickuploc").text(),
                                                           ^^
lib/hip_pilot.rb:99:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :label => ixml.at_xpath("disptitle").text()
        ^^^^^^^^^
lib/hip_pilot.rb:99:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :label => ixml.at_xpath("disptitle").text()
                                ^^^^^^^^^^^
lib/hip_pilot.rb:99:50: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
        :label => ixml.at_xpath("disptitle").text()
                                                 ^^
lib/hip_pilot.rb:100:9: C: Layout/ClosingParenthesisIndentation: Indent ) to column 6 (not 8)
        )
        ^
lib/hip_pilot.rb:101:5: C: Style/MultilineBlockChain: Avoid multi-line chains of blocks.
    end.sort do |a, b|
    ^^^^^^^^
lib/hip_pilot.rb:107:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    el = xml_for(fines_and_notes_url).at_xpath("/*/blockdata/totalamount")
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:108:5: C: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return nil unless el # no xml element?
    ^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:109:20: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
    fines = el.text()
                   ^^
lib/hip_pilot.rb:110:5: C: Style/GuardClause: Use a guard clause (return nil if fines =~ /^\w*\$?0+\.?0*\w*$/) instead of wrapping the code inside a conditional expression.
    if fines =~ /^\w*\$?0+\.?0*\w*$/
    ^^
lib/hip_pilot.rb:112:7: C: Style/RedundantReturn: Redundant return detected.
      return nil
      ^^^^^^
lib/hip_pilot.rb:114:7: C: Style/RedundantReturn: Redundant return detected.
      return fines
      ^^^^^^
lib/hip_pilot.rb:118:3: C: Metrics/MethodLength: Method has too many lines. [13/10]
  def notes ...
  ^^^^^^^^^
lib/hip_pilot.rb:120:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    xml.xpath("/*/blockdata/block").collect do |nxml|
              ^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:121:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      fee = nxml.at_xpath("amount").text()
                          ^^^^^^^^
lib/hip_pilot.rb:121:41: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
      fee = nxml.at_xpath("amount").text()
                                        ^^
lib/hip_pilot.rb:123:19: C: Layout/LeadingCommentSpace: Missing space after #.
        fee = nil #zero
                  ^^^^^
lib/hip_pilot.rb:126:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :reason => nxml.at_xpath("reason").text(),
        ^^^^^^^^^^
lib/hip_pilot.rb:126:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :reason => nxml.at_xpath("reason").text(),
                                 ^^^^^^^^
lib/hip_pilot.rb:126:48: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
        :reason => nxml.at_xpath("reason").text(),
                                               ^^
lib/hip_pilot.rb:127:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :note => nxml.at_xpath("title").text(),
        ^^^^^^^^
lib/hip_pilot.rb:127:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :note => nxml.at_xpath("title").text(),
                               ^^^^^^^
lib/hip_pilot.rb:127:45: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
        :note => nxml.at_xpath("title").text(),
                                            ^^
lib/hip_pilot.rb:128:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :date => safe_date_parse(nxml.at_xpath("duedate")),
        ^^^^^^^^
lib/hip_pilot.rb:128:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :date => safe_date_parse(nxml.at_xpath("duedate")),
                                               ^^^^^^^^^
lib/hip_pilot.rb:129:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :fee => fee
        ^^^^^^^
lib/hip_pilot.rb:134:3: C: Metrics/AbcSize: Assignment Branch Condition size for profile is too high. [<1, 17, 1> 17.06/15]
  def profile ...
  ^^^^^^^^^^^
lib/hip_pilot.rb:135:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    xml = xml_for(profile_url).xpath("/*/patroninfo")
                                     ^^^^^^^^^^^^^^^
lib/hip_pilot.rb:137:1: C: Layout/EmptyLines: Extra blank line detected.
lib/hip_pilot.rb:138:5: C: Style/RedundantReturn: Redundant return detected.
    return Profile.new(
    ^^^^^^
lib/hip_pilot.rb:139:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :name => at_xpath_text(xml, "name/full"),
      ^^^^^^^^
lib/hip_pilot.rb:139:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :name => at_xpath_text(xml, "name/full"),
                                  ^^^^^^^^^^^
lib/hip_pilot.rb:140:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :phone => at_xpath_text(xml, "phones/phone/full[1]"),
      ^^^^^^^^^
lib/hip_pilot.rb:140:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :phone => at_xpath_text(xml, "phones/phone/full[1]"),
                                   ^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:141:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :address_array => xml.xpath("addresses/address[1]/*[self::street or self::citystate or self::postal]").to_a.collect{|a| a.text() unless a.text().blank?}.compact,
      ^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:141:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :address_array => xml.xpath("addresses/address[1]/*[self::street or self::citystate or self::postal]").to_a.collect{|a| a.text() unless a.text().blank?}.compact,
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:141:121: C: Layout/LineLength: Line is too long. [167/120]
      :address_array => xml.xpath("addresses/address[1]/*[self::street or self::citystate or self::postal]").to_a.collect{|a| a.text() unless a.text().blank?}.compact,
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:141:122: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
      :address_array => xml.xpath("addresses/address[1]/*[self::street or self::citystate or self::postal]").to_a.collect{|a| a.text() unless a.text().blank?}.compact,
                                                                                                                         ^
lib/hip_pilot.rb:141:122: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
      :address_array => xml.xpath("addresses/address[1]/*[self::street or self::citystate or self::postal]").to_a.collect{|a| a.text() unless a.text().blank?}.compact,
                                                                                                                         ^^
lib/hip_pilot.rb:141:127: C: Rails/Presence: Use a.text().presence instead of a.text() unless a.text().blank?.
      :address_array => xml.xpath("addresses/address[1]/*[self::street or self::citystate or self::postal]").to_a.collect{|a| a.text() unless a.text().blank?}.compact,
                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:141:133: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
      :address_array => xml.xpath("addresses/address[1]/*[self::street or self::citystate or self::postal]").to_a.collect{|a| a.text() unless a.text().blank?}.compact,
                                                                                                                                    ^^
lib/hip_pilot.rb:141:136: C: Rails/Present: Use if a.text().present? instead of unless a.text().blank?.
      :address_array => xml.xpath("addresses/address[1]/*[self::street or self::citystate or self::postal]").to_a.collect{|a| a.text() unless a.text().blank?}.compact,
                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:141:136: C: Style/IfUnlessModifier: Modifier form of unless makes the line too long.
      :address_array => xml.xpath("addresses/address[1]/*[self::street or self::citystate or self::postal]").to_a.collect{|a| a.text() unless a.text().blank?}.compact,
                                                                                                                                       ^^^^^^
lib/hip_pilot.rb:141:149: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
      :address_array => xml.xpath("addresses/address[1]/*[self::street or self::citystate or self::postal]").to_a.collect{|a| a.text() unless a.text().blank?}.compact,
                                                                                                                                                    ^^
lib/hip_pilot.rb:141:158: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      :address_array => xml.xpath("addresses/address[1]/*[self::street or self::citystate or self::postal]").to_a.collect{|a| a.text() unless a.text().blank?}.compact,
                                                                                                                                                             ^
lib/hip_pilot.rb:142:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :home_library => at_xpath_text(xml, "location"),
      ^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:142:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :home_library => at_xpath_text(xml, "location"),
                                          ^^^^^^^^^^
lib/hip_pilot.rb:143:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :card_expiration => safe_date_parse(xml.at_xpath("cardexpiresdate")),
      ^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:143:56: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :card_expiration => safe_date_parse(xml.at_xpath("cardexpiresdate")),
                                                       ^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:144:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :email => at_xpath_text(xml, "emailaddresses/emailaddress[1]/email")
      ^^^^^^^^^
lib/hip_pilot.rb:144:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :email => at_xpath_text(xml, "emailaddresses/emailaddress[1]/email")
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:156:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "menu" => "account", "submenu" =>"itemsout")
                         ^^^^^^
lib/hip_pilot.rb:156:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "menu" => "account", "submenu" =>"itemsout")
                                   ^^^^^^^^^
lib/hip_pilot.rb:156:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "menu" => "account", "submenu" =>"itemsout")
                                              ^^^^^^^^^
lib/hip_pilot.rb:156:57: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
    uri_query_merge(url, "menu" => "account", "submenu" =>"itemsout")
                                                        ^^
lib/hip_pilot.rb:156:59: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "menu" => "account", "submenu" =>"itemsout")
                                                          ^^^^^^^^^^
lib/hip_pilot.rb:158:5: C: Style/RedundantReturn: Redundant return detected.
    return url
    ^^^^^^
lib/hip_pilot.rb:163:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "menu" => "account", "submenu" => "info")
                         ^^^^^^
lib/hip_pilot.rb:163:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "menu" => "account", "submenu" => "info")
                                   ^^^^^^^^^
lib/hip_pilot.rb:163:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "menu" => "account", "submenu" => "info")
                                              ^^^^^^^^^
lib/hip_pilot.rb:163:60: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "menu" => "account", "submenu" => "info")
                                                           ^^^^^^
lib/hip_pilot.rb:166:1: C: Layout/EmptyLines: Extra blank line detected.
lib/hip_pilot.rb:167:1: C: Layout/EmptyLines: Extra blank line detected.
lib/hip_pilot.rb:168:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def requests_url
  ^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:170:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "menu" => "account", "submenu" =>"holds")
                         ^^^^^^
lib/hip_pilot.rb:170:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "menu" => "account", "submenu" =>"holds")
                                   ^^^^^^^^^
lib/hip_pilot.rb:170:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "menu" => "account", "submenu" =>"holds")
                                              ^^^^^^^^^
lib/hip_pilot.rb:170:57: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
    uri_query_merge(url, "menu" => "account", "submenu" =>"holds")
                                                        ^^
lib/hip_pilot.rb:170:59: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "menu" => "account", "submenu" =>"holds")
                                                          ^^^^^^^
lib/hip_pilot.rb:172:5: C: Style/RedundantReturn: Redundant return detected.
    return url
    ^^^^^^
lib/hip_pilot.rb:177:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "menu"=>"account", "submenu"=>"blocks" )
                         ^^^^^^
lib/hip_pilot.rb:177:32: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
    uri_query_merge(url, "menu"=>"account", "submenu"=>"blocks" )
                               ^^
lib/hip_pilot.rb:177:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "menu"=>"account", "submenu"=>"blocks" )
                                 ^^^^^^^^^
lib/hip_pilot.rb:177:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "menu"=>"account", "submenu"=>"blocks" )
                                            ^^^^^^^^^
lib/hip_pilot.rb:177:54: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
    uri_query_merge(url, "menu"=>"account", "submenu"=>"blocks" )
                                                     ^^
lib/hip_pilot.rb:177:56: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "menu"=>"account", "submenu"=>"blocks" )
                                                       ^^^^^^^^
lib/hip_pilot.rb:177:64: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    uri_query_merge(url, "menu"=>"account", "submenu"=>"blocks" )
                                                               ^
lib/hip_pilot.rb:178:5: C: Style/RedundantReturn: Redundant return detected.
    return url
    ^^^^^^
lib/hip_pilot.rb:187:3: C: Metrics/AbcSize: Assignment Branch Condition size for init_request is too high. [<19, 61, 12> 65.01/15]
  def init_request( request ) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:187:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for init_request is too high. [16/7]
  def init_request( request ) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:187:3: C: Metrics/MethodLength: Method has too many lines. [46/10]
  def init_request( request ) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:187:3: C: Metrics/PerceivedComplexity: Perceived complexity for init_request is too high. [12/7]
  def init_request( request ) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:187:20: C: Layout/SpaceInsideParens: Space inside parentheses detected.
  def init_request( request )
                   ^
lib/hip_pilot.rb:187:28: C: Layout/SpaceInsideParens: Space inside parentheses detected.
  def init_request( request )
                           ^
lib/hip_pilot.rb:189:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "menu" => "request",
                         ^^^^^^
lib/hip_pilot.rb:189:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "menu" => "request",
                                   ^^^^^^^^^
lib/hip_pilot.rb:190:9: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
        "bibkey"  => request.bib_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:190:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "bibkey"  => request.bib_id,
        ^^^^^^^^
lib/hip_pilot.rb:191:9: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
        "itemkey" => request.item_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:191:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "itemkey" => request.item_id,
        ^^^^^^^^^
lib/hip_pilot.rb:192:9: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
        "time"    =>Time.now.to_i) # HIP wants unix epoch time of 'now' in 'time' param
        ^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:192:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "time"    =>Time.now.to_i) # HIP wants unix epoch time of 'now' in 'time' param
        ^^^^^^
lib/hip_pilot.rb:192:19: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
        "time"    =>Time.now.to_i) # HIP wants unix epoch time of 'now' in 'time' param
                  ^^
lib/hip_pilot.rb:206:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if (select = xml.at_xpath(".//select_request_type"))
                              ^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:207:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      if select.at_xpath("radio") || ! select.at_xpath("csa_msg")
                         ^^^^^^^
lib/hip_pilot.rb:207:38: C: Layout/SpaceAfterNot: Do not leave space between ! and its argument.
      if select.at_xpath("radio") || ! select.at_xpath("csa_msg")
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:207:56: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      if select.at_xpath("radio") || ! select.at_xpath("csa_msg")
                                                       ^^^^^^^^^
lib/hip_pilot.rb:208:9: C: Style/RaiseArgs: Provide an exception class and message as arguments to raise.
        raise Exception.new("Sorry, a software error has occured. Software does not support request for this item.  item id #{request.item_id} ")
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:208:121: C: Layout/LineLength: Line is too long. [145/120]
        raise Exception.new("Sorry, a software error has occured. Software does not support request for this item.  item id #{request.item_id} ")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:209:7: C: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
      end
      ^^^
lib/hip_pilot.rb:213:9: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
        "request_type_choice" => "2", ...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:213:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "request_type_choice" => "2",
        ^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:213:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "request_type_choice" => "2",
                                 ^^^
lib/hip_pilot.rb:214:9: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
        "select_type" =>"Yes",
        ^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:214:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "select_type" =>"Yes",
        ^^^^^^^^^^^^^
lib/hip_pilot.rb:214:23: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
        "select_type" =>"Yes",
                      ^^
lib/hip_pilot.rb:214:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "select_type" =>"Yes",
                        ^^^^^
lib/hip_pilot.rb:215:9: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
        "cl"          => "PlaceRequestjsp",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:215:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "cl"          => "PlaceRequestjsp",
        ^^^^
lib/hip_pilot.rb:215:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "cl"          => "PlaceRequestjsp",
                         ^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:215:43: C: Style/TrailingCommaInArguments: Avoid comma after the last parameter of a method call.
        "cl"          => "PlaceRequestjsp",
                                          ^
lib/hip_pilot.rb:216:9: C: Layout/ClosingParenthesisIndentation: Indent ) to column 6 (not 8)
        )
        ^
lib/hip_pilot.rb:216:9: C: Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the same line as the last argument when opening brace is on the same line as the first argument.
        )
        ^
lib/hip_pilot.rb:220:1: C: Layout/EmptyLines: Extra blank line detected.
lib/hip_pilot.rb:221:1: C: Layout/EmptyLines: Extra blank line detected.
lib/hip_pilot.rb:222:9: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    if ( error_msg = xml.at_xpath("//alert/message"))
        ^
lib/hip_pilot.rb:222:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if ( error_msg = xml.at_xpath("//alert/message"))
                                  ^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:223:32: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      raise RequestFailure.new( error_msg.text, current_user )
                               ^
lib/hip_pilot.rb:223:61: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      raise RequestFailure.new( error_msg.text, current_user )
                                                            ^
lib/hip_pilot.rb:226:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    request_confirm = xml.at_xpath("//request_confirm")
                                   ^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:229:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      request_confirm.xpath("./pickup_location/location").collect do |location_xml|
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:233:5: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        if code_xml = location_xml.at_xpath("./code")
    ^^^^
lib/hip_pilot.rb:233:21: W: Lint/AssignmentInCondition: Use == if you meant to do a comparison or wrap the expression in parentheses to indicate you meant to assign in a condition.
        if code_xml = location_xml.at_xpath("./code")
                    ^
lib/hip_pilot.rb:233:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        if code_xml = location_xml.at_xpath("./code")
                                            ^^^^^^^^
lib/hip_pilot.rb:234:67: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          PickupLocation.new(code_xml.text, location_xml.at_xpath("./description").text())
                                                                  ^^^^^^^^^^^^^^^
lib/hip_pilot.rb:234:88: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
          PickupLocation.new(code_xml.text, location_xml.at_xpath("./description").text())
                                                                                       ^^
lib/hip_pilot.rb:239:36: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          # version of HIP anymore.
                                   ^
lib/hip_pilot.rb:240:47: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
          PickupLocation.new(location_xml.text(), location_xml.text())
                                              ^^
lib/hip_pilot.rb:240:68: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
          PickupLocation.new(location_xml.text(), location_xml.text())
                                                                   ^^
lib/hip_pilot.rb:242:5: C: Layout/BlockAlignment: end at 242, 4 is not aligned with request_confirm.xpath("./pickup_location/location").collect do |location_xml| at 229, 6.
    end
    ^^^
lib/hip_pilot.rb:245:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if (expire_date = request_confirm.at_xpath("./request_expire_date") )
                                               ^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:245:72: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    if (expire_date = request_confirm.at_xpath("./request_expire_date") )
                                                                       ^
lib/hip_pilot.rb:248:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    request.queue_position = request_confirm.at_xpath("./hold_queue_position").text().to_i + 1
                                                      ^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:248:84: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
    request.queue_position = request_confirm.at_xpath("./hold_queue_position").text().to_i + 1
                                                                                   ^^
lib/hip_pilot.rb:252:9: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    if ( csa_loc = request_confirm.at_xpath("./csa_pickup_agency") )
        ^
lib/hip_pilot.rb:252:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if ( csa_loc = request_confirm.at_xpath("./csa_pickup_agency") )
                                            ^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:252:67: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    if ( csa_loc = request_confirm.at_xpath("./csa_pickup_agency") )
                                                                  ^
lib/hip_pilot.rb:256:1: C: Layout/EmptyLines: Extra blank line detected.
lib/hip_pilot.rb:262:41: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # we don't want to try and use that.
                                        ^
lib/hip_pilot.rb:264:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if (suggested_location = request_confirm.at_xpath("./selected/pickup/child::text()").to_s)
                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:265:68: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
      request.pickup_location ||= request.available_locations.find {|l| l.description == suggested_location}.try(:code)
                                                                   ^^
lib/hip_pilot.rb:265:108: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      request.pickup_location ||= request.available_locations.find {|l| l.description == suggested_location}.try(:code)
                                                                                                           ^
lib/hip_pilot.rb:267:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/hip_pilot.rb:268:69: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # And if pickup location is still blank, default to first avail.
                                                                    ^
lib/hip_pilot.rb:273:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    request.item_display ||= request_confirm.at_xpath("./copy/child::text()").to_s
                                                      ^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:277:60: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    request.notification_method = request_confirm.at_xpath("./notification_method/type/child::text()").to_s
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:279:5: C: Style/RedundantReturn: Redundant return detected.
    return request
    ^^^^^^
lib/hip_pilot.rb:282:84: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Returns Nokogiri XML of portion of HIP response containing success information.
                                                                                   ^
lib/hip_pilot.rb:283:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #bib=27026 item=131337
  ^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:284:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #https://hip-test.library.jhu.edu/ipac20/ipac.jsp?session=1293462773XL9.1&profile=general&pickuplocation=test+-+Milton+S.+Eisenhower+Library&notifyby=e-mail&requestcomment=this+is+a+comment&request_finish=Confirm&cl=PlaceRequestjsp&aspect=none
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:285:3: C: Metrics/MethodLength: Method has too many lines. [15/10]
  def submit_request(request) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:297:7: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
      "pickuplocation"  => request.pickup_location, ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:297:7: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
      "pickuplocation"  => request.pickup_location,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:297:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "pickuplocation"  => request.pickup_location,
      ^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:298:7: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
      "notifyby"        => request.notification_method,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:298:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "notifyby"        => request.notification_method,
      ^^^^^^^^^^
lib/hip_pilot.rb:299:7: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
      "requestcomment"  => request.comment,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:299:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "requestcomment"  => request.comment,
      ^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:300:7: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
      "request_finish"  => "Confirm",
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:300:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "request_finish"  => "Confirm",
      ^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:300:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "request_finish"  => "Confirm",
                           ^^^^^^^^^
lib/hip_pilot.rb:301:7: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
      "cl"              => "PlaceRequestjsp")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:301:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cl"              => "PlaceRequestjsp")
      ^^^^
lib/hip_pilot.rb:301:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cl"              => "PlaceRequestjsp")
                           ^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:305:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    success = xml.at_xpath("//request_success")
                           ^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:308:84: W: Lint/RedundantStringCoercion: Redundant use of Object#to_s in interpolation.
      Rails.logger.warn("HipPilot: Weird connection error in making request: #{xml.to_s}")
                                                                                   ^^^^
lib/hip_pilot.rb:312:5: C: Style/RedundantReturn: Redundant return detected.
    return success
    ^^^^^^
lib/hip_pilot.rb:315:3: C: Metrics/AbcSize: Assignment Branch Condition size for update_email is too high. [<3, 14, 5> 15.17/15]
  def update_email(new_email) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:315:3: C: Metrics/MethodLength: Method has too many lines. [18/10]
  def update_email(new_email) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:317:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #https://hip-test.library.jhu.edu/ipac20/ipac.jsp?session=Q2O4337H47963.1&profile=general&newemailtext=rochkind22%40jhu.edu&updateemail=Update&menu=account&submenu=info&GetXML=1
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:319:7: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
      "profile" => "general", ...
      ^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:319:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "profile" => "general",
      ^^^^^^^^^
lib/hip_pilot.rb:319:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "profile" => "general",
                   ^^^^^^^^^
lib/hip_pilot.rb:320:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "newemailtext" => new_email,
      ^^^^^^^^^^^^^^
lib/hip_pilot.rb:321:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "updateemail" => "Update",
      ^^^^^^^^^^^^^
lib/hip_pilot.rb:321:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "updateemail" => "Update",
                       ^^^^^^^^
lib/hip_pilot.rb:322:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "menu" => "account",
      ^^^^^^
lib/hip_pilot.rb:322:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "menu" => "account",
                ^^^^^^^^^
lib/hip_pilot.rb:323:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "submenu" => "info"
      ^^^^^^^^^
lib/hip_pilot.rb:323:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "submenu" => "info"
                   ^^^^^^
lib/hip_pilot.rb:324:7: C: Layout/ClosingParenthesisIndentation: Indent ) to column 4 (not 6)
      )
      ^
lib/hip_pilot.rb:324:7: C: Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the same line as the last argument when opening brace is on the same line as the first argument.
      )
      ^
lib/hip_pilot.rb:329:8: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
    if ( xml.at_xpath("/patronpersonalresponse/patroninfo/message/code/text()").to_s == "update_failed" )
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:329:9: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    if ( xml.at_xpath("/patronpersonalresponse/patroninfo/message/code/text()").to_s == "update_failed" )
        ^
lib/hip_pilot.rb:329:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if ( xml.at_xpath("/patronpersonalresponse/patroninfo/message/code/text()").to_s == "update_failed" )
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:329:89: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if ( xml.at_xpath("/patronpersonalresponse/patroninfo/message/code/text()").to_s == "update_failed" )
                                                                                        ^^^^^^^^^^^^^^^
lib/hip_pilot.rb:329:104: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    if ( xml.at_xpath("/patronpersonalresponse/patroninfo/message/code/text()").to_s == "update_failed" )
                                                                                                       ^
lib/hip_pilot.rb:334:12: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an unless.
    unless ((changed = xml.at_xpath("/patronpersonalresponse/patroninfo/emailaddresses/emailaddress/email")) && ...
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:334:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    unless ((changed = xml.at_xpath("/patronpersonalresponse/patroninfo/emailaddresses/emailaddress/email")) &&
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:335:25: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
            changed.text() == new_email)
                        ^^
lib/hip_pilot.rb:337:121: C: Layout/LineLength: Line is too long. [140/120]
      Rails.logger.warn("HipPilot: Could not change email in HIP at #{url} : #{xml.at_xpath('/patronpersonalresponse/patroninfo/message')}")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:341:5: C: Style/RedundantReturn: Redundant return detected.
    return new_email
    ^^^^^^
lib/hip_pilot.rb:353:3: C: Metrics/AbcSize: Assignment Branch Condition size for renew is too high. [<14, 30, 8> 34.06/15]
  def renew(items) ...
  ^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:353:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for renew is too high. [11/7]
  def renew(items) ...
  ^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:353:3: C: Metrics/MethodLength: Method has too many lines. [33/10]
  def renew(items) ...
  ^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:354:5: C: Style/ParallelAssignment: Do not use parallel assignment.
    renewed, errors = {}, {}
    ^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:356:48: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    items, excluded_bd_items = items.partition {|i| ! i.borrow_direct_item? }
                                               ^^
lib/hip_pilot.rb:356:53: C: Layout/SpaceAfterNot: Do not leave space between ! and its argument.
    items, excluded_bd_items = items.partition {|i| ! i.borrow_direct_item? }
                                                    ^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:358:1: C: Layout/EmptyLines: Extra blank line detected.
lib/hip_pilot.rb:362:11: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
          :renewitems=>"Renew", ...
          ^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:362:11: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
          :renewitems=>"Renew",
          ^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:362:11: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          :renewitems=>"Renew",
          ^^^^^^^^^^^^^
lib/hip_pilot.rb:362:22: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
          :renewitems=>"Renew",
                     ^^
lib/hip_pilot.rb:362:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          :renewitems=>"Renew",
                       ^^^^^^^
lib/hip_pilot.rb:363:11: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
          :menu=>"account",
          ^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:363:11: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          :menu=>"account",
          ^^^^^^^
lib/hip_pilot.rb:363:16: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
          :menu=>"account",
               ^^
lib/hip_pilot.rb:363:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          :menu=>"account",
                 ^^^^^^^^^
lib/hip_pilot.rb:364:11: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
          :submenu=>"itemsout",
          ^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:364:11: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          :submenu=>"itemsout",
          ^^^^^^^^^^
lib/hip_pilot.rb:364:19: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
          :submenu=>"itemsout",
                  ^^
lib/hip_pilot.rb:364:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          :submenu=>"itemsout",
                    ^^^^^^^^^^
lib/hip_pilot.rb:365:11: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          :renewitemkeys => items.collect {|i| i.item_barcode },
          ^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:365:43: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
          :renewitemkeys => items.collect {|i| i.item_barcode },
                                          ^^
lib/hip_pilot.rb:365:43: C: Style/SymbolProc: Pass &:item_barcode as an argument to collect instead of a block.
          :renewitemkeys => items.collect {|i| i.item_barcode },
                                          ^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:366:11: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          :sortby => "duedate",
          ^^^^^^^^^^
lib/hip_pilot.rb:366:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          :sortby => "duedate",
                     ^^^^^^^^^
lib/hip_pilot.rb:367:11: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          :profile => "general"
          ^^^^^^^^^^^
lib/hip_pilot.rb:367:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          :profile => "general"
                      ^^^^^^^^^
lib/hip_pilot.rb:368:9: C: Layout/ClosingParenthesisIndentation: Indent ) to column 6 (not 8)
        )
        ^
lib/hip_pilot.rb:368:9: C: Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the same line as the last argument when opening brace is on the same line as the first argument.
        )
        ^
lib/hip_pilot.rb:371:37: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      xml = get_xml_with_login(url, :timeout => @@renewal_timeout)
                                    ^^^^^^^^^^^
lib/hip_pilot.rb:377:7: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
          new_item = xml.at_xpath("/*/itemsoutdata/itemout[holdingkey='#{original_item.item_barcode}']")
      ^^^^
lib/hip_pilot.rb:378:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          if new_item && (new_item.at_xpath("numrenewals/text()").to_s.to_i > original_item.times_renewed )
                                            ^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:378:106: C: Layout/SpaceInsideParens: Space inside parentheses detected.
          if new_item && (new_item.at_xpath("numrenewals/text()").to_s.to_i > original_item.times_renewed )
                                                                                                         ^
lib/hip_pilot.rb:380:11: C: Style/EmptyElse: Redundant else-clause.
          else
          ^^^^
lib/hip_pilot.rb:384:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/hip_pilot.rb:385:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      xml.xpath("/*/itemsoutdata/itemout[renewerror]").each do |item|
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:386:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        errors[item.at_xpath("ikey/text()").to_s] = item.at_xpath("renewerror/text()").to_s
                             ^^^^^^^^^^^^^
lib/hip_pilot.rb:386:67: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        errors[item.at_xpath("ikey/text()").to_s] = item.at_xpath("renewerror/text()").to_s
                                                                  ^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:389:52: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # Any HIP communicated overall error message?
                                                   ^^^^^^^^^^^
lib/hip_pilot.rb:390:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      status_xml    = xml.at_xpath("/patronpersonalresponse/itemsoutdata/message")
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:391:60: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      error_message = if status_xml && status_xml.at_xpath("./code/text()").to_s == "renew_failed"
                                                           ^^^^^^^^^^^^^^^
lib/hip_pilot.rb:391:85: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      error_message = if status_xml && status_xml.at_xpath("./code/text()").to_s == "renew_failed"
                                                                                    ^^^^^^^^^^^^^^
lib/hip_pilot.rb:392:9: C: Layout/IndentationWidth: Use 2 (not -14) spaces for indentation.
        status_xml.at_xpath("./reason/text()").to_s
        ^^^^^^^^^^^^^^
lib/hip_pilot.rb:392:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        status_xml.at_xpath("./reason/text()").to_s
                            ^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:393:7: W: Layout/EndAlignment: end at 393, 6 is not aligned with if at 391, 22.
      end
      ^^^
lib/hip_pilot.rb:398:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      errors[item.item_id] = "Borrow Direct items can not be renewed."
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:401:5: C: Style/RedundantReturn: Redundant return detected.
    return [renewed, errors, error_message]
    ^^^^^^
lib/hip_pilot.rb:406:3: C: Metrics/AbcSize: Assignment Branch Condition size for get_xml_with_current_session is too high. [<5, 24, 2> 24.6/15]
  def get_xml_with_current_session(url) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:406:3: C: Metrics/MethodLength: Method has too many lines. [11/10]
  def get_xml_with_current_session(url) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:407:37: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
    url = URI.parse(url) unless url.kind_of?(URI)
                                    ^^^^^^^^
lib/hip_pilot.rb:408:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "GetXML" => "1", "session" => hip_session_id)
                         ^^^^^^^^
lib/hip_pilot.rb:408:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "GetXML" => "1", "session" => hip_session_id)
                                     ^^^
lib/hip_pilot.rb:408:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "GetXML" => "1", "session" => hip_session_id)
                                          ^^^^^^^^^
lib/hip_pilot.rb:414:55: W: Lint/RedundantStringCoercion: Redundant use of Object#to_s in interpolation.
      Rails.logger.debug("HipPilot: Reqeusting: #{url.to_s}")
                                                      ^^^^
lib/hip_pilot.rb:415:7: C: Style/RedundantReturn: Redundant return detected.
      return Nokogiri::XML(http.get(url).content)
      ^^^^^^
lib/hip_pilot.rb:416:1: C: Layout/EmptyLinesAroundExceptionHandlingKeywords: Extra empty line detected before the rescue.
lib/hip_pilot.rb:417:5: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?
    rescue Exception => e ...
    ^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:419:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      raise ConnectionError.new(e.message + ": " + url.to_s, current_user)
                                            ^^^^
lib/hip_pilot.rb:421:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
lib/hip_pilot.rb:432:3: C: Metrics/AbcSize: Assignment Branch Condition size for get_xml_with_login is too high. [<15, 55, 12> 58.26/15]
  def get_xml_with_login(url, options = {}) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:432:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for get_xml_with_login is too high. [9/7]
  def get_xml_with_login(url, options = {}) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:432:3: C: Metrics/MethodLength: Method has too many lines. [36/10]
  def get_xml_with_login(url, options = {}) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:432:3: C: Metrics/PerceivedComplexity: Perceived complexity for get_xml_with_login is too high. [10/7]
  def get_xml_with_login(url, options = {}) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:435:37: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
    url = URI.parse(url) unless url.kind_of?(URI)
                                    ^^^^^^^^
lib/hip_pilot.rb:436:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "GetXML" => "1", "session" => hip_session_id)
                         ^^^^^^^^
lib/hip_pilot.rb:436:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "GetXML" => "1", "session" => hip_session_id)
                                     ^^^
lib/hip_pilot.rb:436:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uri_query_merge(url, "GetXML" => "1", "session" => hip_session_id)
                                          ^^^^^^^^^
lib/hip_pilot.rb:443:8: C: Rails/EnvironmentComparison: Favor Rails.env.development? over ::Rails.env == "development".
    if ::Rails.env == "development"
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:443:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if ::Rails.env == "development"
                      ^^^^^^^^^^^^^
lib/hip_pilot.rb:448:1: C: Layout/EmptyLines: Extra blank line detected.
lib/hip_pilot.rb:450:55: W: Lint/RedundantStringCoercion: Redundant use of Object#to_s in interpolation.
      Rails.logger.debug("HipPilot: Reqeusting: #{url.to_s}")
                                                      ^^^^
lib/hip_pilot.rb:454:1: C: Layout/EmptyLines: Extra blank line detected.
lib/hip_pilot.rb:455:1: C: Layout/EmptyLines: Extra blank line detected.
lib/hip_pilot.rb:456:7: C: Rails/Present: Use if xml.xpath("//exception").text().present? instead of unless xml.xpath("//exception").text().blank?.
      unless xml.xpath("//exception").text().blank?
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:456:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      unless xml.xpath("//exception").text().blank?
                       ^^^^^^^^^^^^^
lib/hip_pilot.rb:456:43: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
      unless xml.xpath("//exception").text().blank?
                                          ^^
lib/hip_pilot.rb:459:97: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
        Rails.logger.warn("HIP exception (we will recover by creating new session): #{xml.xpath("//exception").text}")
                                                                                                ^^^^^^^^^^^^^
lib/hip_pilot.rb:461:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        uri_query_merge(url, "session" => nil)
                             ^^^^^^^^^
lib/hip_pilot.rb:463:1: C: Layout/EmptyLines: Extra blank line detected.
lib/hip_pilot.rb:466:10: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
      if (xml.xpath("//security/auth").text() != "true")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:466:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      if (xml.xpath("//security/auth").text() != "true")
                    ^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:466:44: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
      if (xml.xpath("//security/auth").text() != "true")
                                           ^^
lib/hip_pilot.rb:466:50: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      if (xml.xpath("//security/auth").text() != "true")
                                                 ^^^^^^
lib/hip_pilot.rb:467:9: C: Layout/LeadingCommentSpace: Missing space after #.
        #need to login, fix session while we're at it in case we had an
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:468:9: C: Layout/LeadingCommentSpace: Missing space after #.
        #expired one.
        ^^^^^^^^^^^^^
lib/hip_pilot.rb:469:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        self.hip_session_id = xml.at_xpath("//session").text()
                                           ^^^^^^^^^^^
lib/hip_pilot.rb:469:61: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
        self.hip_session_id = xml.at_xpath("//session").text()
                                                            ^^
lib/hip_pilot.rb:473:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        uri_query_merge(url, "session" => self.hip_session_id, "sec1" => barcode, "sec2" => pin)
                             ^^^^^^^^^
lib/hip_pilot.rb:473:43: C: Style/RedundantSelf: Redundant self detected.
        uri_query_merge(url, "session" => self.hip_session_id, "sec1" => barcode, "sec2" => pin)
                                          ^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:473:64: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        uri_query_merge(url, "session" => self.hip_session_id, "sec1" => barcode, "sec2" => pin)
                                                               ^^^^^^
lib/hip_pilot.rb:473:83: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        uri_query_merge(url, "session" => self.hip_session_id, "sec1" => barcode, "sec2" => pin)
                                                                                  ^^^^^^
lib/hip_pilot.rb:475:1: C: Layout/EmptyLines: Extra blank line detected.
lib/hip_pilot.rb:477:12: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
        if (xml.xpath("//security/login_failed").count() != 0)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:477:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        if (xml.xpath("//security/login_failed").count() != 0)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:477:55: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
        if (xml.xpath("//security/login_failed").count() != 0)
                                                      ^^
lib/hip_pilot.rb:479:11: C: Style/RaiseArgs: Provide an exception class and message as arguments to raise.
          raise HipPilot::LoginFailure.new("Could not authenticate Horizon borrower account to system (expired or deleted borrower account? with barcode #{barcode})")
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:479:121: C: Layout/LineLength: Line is too long. [166/120]
          raise HipPilot::LoginFailure.new("Could not authenticate Horizon borrower account to system (expired or deleted borrower account? with barcode #{barcode})")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:483:1: C: Layout/EmptyLinesAroundExceptionHandlingKeywords: Extra empty line detected before the rescue.
lib/hip_pilot.rb:484:5: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?
    rescue Exception => e ...
    ^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:487:7: C: Style/GuardClause: Use a guard clause (raise e if e.kind_of? HipPilot::ConnectionError) instead of wrapping the code inside a conditional expression.
      if e.kind_of? HipPilot::ConnectionError
      ^^
lib/hip_pilot.rb:487:12: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
      if e.kind_of? HipPilot::ConnectionError
           ^^^^^^^^
lib/hip_pilot.rb:490:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        raise ConnectionError.new(e.message + ": " + filter_pin(url.to_s), current_user)
                                              ^^^^
lib/hip_pilot.rb:494:5: C: Style/RedundantReturn: Redundant return detected.
    return xml
    ^^^^^^
lib/hip_pilot.rb:499:3: C: Metrics/AbcSize: Assignment Branch Condition size for lookup_hip_auth is too high. [<2, 32, 4> 32.31/15]
  def lookup_hip_auth ...
  ^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:501:51: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      borrower = HorizonBorrowerLookup.new.lookup(:id => current_user.horizon_borrower_id )
                                                  ^^^^^^
lib/hip_pilot.rb:501:90: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      borrower = HorizonBorrowerLookup.new.lookup(:id => current_user.horizon_borrower_id )
                                                                                         ^
lib/hip_pilot.rb:502:5: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?
    rescue Exception => e ...
    ^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:503:7: C: Style/RaiseArgs: Provide an exception class and message as arguments to raise.
      raise ConnectionError.new("HorizonBorrowerLookup for borrower_id:'#{current_user.try(:horizon_borrower_id)}' login:'#{current_user.try(:login)}': #{e.message}")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:503:121: C: Layout/LineLength: Line is too long. [166/120]
      raise ConnectionError.new("HorizonBorrowerLookup for borrower_id:'#{current_user.try(:horizon_borrower_id)}' login:'#{current_user.try(:login)}': #{e.message}")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:505:121: C: Layout/LineLength: Line is too long. [185/120]
    raise ConnectionError.new("No Horizon borrower found for borrower_id:'#{current_user.try(:horizon_borrower_id)}' login:'#{current_user.try(:login)}'", current_user) if borrower.nil?
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:505:170: C: Style/IfUnlessModifier: Modifier form of if makes the line too long.
    raise ConnectionError.new("No Horizon borrower found for borrower_id:'#{current_user.try(:horizon_borrower_id)}' login:'#{current_user.try(:login)}'", current_user) if borrower.nil?
                                                                                                                                                                         ^^
lib/hip_pilot.rb:506:121: C: Layout/LineLength: Line is too long. [234/120]
    raise ConnectionError.new("No Horizon barcode and/or pin found for borrower_id:'#{current_user.try(:horizon_borrower_id)}' login:'#{current_user.try(:login)}'", current_user) if (borrower[:barcode].blank? or borrower[:pin].blank?)
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:506:180: C: Style/IfUnlessModifier: Modifier form of if makes the line too long.
    raise ConnectionError.new("No Horizon barcode and/or pin found for borrower_id:'#{current_user.try(:horizon_borrower_id)}' login:'#{current_user.try(:login)}'", current_user) if (borrower[:barcode].blank? or borrower[:pin].blank?)
                                                                                                                                                                                   ^^
lib/hip_pilot.rb:506:183: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
    raise ConnectionError.new("No Horizon barcode and/or pin found for borrower_id:'#{current_user.try(:horizon_borrower_id)}' login:'#{current_user.try(:login)}'", current_user) if (borrower[:barcode].blank? or borrower[:pin].blank?)
                                                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:506:210: C: Style/AndOr: Use || instead of or.
    raise ConnectionError.new("No Horizon barcode and/or pin found for borrower_id:'#{current_user.try(:horizon_borrower_id)}' login:'#{current_user.try(:login)}'", current_user) if (borrower[:barcode].blank? or borrower[:pin].blank?)
                                                                                                                                                                                                                 ^^
lib/hip_pilot.rb:508:5: C: Style/RedundantReturn: Redundant return detected.
    return [borrower[:barcode], borrower[:pin]]
    ^^^^^^
lib/hip_pilot.rb:519:1: C: Layout/EmptyLines: Extra blank line detected.
lib/hip_pilot.rb:520:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def uri_query_merge(uri, hash)
  ^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:524:5: C: Style/RedundantReturn: Redundant return detected.
    return uri
    ^^^^^^
lib/hip_pilot.rb:527:3: C: Metrics/AbcSize: Assignment Branch Condition size for query_to_hash is too high. [<9, 15, 5> 18.19/15]
  def query_to_hash(query) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:527:3: C: Metrics/MethodLength: Method has too many lines. [16/10]
  def query_to_hash(query) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:531:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    query.split("&").each do |pair|
                ^^^
lib/hip_pilot.rb:532:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      (key, value) = pair.split("=")
                                ^^^
lib/hip_pilot.rb:533:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      value = "" if value.nil?
              ^^
lib/hip_pilot.rb:539:23: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
      elsif hash[key].kind_of?(Array)
                      ^^^^^^^^
lib/hip_pilot.rb:542:22: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
        hash[key] = [ hash[key]].push value
                     ^
lib/hip_pilot.rb:546:5: C: Style/RedundantReturn: Redundant return detected.
    return hash
    ^^^^^^
lib/hip_pilot.rb:548:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def hash_to_query(hash)
  ^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:552:5: C: Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 6).
    #hash.to_query
    ^^^^^^^^^^^^^^
lib/hip_pilot.rb:552:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #hash.to_query
    ^^^^^^^^^^^^^^
lib/hip_pilot.rb:554:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      hash.collect do |key, value|
  ^^^^
lib/hip_pilot.rb:555:9: C: Style/UnlessElse: Do not use unless with else. Rewrite these with the positive case first.
        unless value.kind_of?(Array) ...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:555:22: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
        unless value.kind_of?(Array)
                     ^^^^^^^^
lib/hip_pilot.rb:559:25: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
          value.collect {|v| v.to_query(key)} * '&'
                        ^^
lib/hip_pilot.rb:559:45: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
          value.collect {|v| v.to_query(key)} * '&'
                                            ^
lib/hip_pilot.rb:562:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
lib/hip_pilot.rb:570:40: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
    return nil if nokogiri_element.text().blank?
                                       ^^
lib/hip_pilot.rb:571:44: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
    return nil unless nokogiri_element.text() =~ %r{\d\d/\d\d/\d\d\d\d}
                                           ^^
lib/hip_pilot.rb:574:42: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
      Date.strptime nokogiri_element.text(), '%m/%d/%Y'
                                         ^^
lib/hip_pilot.rb:585:19: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
      element.text()
                  ^^
lib/hip_pilot.rb:587:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      ""
      ^^
lib/hip_pilot.rb:611:9: C: Style/RedundantSelf: Redundant self detected.
        self.send(key.to_s + "=", value)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:611:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        self.send(key.to_s + "=", value)
                             ^^^
lib/hip_pilot.rb:615:121: C: Layout/LineLength: Line is too long. [127/120]
    attr_accessor :bib_id, :item_id, :item_barcode, :date_initiated, :date_complete, :due_date, :times_renewed, :collection_str
                                                                                                                        ^^^^^^^
lib/hip_pilot.rb:618:34: C: Layout/LeadingCommentSpace: Missing space after #.
    attr_accessor :solr_document #sometimes controller sets associated SolrDocument
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:621:5: C: Metrics/AbcSize: Assignment Branch Condition size for overdue? is too high. [<5, 19, 5> 20.27/15]
    def overdue? ...
    ^^^^^^^^^^^^
lib/hip_pilot.rb:621:5: C: Metrics/MethodLength: Method has too many lines. [12/10]
    def overdue? ...
    ^^^^^^^^^^^^
lib/hip_pilot.rb:624:17: C: Style/FormatStringToken: Prefer annotated tokens (like %<foo>s) over unannotated tokens (like %s).
      offset = '%+.2d:00' % offset_in_hours
                ^^^^^
lib/hip_pilot.rb:624:27: C: Style/FormatString: Favor format over String#%.
      offset = '%+.2d:00' % offset_in_hours
                          ^
lib/hip_pilot.rb:625:10: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
      if (date_complete.kind_of?(Time))
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:625:10: C: Style/RedundantParentheses: Don't use parentheses around a method call.
      if (date_complete.kind_of?(Time))
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:625:25: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
      if (date_complete.kind_of?(Time))
                        ^^^^^^^^
lib/hip_pilot.rb:626:21: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
        time = Time.now + offset_in_hours * 60 * 60
                    ^^^
lib/hip_pilot.rb:636:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #force number
    ^^^^^^^^^^^^^
lib/hip_pilot.rb:637:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def times_renewed=(val)
    ^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:648:76: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # multi-volume works from BD sometimes have barcodes not beginning JHU.
                                                                           ^
lib/hip_pilot.rb:650:31: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # we have. This is a mess.
                              ^^^
lib/hip_pilot.rb:652:7: C: Style/RedundantSelf: Redundant self detected.
      self.item_barcode =~ /\AJHU\-/ || self.collection_str =~ /\ABorrow ?Direct\Z/
      ^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:652:41: C: Style/RedundantSelf: Redundant self detected.
      self.item_barcode =~ /\AJHU\-/ || self.collection_str =~ /\ABorrow ?Direct\Z/
                                        ^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:654:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
lib/hip_pilot.rb:657:1: C: Layout/EmptyLines: Extra blank line detected.
lib/hip_pilot.rb:661:9: C: Style/RedundantSelf: Redundant self detected.
        self.send(key.to_s + "=", value)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:661:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        self.send(key.to_s + "=", value)
                             ^^^
lib/hip_pilot.rb:670:9: C: Style/RedundantSelf: Redundant self detected.
        self.send(key.to_s + "=", value)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:670:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        self.send(key.to_s + "=", value)
                             ^^^
lib/hip_pilot.rb:681:121: C: Layout/LineLength: Line is too long. [122/120]
    attr_accessor :pickup_location # selected CODE of desired pickup; in older HIP's this was location description instead
                                                                                                                        ^^
lib/hip_pilot.rb:696:9: C: Style/RedundantSelf: Redundant self detected.
        self.send(key.to_s + "=", value)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:696:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        self.send(key.to_s + "=", value)
                             ^^^
lib/hip_pilot.rb:698:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      raise "Need to supply bib_id and item_id" unless self.bib_id && self.item_id
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:698:56: C: Style/RedundantSelf: Redundant self detected.
      raise "Need to supply bib_id and item_id" unless self.bib_id && self.item_id
                                                       ^^^^^^^^^^^
lib/hip_pilot.rb:698:71: C: Style/RedundantSelf: Redundant self detected.
      raise "Need to supply bib_id and item_id" unless self.bib_id && self.item_id
                                                                      ^^^^^^^^^^^^
lib/hip_pilot.rb:702:5: W: Lint/DuplicateMethods: Method HipPilot::Request#notification_method is defined at both lib/hip_pilot.rb:682 and lib/hip_pilot.rb:702.
    def notification_method
    ^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:703:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @notification_method || "e-mail"
                              ^^^^^^^^
lib/hip_pilot.rb:705:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
lib/hip_pilot.rb:712:20: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.
    def initialize(c, d)
                   ^
lib/hip_pilot.rb:712:23: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.
    def initialize(c, d)
                      ^
lib/hip_pilot.rb:714:9: C: Style/RaiseArgs: Provide an exception class and message as arguments to raise.
        raise ArgumentError.new("PickupLocation needs both a code and description, code:#{c}, description:#{d}")
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:717:16: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =.
      self.code= c
               ^
lib/hip_pilot.rb:722:13: C: Naming/BinaryOperatorParameterName: When defining the <=> operator, name its argument other.
    def <=>(arg)
            ^^^
lib/hip_pilot.rb:723:7: C: Style/RedundantSelf: Redundant self detected.
      self.description <=> arg.description
      ^^^^^^^^^^^^^^^^
lib/hip_pilot.rb:731:27: W: Lint/InheritException: Inherit from RuntimeError instead of Exception.
  class ConnectionError < Exception
                          ^^^^^^^^^
lib/hip_pilot.rb:736:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def for_user
    ^^^^^^^^^^^^
lib/hip_pilot.rb:736:5: C: Style/TrivialAccessors: Use attr_reader to define trivial reader methods.
    def for_user
    ^^^
lib/hip_pilot.rb:747:38: C: Layout/SpaceBeforeSemicolon: Space found before semicolon.
  class HipDisabled < ConnectionError ; end
                                     ^
lib/hip_pilot.rb:749:36: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # could not update email address.
                                   ^
lib/hip_pilot.rb:751:55: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # at public_message, usually one passed on from HIP.
                                                      ^
lib/hip_pilot.rb:760:1: C: Layout/EmptyLines: Extra blank line detected.
lib/hip_pilot.rb:760:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
lib/horizon_borrower_lookup.rb:1:3: C: Layout/InitialIndentation: Indentation of first line in file detected.
  require 'nokogiri'
  ^^^^^^^
lib/horizon_borrower_lookup.rb:4:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/horizon_borrower_lookup.rb:5:1: C: Layout/IndentationConsistency: Inconsistent indentation detected.
class HorizonBorrowerLookup ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/horizon_borrower_lookup.rb:6:3: C: Style/ClassVars: Replace class var @@timeout with a class instance var.
  @@timeout = 1 # seconds
  ^^^^^^^^^
lib/horizon_borrower_lookup.rb:7:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/horizon_borrower_lookup.rb:8:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/horizon_borrower_lookup.rb:11:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @service_base ||= HipConfig.ws_base.chomp("/") + "/borrowers"
                                              ^^^
lib/horizon_borrower_lookup.rb:11:54: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @service_base ||= HipConfig.ws_base.chomp("/") + "/borrowers"
                                                     ^^^^^^^^^^^^
lib/horizon_borrower_lookup.rb:14:3: C: Metrics/AbcSize: Assignment Branch Condition size for fetch_with_auth is too high. [<9, 21, 4> 23.19/15]
  def fetch_with_auth(request_url) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/horizon_borrower_lookup.rb:14:3: C: Metrics/MethodLength: Method has too many lines. [17/10]
  def fetch_with_auth(request_url) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/horizon_borrower_lookup.rb:15:10: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    begin
         ^^^^^^
lib/horizon_borrower_lookup.rb:16:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      uri = URI.parse(request_url)
                                  ^^^^^^^^
lib/horizon_borrower_lookup.rb:17:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/horizon_borrower_lookup.rb:21:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      http.use_ssl = true if uri.scheme == "https"
                                           ^^^^^^^
lib/horizon_borrower_lookup.rb:23:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/horizon_borrower_lookup.rb:25:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        request.basic_auth(auth["username"], auth["password"])
                                ^^^^^^^^^^
lib/horizon_borrower_lookup.rb:25:51: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        request.basic_auth(auth["username"], auth["password"])
                                                  ^^^^^^^^^^
lib/horizon_borrower_lookup.rb:27:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/horizon_borrower_lookup.rb:29:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/horizon_borrower_lookup.rb:31:5: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?
    rescue Exception => e ...
    ^^^^^^^^^^^^^^^^^^^^^
lib/horizon_borrower_lookup.rb:32:121: C: Layout/LineLength: Line is too long. [127/120]
      Rails.logger.error("\nHorizon lookup error: #{e.class} (#{e.message}), #{request_url.sub(/pin=\w+/, 'pin=[FILTERED]')} ")
                                                                                                                        ^^^^^^^
lib/horizon_borrower_lookup.rb:33:7: C: Style/RaiseArgs: Provide an exception class and message as arguments to raise.
      raise UnavailableError.new(e)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/horizon_borrower_lookup.rb:35:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/horizon_borrower_lookup.rb:36:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/horizon_borrower_lookup.rb:37:5: C: Style/RedundantReturn: Redundant return detected.
    return response.body
    ^^^^^^
lib/horizon_borrower_lookup.rb:38:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/horizon_borrower_lookup.rb:40:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/horizon_borrower_lookup.rb:45:50: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # other useful attributes pulled out of the XML
                                                 ^
lib/horizon_borrower_lookup.rb:50:28: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # for now hash is simple.
                           ^
lib/horizon_borrower_lookup.rb:51:3: C: Metrics/AbcSize: Assignment Branch Condition size for lookup is too high. [<12, 19, 3> 22.67/15]
  def lookup(args) ...
  ^^^^^^^^^^^^^^^^
lib/horizon_borrower_lookup.rb:51:3: C: Metrics/MethodLength: Method has too many lines. [18/10]
  def lookup(args) ...
  ^^^^^^^^^^^^^^^^
lib/horizon_borrower_lookup.rb:52:53: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    request_url = service_base + '?' + args.to_query
                                                    ^^^^
lib/horizon_borrower_lookup.rb:53:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/horizon_borrower_lookup.rb:54:20: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
    first_borrower =  Nokogiri::XML(fetch_with_auth(request_url)).at('/borrowers/borrower')
                   ^
lib/horizon_borrower_lookup.rb:54:21: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    first_borrower =  Nokogiri::XML(fetch_with_auth(request_url)).at('/borrowers/borrower')
                    ^
lib/horizon_borrower_lookup.rb:59:29: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      hash[:name] = to_text( first_borrower.at('name') )
                            ^
lib/horizon_borrower_lookup.rb:59:55: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      hash[:name] = to_text( first_borrower.at('name') )
                                                      ^
lib/horizon_borrower_lookup.rb:61:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      hash[:pin] = to_text(first_borrower.at("pin"))
                                             ^^^^^
lib/horizon_borrower_lookup.rb:63:24: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      hash[:jhed_lid] =
                       ^
lib/horizon_borrower_lookup.rb:64:17: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        to_text( first_borrower.at('other_ids/other_id[location="general"]') )
                ^
lib/horizon_borrower_lookup.rb:64:77: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        to_text( first_borrower.at('other_ids/other_id[location="general"]') )
                                                                            ^
lib/horizon_borrower_lookup.rb:65:7: C: Layout/LeadingCommentSpace: Missing space after #.
      #hopkinsID is tricky. What's in second_id is sometimes it, sometimes
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/horizon_borrower_lookup.rb:66:7: C: Layout/LeadingCommentSpace: Missing space after #.
      #not. We'll count it a hopkinsID if it looks like one.
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/horizon_borrower_lookup.rb:67:27: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      second_id = to_text( first_borrower.at('second_id') )
                          ^
lib/horizon_borrower_lookup.rb:67:58: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      second_id = to_text( first_borrower.at('second_id') )
                                                         ^
lib/horizon_borrower_lookup.rb:68:7: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if (second_id && second_id =~ /^[A-Z0-9]{6}$/)
      ^^
lib/horizon_borrower_lookup.rb:68:10: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
      if (second_id && second_id =~ /^[A-Z0-9]{6}$/)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/horizon_borrower_lookup.rb:72:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/horizon_borrower_lookup.rb:73:5: C: Style/RedundantReturn: Redundant return detected.
    return hash
    ^^^^^^
lib/horizon_borrower_lookup.rb:74:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/horizon_borrower_lookup.rb:80:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/horizon_borrower_lookup.rb:81:41: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  class UnavailableError < StandardError
                                        ^
lib/horizon_borrower_lookup.rb:82:20: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.
    def initialize(e = nil, msg = "Sorry, a technical error with our system has occured, unable to lookup borrower account information.")
                   ^
lib/horizon_borrower_lookup.rb:82:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    def initialize(e = nil, msg = "Sorry, a technical error with our system has occured, unable to lookup borrower account information.")
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/horizon_borrower_lookup.rb:82:121: C: Layout/LineLength: Line is too long. [137/120]
    def initialize(e = nil, msg = "Sorry, a technical error with our system has occured, unable to lookup borrower account information.")
                                                                                                                        ^^^^^^^^^^^^^^^^^
lib/horizon_borrower_lookup.rb:86:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def original_exception
    ^^^^^^^^^^^^^^^^^^^^^^
lib/horizon_borrower_lookup.rb:86:5: C: Style/TrivialAccessors: Use attr_reader to define trivial reader methods.
    def original_exception
    ^^^
lib/horizon_borrower_lookup.rb:90:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/ils_status.rb:5:3: C: Style/ClassVars: Replace class var @@list with a class instance var.
  @@list = []
  ^^^^^^
lib/ils_status.rb:6:30: C: Rails/FilePath: Please use Rails.root.join('path/to') instead.
  structure = YAML.load_file(File.join(Rails.root, "config", "ils_status_descriptions.yml"))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/ils_status.rb:6:52: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  structure = YAML.load_file(File.join(Rails.root, "config", "ils_status_descriptions.yml"))
                                                   ^^^^^^^^
lib/ils_status.rb:6:62: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  structure = YAML.load_file(File.join(Rails.root, "config", "ils_status_descriptions.yml"))
                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/ils_status.rb:10:68: C: Layout/TrailingWhitespace: Trailing whitespace detected.
     # into an id. "id" is sort of a reserved word, so "identifier"
                                                                   ^
lib/ils_status.rb:11:3: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
     item = OpenStruct.new(values.merge("display_label" => label, "identifier" => label.downcase.parameterize))
  ^^^
lib/ils_status.rb:11:41: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
     item = OpenStruct.new(values.merge("display_label" => label, "identifier" => label.downcase.parameterize))
                                        ^^^^^^^^^^^^^^^
lib/ils_status.rb:11:67: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
     item = OpenStruct.new(values.merge("display_label" => label, "identifier" => label.downcase.parameterize))
                                                                  ^^^^^^^^^^^^
lib/ils_status.rb:13:42: C: Rails/OutputSafety: Tagging a string as html safe may be a security risk.
     item.explanation = item.explanation.html_safe if item.explanation
                                         ^^^^^^^^^
lib/ils_status.rb:23:17: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    @@list.find {|item| item.identifier == id}
                ^^
lib/ils_status.rb:23:46: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    @@list.find {|item| item.identifier == id}
                                             ^
lib/ils_status.rb:25:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/ils_status.rb:27:3: C: Metrics/AbcSize: Assignment Branch Condition size for find_by_holding is too high. [<5, 22, 13> 26.04/15]
  def self.find_by_holding(holding, options = {}) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/ils_status.rb:27:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for find_by_holding is too high. [12/7]
  def self.find_by_holding(holding, options = {}) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/ils_status.rb:27:3: C: Metrics/MethodLength: Method has too many lines. [19/10]
  def self.find_by_holding(holding, options = {}) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/ils_status.rb:27:3: C: Metrics/PerceivedComplexity: Perceived complexity for find_by_holding is too high. [10/7]
  def self.find_by_holding(holding, options = {}) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/ils_status.rb:28:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    options.reverse_merge!(:default_fallback => true)
                           ^^^^^^^^^^^^^^^^^^^^
lib/ils_status.rb:32:7: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
      item.item_status_codes && item.item_status_codes.include?( holding.status.internal_code )
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/ils_status.rb:32:65: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      item.item_status_codes && item.item_status_codes.include?( holding.status.internal_code )
                                                                ^
lib/ils_status.rb:32:94: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      item.item_status_codes && item.item_status_codes.include?( holding.status.internal_code )
                                                                                             ^
lib/ils_status.rb:35:5: C: Style/OrAssignment: Use the double pipe equals operator ||= instead.
    unless description ...
    ^^^^^^^^^^^^^^^^^^
lib/ils_status.rb:38:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/ils_status.rb:39:26: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
        query_label = if holding.status && holding.status.display_label
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/ils_status.rb:40:11: C: Layout/IndentationWidth: Use 2 (not -12) spaces for indentation.
          holding.status.display_label.downcase
          ^^^^^^^^^^^^
lib/ils_status.rb:41:9: C: Layout/ElseAlignment: Align else with if.
        else
        ^^^^
lib/ils_status.rb:42:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          "ERROR"
          ^^^^^^^
lib/ils_status.rb:43:9: W: Layout/EndAlignment: end at 43, 8 is not aligned with if at 39, 22.
        end
        ^^^
lib/ils_status.rb:44:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/ils_status.rb:45:9: C: Style/NumericPredicate: Use desc_label.index(query_label).zero? instead of desc_label.index(query_label) == 0.
        desc_label.index(query_label) == 0 || query_label.index(desc_label) == 0
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/ils_status.rb:45:47: C: Style/NumericPredicate: Use query_label.index(desc_label).zero? instead of query_label.index(desc_label) == 0.
        desc_label.index(query_label) == 0 || query_label.index(desc_label) == 0
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/ils_status.rb:46:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/ils_status.rb:47:10: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      end
         ^^^^^^
lib/ils_status.rb:51:33: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
      description = @@list.find {|item| item.display_label == "DEFAULT"}
                                ^^
lib/ils_status.rb:51:63: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      description = @@list.find {|item| item.display_label == "DEFAULT"}
                                                              ^^^^^^^^^
lib/ils_status.rb:51:72: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      description = @@list.find {|item| item.display_label == "DEFAULT"}
                                                                       ^
lib/ils_status.rb:54:5: C: Style/RedundantReturn: Redundant return detected.
    return description
    ^^^^^^
lib/ils_status.rb:57:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/jh_config.rb:1:70: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# Just a place to store configuration information for local app code.
                                                                     ^
lib/jh_config.rb:5:19: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    @params ||= {}
                  ^^^^
lib/lcc_to_extra_label.rb:4:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
lib/lcc_to_extra_label.rb:10:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
lib/lcc_to_extra_label.rb:16:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# information for other libraries.
                                  ^
lib/lcc_to_extra_label.rb:19:47: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # right now just MSE, but could be expanded.
                                              ^
lib/lcc_to_extra_label.rb:20:41: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  cattr_accessor :collection_code_to_set
                                        ^^^^
lib/lcc_to_extra_label.rb:21:3: C: Style/ClassVars: Replace class var @@collection_code_to_set with a class instance var.
  @@collection_code_to_set = {}
  ^^^^^^^^^^^^^^^^^^^^^^^^
lib/lcc_to_extra_label.rb:22:3: C: Style/WordArray: Use %w or %W for an array of words.
  ['emain', 'emainnc', 'eanal', 'eanalnc', 'ecl87', 'eclass', ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/lcc_to_extra_label.rb:23:3: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
  'ecirla', 'ecirlnc', 'eolsc', 'eolser', 'eolserb'].each do |id|
  ^^^^^^^^
lib/lcc_to_extra_label.rb:24:5: C: Style/RedundantSelf: Redundant self detected.
    self.collection_code_to_set[id] = :msel
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/lcc_to_extra_label.rb:25:6: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  end
     ^^
lib/lcc_to_extra_label.rb:26:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/lcc_to_extra_label.rb:27:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/lcc_to_extra_label.rb:37:3: C: Style/ClassVars: Replace class var @@set_to_map with a class instance var.
  @@set_to_map = {}
  ^^^^^^^^^^^^
lib/lcc_to_extra_label.rb:39:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/lcc_to_extra_label.rb:40:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  [("K".."KZ"),('A'..'AZ')].each do |range|
    ^^^
lib/lcc_to_extra_label.rb:40:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  [("K".."KZ"),('A'..'AZ')].each do |range|
         ^^^^
lib/lcc_to_extra_label.rb:40:15: C: Layout/SpaceAfterComma: Space missing after comma.
  [("K".."KZ"),('A'..'AZ')].each do |range|
              ^
lib/lcc_to_extra_label.rb:41:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    msel[range] = "A Level"
                  ^^^^^^^^^
lib/lcc_to_extra_label.rb:43:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/lcc_to_extra_label.rb:44:56: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  [('B'..'BD'), ('BH'..'BX'), ('C'..'CZ'), ('D'..'DZ'),
                                                       ^
lib/lcc_to_extra_label.rb:45:5: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
    ('E'..'EZ'), ('F'..'FZ'), ('G'..'GA'), ('GF'..'GV'), ('H'..'HZ'),
    ^^^^^^^^^^^
lib/lcc_to_extra_label.rb:46:5: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
    ('J'..'JZ'), ('L'..'LZ'), ('M'..'MZ')].each do |range|
    ^^^^^^^^^^^
lib/lcc_to_extra_label.rb:47:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    msel[range] = "B Level"
                  ^^^^^^^^^
lib/lcc_to_extra_label.rb:49:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/lcc_to_extra_label.rb:50:70: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  [('BF'..'BF'), ('GB'..'GE'), ('Q'..'QZ'), ('R'..'RZ'), ('S'..'SZ'),
                                                                     ^
lib/lcc_to_extra_label.rb:52:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    msel[range] = "C Level"
                  ^^^^^^^^^
lib/lcc_to_extra_label.rb:54:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/lcc_to_extra_label.rb:56:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    msel[range] = "D Level"
                  ^^^^^^^^^
lib/lcc_to_extra_label.rb:58:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/lcc_to_extra_label.rb:59:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/lcc_to_extra_label.rb:61:71: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # returns a floor label like "A Level", or nil if it can't find one.
                                                                      ^
lib/lcc_to_extra_label.rb:62:3: C: Metrics/MethodLength: Method has too many lines. [11/10]
  def self.translate(coll_code, lcc) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/lcc_to_extra_label.rb:63:11: C: Style/RedundantSelf: Redundant self detected.
    map = self.set_to_map[ self.collection_code_to_set[coll_code] ]
          ^^^^^^^^^^^^^^^
lib/lcc_to_extra_label.rb:63:27: C: Layout/SpaceInsideReferenceBrackets: Do not use space inside reference brackets.
    map = self.set_to_map[ self.collection_code_to_set[coll_code] ]
                          ^
lib/lcc_to_extra_label.rb:63:28: C: Style/RedundantSelf: Redundant self detected.
    map = self.set_to_map[ self.collection_code_to_set[coll_code] ]
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/lcc_to_extra_label.rb:63:66: C: Layout/SpaceInsideReferenceBrackets: Do not use space inside reference brackets.
    map = self.set_to_map[ self.collection_code_to_set[coll_code] ]
                                                                 ^
lib/lcc_to_extra_label.rb:64:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/lcc_to_extra_label.rb:66:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/lcc_to_extra_label.rb:70:23: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # false negatives.
                      ^
lib/lcc_to_extra_label.rb:72:16: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
      prefix = $2.upcase
               ^^
lib/lcc_to_extra_label.rb:73:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/lcc_to_extra_label.rb:76:57: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        # so long as our range/string is left-hand side.
                                                        ^
lib/lcc_to_extra_label.rb:77:9: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
        if (range.cover? prefix)
        ^^
lib/lcc_to_extra_label.rb:77:12: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
        if (range.cover? prefix)
           ^^^^^^^^^^^^^^^^^^^^^
lib/lcc_to_extra_label.rb:80:10: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      end
         ^^^^^^
lib/lcc_to_extra_label.rb:82:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/lcc_to_extra_label.rb:84:42: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # or if the prefix wasn't in the map.
                                         ^
lib/lcc_to_extra_label.rb:85:5: C: Style/RedundantReturn: Redundant return detected.
    return nil
    ^^^^^^
lib/lcc_to_extra_label.rb:85:15: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    return nil
              ^^^^
lib/lcc_to_extra_label.rb:87:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/render_unstemmed_constraint_helper.rb:4:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/render_unstemmed_constraint_helper.rb:7:20: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # super. oh well.
                   ^
lib/render_unstemmed_constraint_helper.rb:8:53: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  def render_constraints_filters(my_params = params)
                                                    ^^^^
lib/render_unstemmed_constraint_helper.rb:10:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      render_constraint_element(nil, "<i>Stemming disabled</i>".html_safe, :remove => my_params.merge(:unstemmed_search => nil).permit(:unstemmed_search => nil))
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/render_unstemmed_constraint_helper.rb:10:76: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render_constraint_element(nil, "<i>Stemming disabled</i>".html_safe, :remove => my_params.merge(:unstemmed_search => nil).permit(:unstemmed_search => nil))
                                                                           ^^^^^^^^^^
lib/render_unstemmed_constraint_helper.rb:10:103: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render_constraint_element(nil, "<i>Stemming disabled</i>".html_safe, :remove => my_params.merge(:unstemmed_search => nil).permit(:unstemmed_search => nil))
                                                                                                      ^^^^^^^^^^^^^^^^^^^^
lib/render_unstemmed_constraint_helper.rb:10:121: C: Layout/LineLength: Line is too long. [161/120]
      render_constraint_element(nil, "<i>Stemming disabled</i>".html_safe, :remove => my_params.merge(:unstemmed_search => nil).permit(:unstemmed_search => nil))
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/render_unstemmed_constraint_helper.rb:10:136: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render_constraint_element(nil, "<i>Stemming disabled</i>".html_safe, :remove => my_params.merge(:unstemmed_search => nil).permit(:unstemmed_search => nil))
                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^
lib/render_unstemmed_constraint_helper.rb:12:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "".html_safe
      ^^
lib/render_unstemmed_constraint_helper.rb:15:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/render_unstemmed_constraint_helper.rb:17:36: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # in saved searches at all. oops.
                                   ^
lib/render_unstemmed_constraint_helper.rb:20:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      render_search_to_s_element(nil, "(Stemming disabled)")
                                      ^^^^^^^^^^^^^^^^^^^^^
lib/render_unstemmed_constraint_helper.rb:22:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "".html_safe
      ^^
lib/render_unstemmed_constraint_helper.rb:25:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/cucumber.rake:7:1: C: Layout/EmptyLines: Extra blank line detected.
lib/tasks/cucumber.rake:8:18: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
unless ARGV.any? {|a| a =~ /^gems/} # Don't load anything when running the gems:* tasks
                 ^^
lib/tasks/cucumber.rake:8:35: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
unless ARGV.any? {|a| a =~ /^gems/} # Don't load anything when running the gems:* tasks
                                  ^
lib/tasks/cucumber.rake:10:1: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
vendored_cucumber_bin = Dir["#{Rails.root}/vendor/{gems,plugins}/cucumber*/bin/cucumber"].first

lib/tasks/cucumber.rake:10:29: C: Rails/FilePath: Please use Rails.root.join('path/to') instead.
vendored_cucumber_bin = Dir["#{Rails.root}/vendor/{gems,plugins}/cucumber*/bin/cucumber"].first
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/cucumber.rake:17:30: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    Cucumber::Rake::Task.new({:ok => 'test:prepare'}, 'Run features that should pass') do |t|
                             ^
lib/tasks/cucumber.rake:17:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    Cucumber::Rake::Task.new({:ok => 'test:prepare'}, 'Run features that should pass') do |t|
                              ^^^^^^
lib/tasks/cucumber.rake:17:52: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    Cucumber::Rake::Task.new({:ok => 'test:prepare'}, 'Run features that should pass') do |t|
                                                   ^
lib/tasks/cucumber.rake:23:30: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    Cucumber::Rake::Task.new({:wip => 'test:prepare'}, 'Run features that are being worked on') do |t|
                             ^
lib/tasks/cucumber.rake:23:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    Cucumber::Rake::Task.new({:wip => 'test:prepare'}, 'Run features that are being worked on') do |t|
                              ^^^^^^^
lib/tasks/cucumber.rake:23:53: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    Cucumber::Rake::Task.new({:wip => 'test:prepare'}, 'Run features that are being worked on') do |t|
                                                    ^
lib/tasks/cucumber.rake:29:30: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    Cucumber::Rake::Task.new({:rerun => 'test:prepare'}, 'Record failing features and run only them if any exist') do |t|
                             ^
lib/tasks/cucumber.rake:29:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    Cucumber::Rake::Task.new({:rerun => 'test:prepare'}, 'Record failing features and run only them if any exist') do |t|
                              ^^^^^^^^^
lib/tasks/cucumber.rake:29:55: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    Cucumber::Rake::Task.new({:rerun => 'test:prepare'}, 'Record failing features and run only them if any exist') do |t|
                                                      ^
lib/tasks/cucumber.rake:29:121: C: Layout/LineLength: Line is too long. [121/120]
    Cucumber::Rake::Task.new({:rerun => 'test:prepare'}, 'Record failing features and run only them if any exist') do |t|
                                                                                                                        ^
lib/tasks/cucumber.rake:36:10: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    task :all => [:ok, :wip]
         ^^^^^^^
lib/tasks/cucumber.rake:36:18: C: Style/SymbolArray: Use %i or %I for an array of symbols.
    task :all => [:ok, :wip]
                 ^^^^^^^^^^^
lib/tasks/cucumber.rake:38:5: C: Rails/RakeEnvironment: Include :environment task as a dependency for all Rake tasks.
    task :statsetup do
    ^^^^^^^^^^^^^^^
lib/tasks/cucumber.rake:40:30: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
      ::STATS_DIRECTORIES << %w(Cucumber\ features features) if File.exist?('features')
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/cucumber.rake:41:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      ::CodeStatistics::TEST_TYPES << "Cucumber features" if File.exist?('features')
                                      ^^^^^^^^^^^^^^^^^^^
lib/tasks/cucumber.rake:44:5: C: Rails/RakeEnvironment: Include :environment task as a dependency for all Rake tasks.
    task :annotations_setup do
    ^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/cucumber.rake:54:8: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  task :cucumber => 'cucumber:ok'
       ^^^^^^^^^^^^
lib/tasks/cucumber.rake:56:8: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  task :default => :cucumber
       ^^^^^^^^^^^
lib/tasks/cucumber.rake:58:8: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  task :features => :cucumber do
       ^^^^^^^^^^^^
lib/tasks/cucumber.rake:59:5: C: Style/StderrPuts: Use warn instead of STDERR.puts to allow such output to be disabled.
    STDERR.puts "*** The 'features' task is deprecated. See rake -T cucumber ***"
    ^^^^^^^^^^^
lib/tasks/cucumber.rake:63:3: C: Rails/RakeEnvironment: Include :environment task as a dependency for all Rake tasks.
  task 'test:prepare' do
  ^^^^^^^^^^^^^^^^^^^
lib/tasks/cucumber.rake:66:8: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  task :stats => 'cucumber:statsetup'
       ^^^^^^^^^
lib/tasks/cucumber.rake:68:8: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  task :notes => 'cucumber:annotations_setup'
       ^^^^^^^^^
lib/tasks/cucumber.rake:71:3: C: Rails/RakeEnvironment: Include :environment task as a dependency for all Rake tasks.
  task :cucumber do
  ^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:5:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
lib/tasks/horizon_alphag.rake:6:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  desc "Mass index from Horizon, with replication"
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:7:3: C: Rails/RakeEnvironment: Include :environment task as a dependency for all Rake tasks.
  task "mass_index" do
  ^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:7:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  task "mass_index" do
       ^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:13:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:14:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:18:52: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # have it for manual recovery even if we crash.
                                                   ^
lib/tasks/horizon_alphag.rake:22:53: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # directory, it won't be noticed for collisions!
                                                    ^
lib/tasks/horizon_alphag.rake:23:16: C: Rails/FilePath: Please use Rails.root.join('path/to') instead.
    lockfile = File.join(Rails.root, "tmp", "pids", "horizon_mass_index.pid")
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:23:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    lockfile = File.join(Rails.root, "tmp", "pids", "horizon_mass_index.pid")
                                     ^^^^^
lib/tasks/horizon_alphag.rake:23:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    lockfile = File.join(Rails.root, "tmp", "pids", "horizon_mass_index.pid")
                                            ^^^^^^
lib/tasks/horizon_alphag.rake:23:53: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    lockfile = File.join(Rails.root, "tmp", "pids", "horizon_mass_index.pid")
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:27:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    end
       ^^^^
lib/tasks/horizon_alphag.rake:28:23: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    start_time = Time.now
                      ^^^
lib/tasks/horizon_alphag.rake:29:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:31:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:32:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:33:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    File.open(lockfile, "w") do |f|
                        ^^^
lib/tasks/horizon_alphag.rake:34:15: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      f.write( {'pid' => Process.pid, 'start_time' => start_time}.to_yaml )
              ^
lib/tasks/horizon_alphag.rake:34:16: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      f.write( {'pid' => Process.pid, 'start_time' => start_time}.to_yaml )
               ^
lib/tasks/horizon_alphag.rake:34:65: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      f.write( {'pid' => Process.pid, 'start_time' => start_time}.to_yaml )
                                                                ^
lib/tasks/horizon_alphag.rake:34:74: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      f.write( {'pid' => Process.pid, 'start_time' => start_time}.to_yaml )
                                                                         ^
lib/tasks/horizon_alphag.rake:36:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:37:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #Delete the lockfile even if we die weirdly
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:39:15: W: Lint/DeprecatedClassMethods: File.exists? is deprecated in favor of File.exist?.
      if File.exists?( lockfile )
              ^^^^^^^
lib/tasks/horizon_alphag.rake:39:23: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      if File.exists?( lockfile )
                      ^
lib/tasks/horizon_alphag.rake:39:32: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      if File.exists?( lockfile )
                               ^
lib/tasks/horizon_alphag.rake:44:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:45:39: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # Mass index to replication master
                                      ^
lib/tasks/horizon_alphag.rake:47:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    puts "Running horizon:export_to_index to master"
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:47:53: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    puts "Running horizon:export_to_index to master"
                                                    ^^^^
lib/tasks/horizon_alphag.rake:48:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    Rake::Task["horizon:export_to_index"].invoke
               ^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:48:49: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    Rake::Task["horizon:export_to_index"].invoke
                                                ^^^^
lib/tasks/horizon_alphag.rake:49:55: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    puts "Done importing all horizon to master #{Time.now}"
                                                      ^^^
lib/tasks/horizon_alphag.rake:50:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:55:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    puts "Deleting old records prior to our current import"
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:57:72: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    get_and_print("#{solr_master}/update?stream.body=#{CGI.escape(dq)}"  )
                                                                       ^
lib/tasks/horizon_alphag.rake:57:72: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    get_and_print("#{solr_master}/update?stream.body=#{CGI.escape(dq)}"  )
                                                                       ^^
lib/tasks/horizon_alphag.rake:58:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    get_and_print(solr_master + "/update?stream.body=%3Ccommit/%3E")
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:59:47: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    puts "Done deleting old records at #{Time.now}"
                                              ^^^
lib/tasks/horizon_alphag.rake:60:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:63:19: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    get_and_print( solr_master + "/update?stream.body=%3Coptimize/%3E" )
                  ^
lib/tasks/horizon_alphag.rake:63:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    get_and_print( solr_master + "/update?stream.body=%3Coptimize/%3E" )
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:63:71: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    get_and_print( solr_master + "/update?stream.body=%3Coptimize/%3E" )
                                                                      ^
lib/tasks/horizon_alphag.rake:64:44: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    puts "Done optimizing master at #{Time.now}"
                                           ^^^
lib/tasks/horizon_alphag.rake:65:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:66:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:69:9: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    puts
        ^^^
lib/tasks/horizon_alphag.rake:70:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    sanity_check_count = (ENV["SANITY_CHECK_COUNT"] || 2000000).to_i
                              ^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:70:56: C: Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
    sanity_check_count = (ENV["SANITY_CHECK_COUNT"] || 2000000).to_i
                                                       ^^^^^^^
lib/tasks/horizon_alphag.rake:73:100: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    response = get_and_print("#{solr_master}/select?defType=lucene&q=%2A%3A%2A&rows=0&facet=false")
                                                                                                   ^^^^
lib/tasks/horizon_alphag.rake:74:51: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
    xml = Nokogiri::XML response.body if response.kind_of?(Net::HTTPOK)
                                                  ^^^^^^^^
lib/tasks/horizon_alphag.rake:75:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if xml && (count = xml.at_xpath("//result/@numFound").to_s.to_i) && count >= sanity_check_count
                                    ^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:76:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      puts "...Passed!"
           ^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:80:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    end
       ^^^^
lib/tasks/horizon_alphag.rake:81:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:82:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:86:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    puts "Replicating master to slave"
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:87:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    Rake::Task["solr:replicate"].invoke
               ^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:88:52: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    puts "Done sending replicate command at #{Time.now}. (Replication itself may still be ongoing)"
                                                   ^^^
lib/tasks/horizon_alphag.rake:89:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:90:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:93:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:94:26: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    puts "Done at #{Time.now}"
                         ^^^
lib/tasks/horizon_alphag.rake:96:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:97:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:98:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  desc "Export from Horizon to file"
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:99:3: C: Rails/RakeEnvironment: Include :environment task as a dependency for all Rake tasks.
  task :export do
  ^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:99:18: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  task :export do
                 ^^
lib/tasks/horizon_alphag.rake:103:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:104:44: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    command_line = hzn_export_command_line(:timestamp => timestamp, :output_file => (ENV['OUTPUT'] || :auto), :logfile => logfile)
                                           ^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:104:69: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    command_line = hzn_export_command_line(:timestamp => timestamp, :output_file => (ENV['OUTPUT'] || :auto), :logfile => logfile)
                                                                    ^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:104:111: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    command_line = hzn_export_command_line(:timestamp => timestamp, :output_file => (ENV['OUTPUT'] || :auto), :logfile => logfile)
                                                                                                              ^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:104:121: C: Layout/LineLength: Line is too long. [130/120]
    command_line = hzn_export_command_line(:timestamp => timestamp, :output_file => (ENV['OUTPUT'] || :auto), :logfile => logfile)
                                                                                                                        ^^^^^^^^^^
lib/tasks/horizon_alphag.rake:107:12: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    system( command_line )
           ^
lib/tasks/horizon_alphag.rake:107:25: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    system( command_line )
                        ^
lib/tasks/horizon_alphag.rake:111:39: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    errors = hznexportmarc_log_errors( logfile )
                                      ^
lib/tasks/horizon_alphag.rake:111:47: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    errors = hznexportmarc_log_errors( logfile )
                                              ^
lib/tasks/horizon_alphag.rake:112:8: C: Style/NumericPredicate: Use errors.length.positive? instead of errors.length > 0.
    if errors.length > 0
       ^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:112:8: C: Style/ZeroLengthPredicate: Use !empty? instead of length > 0.
    if errors.length > 0
       ^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:120:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    puts "Deleting log, no errors detected"
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:121:18: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    FileUtils.rm( logfile )
                 ^
lib/tasks/horizon_alphag.rake:121:26: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    FileUtils.rm( logfile )
                         ^
lib/tasks/horizon_alphag.rake:122:6: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  end
     ^^
lib/tasks/horizon_alphag.rake:124:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    desc "usage info for horizon:export"
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:125:5: C: Rails/RakeEnvironment: Include :environment task as a dependency for all Rake tasks.
    task :info do
    ^^^^^^^^^^
lib/tasks/horizon_alphag.rake:127:121: C: Layout/LineLength: Line is too long. [126/120]
      puts "Call this task with arguments to show exactly what java command line would be executed, without executing it:\n\n"
                                                                                                                        ^^^^^^
lib/tasks/horizon_alphag.rake:128:55: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      puts "Would execute:\n#{hzn_export_command_line(:output_file => (ENV['OUTPUT'] || :auto))}\n"
                                                      ^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:130:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      puts "If called with bib restricting options, all public bibs from db are included."
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:132:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      puts "OPTIONS:"
           ^^^^^^^^^^
lib/tasks/horizon_alphag.rake:134:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      puts "OUTPUT => file path to output marc to. If left blank, will use a timestamped default name in rails app home directory."
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:134:121: C: Layout/LineLength: Line is too long. [131/120]
      puts "OUTPUT => file path to output marc to. If left blank, will use a timestamped default name in rails app home directory."
                                                                                                                        ^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:136:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      puts "FIRST =>  min bib num to start with"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:138:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      puts "LAST => max bib num to end with"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:140:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      puts "CONDITIONS => string sql WHERE clause to apply to bib table to define bibs to include for export."
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:142:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      puts "EXPORT_DEBUG => true ;  include debugging information from Horizon Marc Exporter in log"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:144:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      puts "FROM => environment ; pull from a Horizon in specified environment rather than current Rails.env.  For export_to_index, the solr the changes are pushed to will still be Rails.env"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:144:121: C: Layout/LineLength: Line is too long. [191/120]
      puts "FROM => environment ; pull from a Horizon in specified environment rather than current Rails.env.  For export_to_index, the solr the changes are pushed to will still be Rails.env"
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:148:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  desc "pipe straight from exporter to SolrMarc, no marc file on disk"
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:149:3: C: Rails/RakeEnvironment: Include :environment task as a dependency for all Rake tasks.
  task :export_to_index do
  ^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:153:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    load File.join(Blacklight.root, "lib/railties/solr_marc.rake")
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:158:21: C: Rails/FilePath: Please use Rails.root.join('path/to') instead.
    solr_marc_log = File.join(Rails.root, "log", "solrmarc-#{timestamp}.log")
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:158:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    solr_marc_log = File.join(Rails.root, "log", "solrmarc-#{timestamp}.log")
                                          ^^^^^
lib/tasks/horizon_alphag.rake:159:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:160:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:161:76: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # Use #solrmarc_command_line and #compute_arguments from BL solr tasks,
                                                                           ^
lib/tasks/horizon_alphag.rake:164:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:166:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    our_solrmarc_args.merge!(:solr_url => replicate_master_url)  if replicate_master_url
                             ^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:167:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:168:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:169:51: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    complete_command = "#{hzn_export_command_line(:timestamp => timestamp)} | #{solrmarc_command_line(our_solrmarc_args)} 2>#{solr_marc_log}"
                                                  ^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:169:121: C: Layout/LineLength: Line is too long. [141/120]
    complete_command = "#{hzn_export_command_line(:timestamp => timestamp)} | #{solrmarc_command_line(our_solrmarc_args)} 2>#{solr_marc_log}"
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:170:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:174:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #check for errors in log files
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:176:8: C: Style/NumericPredicate: Use export_errors.length.positive? instead of export_errors.length > 0.
    if export_errors.length > 0
       ^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:176:8: C: Style/ZeroLengthPredicate: Use !empty? instead of length > 0.
    if export_errors.length > 0
       ^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:182:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      puts "Deleting HznExport log file, no errors discovered."
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:183:20: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      FileUtils.rm( hzn_export_logfile(timestamp) )
                   ^
lib/tasks/horizon_alphag.rake:183:50: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      FileUtils.rm( hzn_export_logfile(timestamp) )
                                                 ^
lib/tasks/horizon_alphag.rake:185:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:187:8: C: Style/NumericPredicate: Use solrmarc_errors.length.positive? instead of solrmarc_errors.length > 0.
    if solrmarc_errors.length > 0
       ^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:187:8: C: Style/ZeroLengthPredicate: Use !empty? instead of length > 0.
    if solrmarc_errors.length > 0
       ^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:193:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      puts "Deleting SolrMarc log file, no errors discovered."
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:194:20: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      FileUtils.rm( solr_marc_log )
                   ^
lib/tasks/horizon_alphag.rake:194:34: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      FileUtils.rm( solr_marc_log )
                                 ^
lib/tasks/horizon_alphag.rake:196:8: C: Style/NumericPredicate: Use solrmarc_errors.length.positive? instead of solrmarc_errors.length > 0.
    if solrmarc_errors.length > 0 or export_errors.length > 0
       ^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:196:8: C: Style/ZeroLengthPredicate: Use !empty? instead of length > 0.
    if solrmarc_errors.length > 0 or export_errors.length > 0
       ^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:196:35: C: Style/AndOr: Use || instead of or.
    if solrmarc_errors.length > 0 or export_errors.length > 0
                                  ^^
lib/tasks/horizon_alphag.rake:196:38: C: Style/NumericPredicate: Use export_errors.length.positive? instead of export_errors.length > 0.
    if solrmarc_errors.length > 0 or export_errors.length > 0
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:196:38: C: Style/ZeroLengthPredicate: Use !empty? instead of length > 0.
    if solrmarc_errors.length > 0 or export_errors.length > 0
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:198:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      puts "EXITING rake task, subsequent tasks in pipeline like replication may not have occured."
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:198:100: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      puts "EXITING rake task, subsequent tasks in pipeline like replication may not have occured."
                                                                                                   ^^^^^^
lib/tasks/horizon_alphag.rake:202:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:203:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
lib/tasks/horizon_alphag.rake:209:121: C: Layout/LineLength: Line is too long. [128/120]
# [:output_file]  string file path to write marc to. Or :auto to create one based on timestamp. Leave blank to write to stdout.
                                                                                                                        ^^^^^^^^
lib/tasks/horizon_alphag.rake:209:128: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# [:output_file]  string file path to write marc to. Or :auto to create one based on timestamp. Leave blank to write to stdout.
                                                                                                                               ^
lib/tasks/horizon_alphag.rake:210:1: C: Metrics/AbcSize: Assignment Branch Condition size for hzn_export_command_line is too high. [<5, 42, 7> 42.87/15]
def hzn_export_command_line(args = {}) ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:210:1: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for hzn_export_command_line is too high. [9/7]
def hzn_export_command_line(args = {}) ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:210:1: C: Metrics/MethodLength: Method has too many lines. [21/10]
def hzn_export_command_line(args = {}) ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:213:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  args[:log_file] ||=
                     ^
lib/tasks/horizon_alphag.rake:214:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:215:3: C: Layout/AssignmentIndentation: Indent the first line of the right-hand-side of a multi-line assignment.
  log_file = hzn_export_logfile(args[:timestamp])
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:216:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:217:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  str = ""
        ^^
lib/tasks/horizon_alphag.rake:219:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  str << " --tolerant "
         ^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:219:24: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  str << " --tolerant "
                       ^^
lib/tasks/horizon_alphag.rake:220:42: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
  str << " --dbHost #{horizon_connection["host"]} --dbPort #{horizon_connection["port"]} --dbName #{horizon_connection["db_name"]}  --dbLogin #{horizon_connection["login"]} --dbPassword #{horizon_connection["password"]} --dbSrvrType #{horizon_connection["jdbcType"]} "
                                         ^^^^^^
lib/tasks/horizon_alphag.rake:220:81: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
  str << " --dbHost #{horizon_connection["host"]} --dbPort #{horizon_connection["port"]} --dbName #{horizon_connection["db_name"]}  --dbLogin #{horizon_connection["login"]} --dbPassword #{horizon_connection["password"]} --dbSrvrType #{horizon_connection["jdbcType"]} "
                                                                                ^^^^^^
lib/tasks/horizon_alphag.rake:220:120: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
  str << " --dbHost #{horizon_connection["host"]} --dbPort #{horizon_connection["port"]} --dbName #{horizon_connection["db_name"]}  --dbLogin #{horizon_connection["login"]} --dbPassword #{horizon_connection["password"]} --dbSrvrType #{horizon_connection["jdbcType"]} "
                                                                                                                       ^^^^^^^^^
lib/tasks/horizon_alphag.rake:220:121: C: Layout/LineLength: Line is too long. [268/120]
  str << " --dbHost #{horizon_connection["host"]} --dbPort #{horizon_connection["port"]} --dbName #{horizon_connection["db_name"]}  --dbLogin #{horizon_connection["login"]} --dbPassword #{horizon_connection["password"]} --dbSrvrType #{horizon_connection["jdbcType"]} "
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:220:164: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
  str << " --dbHost #{horizon_connection["host"]} --dbPort #{horizon_connection["port"]} --dbName #{horizon_connection["db_name"]}  --dbLogin #{horizon_connection["login"]} --dbPassword #{horizon_connection["password"]} --dbSrvrType #{horizon_connection["jdbcType"]} "
                                                                                                                                                                   ^^^^^^^
lib/tasks/horizon_alphag.rake:220:208: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
  str << " --dbHost #{horizon_connection["host"]} --dbPort #{horizon_connection["port"]} --dbName #{horizon_connection["db_name"]}  --dbLogin #{horizon_connection["login"]} --dbPassword #{horizon_connection["password"]} --dbSrvrType #{horizon_connection["jdbcType"]} "
                                                                                                                                                                                                               ^^^^^^^^^^
lib/tasks/horizon_alphag.rake:220:255: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
  str << " --dbHost #{horizon_connection["host"]} --dbPort #{horizon_connection["port"]} --dbName #{horizon_connection["db_name"]}  --dbLogin #{horizon_connection["login"]} --dbPassword #{horizon_connection["password"]} --dbSrvrType #{horizon_connection["jdbcType"]} "
                                                                                                                                                                                                                                                              ^^^^^^^^^^
lib/tasks/horizon_alphag.rake:226:26: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # added item/copy info.
                         ^
lib/tasks/horizon_alphag.rake:229:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  str << " --bibMode PUBLIC --copyMode PUBLIC --itemMode PUBLIC "
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:230:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  str << " --itemCopyMode DIRECT_ONLY " # currently errors, asked John for advice.
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:230:83: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  str << " --itemCopyMode DIRECT_ONLY " # currently errors, asked John for advice.
                                                                                  ^^
lib/tasks/horizon_alphag.rake:231:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #str << " --holdSum true " # this is really slow, leaving off for now
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:231:72: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  #str << " --holdSum true " # this is really slow, leaving off for now
                                                                       ^
lib/tasks/horizon_alphag.rake:232:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  str << " --nonMARCconfig itemData "
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:234:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:235:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  str << " --testMode " if ENV['EXPORT_DEBUG']
         ^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:237:3: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
  if args[:output_file]
  ^^
lib/tasks/horizon_alphag.rake:240:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:246:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:247:3: C: Style/RedundantReturn: Redundant return detected.
  return str
  ^^^^^^
lib/tasks/horizon_alphag.rake:251:8: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
  Time.now.strftime("%d%b%Y-%H%M")
       ^^^
lib/tasks/horizon_alphag.rake:251:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  Time.now.strftime("%d%b%Y-%H%M")
                    ^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:255:3: C: Rails/FilePath: Please use Rails.root.join('path/to') instead.
  File.join(Rails.root, "log", "HznExportMarc-#{timestamp}.log")
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:255:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  File.join(Rails.root, "log", "HznExportMarc-#{timestamp}.log")
                        ^^^^^
lib/tasks/horizon_alphag.rake:259:14: C: Rails/FilePath: Please use Rails.root.join('path/to') instead.
  base_dir = File.join(Rails.root, "HznExportMarc")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:259:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  base_dir = File.join(Rails.root, "HznExportMarc")
                                   ^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:260:4: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  [ File.join(base_dir, "HznExportMarc.jar"),
   ^
lib/tasks/horizon_alphag.rake:260:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  [ File.join(base_dir, "HznExportMarc.jar"),
                        ^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:261:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    File.join(base_dir, "lib", "jopt-simple-3.2.jar"),
                        ^^^^^
lib/tasks/horizon_alphag.rake:261:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    File.join(base_dir, "lib", "jopt-simple-3.2.jar"),
                               ^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:262:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    File.join(base_dir, "lib", "jTDS.jar"),
                        ^^^^^
lib/tasks/horizon_alphag.rake:262:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    File.join(base_dir, "lib", "jTDS.jar"),
                               ^^^^^^^^^^
lib/tasks/horizon_alphag.rake:263:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    File.join(base_dir, "lib", "lib/Marc4j.jar")
                        ^^^^^
lib/tasks/horizon_alphag.rake:263:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    File.join(base_dir, "lib", "lib/Marc4j.jar")
                               ^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:264:1: C: Layout/EmptyLinesAroundArguments: Empty line detected around arguments.
lib/tasks/horizon_alphag.rake:265:3: C: Layout/MultilineArrayBraceLayout: The closing array brace must be on the same line as the last array element when the opening brace is on the same line as the first array element.
  ].join(":")
  ^
lib/tasks/horizon_alphag.rake:265:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  ].join(":")
         ^^^
lib/tasks/horizon_alphag.rake:268:1: C: Layout/EmptyLines: Extra blank line detected.
lib/tasks/horizon_alphag.rake:269:1: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
def horizon_connection
^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:271:24: C: Rails/FilePath: Please use Rails.root.join('path/to') instead.
    horizon_yml_path = File.join(Rails.root, "config", "horizon.yml")
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:271:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    horizon_yml_path = File.join(Rails.root, "config", "horizon.yml")
                                             ^^^^^^^^
lib/tasks/horizon_alphag.rake:271:56: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    horizon_yml_path = File.join(Rails.root, "config", "horizon.yml")
                                                       ^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:272:16: C: Style/ColonMethodCall: Do not use :: for method calls.
    hash = YAML::load(File.open(horizon_yml_path))
               ^^
lib/tasks/horizon_alphag.rake:272:18: C: Security/YAMLLoad: Prefer using YAML.safe_load over YAML.load.
    hash = YAML::load(File.open(horizon_yml_path))
                 ^^^^
lib/tasks/horizon_alphag.rake:272:51: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    hash = YAML::load(File.open(horizon_yml_path))
                                                  ^^^^
lib/tasks/horizon_alphag.rake:279:20: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# @bad_tag_numbers.
                   ^
lib/tasks/horizon_alphag.rake:280:1: C: Metrics/MethodLength: Method has too many lines. [18/10]
def hznexportmarc_log_errors(logfile) ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:282:3: W: Lint/UselessAssignment: Useless assignment to variable - bad_tag_numbers.
  bad_tag_numbers = []
  ^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:283:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:284:15: C: Style/Semicolon: Do not use semicolons to terminate expressions.
  line_num = 0;
              ^
lib/tasks/horizon_alphag.rake:292:7: C: Layout/LeadingCommentSpace: Missing space after #.
      #if line =~ /^invalid tag number/
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:294:34: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # Actual unexpected errors.
                                 ^
lib/tasks/horizon_alphag.rake:300:46: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        errors << "Line #{line_num}: #{line}"
                                             ^^^^^^^
lib/tasks/horizon_alphag.rake:306:3: C: Style/RedundantReturn: Redundant return detected.
  return errors
  ^^^^^^
lib/tasks/horizon_alphag.rake:309:1: C: Metrics/MethodLength: Method has too many lines. [15/10]
def solrmarc_log_errors(logfile) ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/horizon_alphag.rake:317:9: W: Lint/UselessAssignment: Useless assignment to variable - bib_num.
        bib_num = nil
        ^^^^^^^
lib/tasks/horizon_alphag.rake:320:7: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if line =~ /Added record \d+ read from file: (\d+)/
      ^^
lib/tasks/horizon_alphag.rake:321:24: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
        last_bib_num = $1
                       ^^
lib/tasks/horizon_alphag.rake:323:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/horizon_alphag.rake:326:3: C: Style/RedundantReturn: Redundant return detected.
  return errors
  ^^^^^^
lib/tasks/jhu.rake:4:1: C: Rails/RakeEnvironment: Include :environment task as a dependency for all Rake tasks.
task :ci do
^^^^^^^^
lib/tasks/jhu.rake:10:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    solr.with_collection(name: "blacklight-core", dir: Rails.root.join("solr", "conf").to_s) do
                               ^^^^^^^^^^^^^^^^^
lib/tasks/jhu.rake:10:56: C: Rails/FilePath: Please use Rails.root.join('path/to') instead.
    solr.with_collection(name: "blacklight-core", dir: Rails.root.join("solr", "conf").to_s) do
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/jhu.rake:10:72: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    solr.with_collection(name: "blacklight-core", dir: Rails.root.join("solr", "conf").to_s) do
                                                                       ^^^^^^
lib/tasks/jhu.rake:10:80: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    solr.with_collection(name: "blacklight-core", dir: Rails.root.join("solr", "conf").to_s) do
                                                                               ^^^^^^
lib/tasks/jhu.rake:21:3: C: Rails/RakeEnvironment: Include :environment task as a dependency for all Rake tasks.
  task :server, [:rails_server_args] do
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/jhu.rake:28:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      solr.with_collection(name: "blacklight-core", dir: Rails.root.join("solr", "conf").to_s) do
                                 ^^^^^^^^^^^^^^^^^
lib/tasks/jhu.rake:28:58: C: Rails/FilePath: Please use Rails.root.join('path/to') instead.
      solr.with_collection(name: "blacklight-core", dir: Rails.root.join("solr", "conf").to_s) do
                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/jhu.rake:28:74: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      solr.with_collection(name: "blacklight-core", dir: Rails.root.join("solr", "conf").to_s) do
                                                                         ^^^^^^
lib/tasks/jhu.rake:28:82: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      solr.with_collection(name: "blacklight-core", dir: Rails.root.join("solr", "conf").to_s) do
                                                                                 ^^^^^^
lib/tasks/jhu.rake:29:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        puts "Solr running at http://localhost:8983/solr/blacklight-core/, ^C to exit"
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/jhu.rake:33:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          system "bundle exec rails s -b 0.0.0.0"
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/jhu.rake:42:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  desc "Start solr server for testing."
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/jhu.rake:43:3: C: Rails/RakeEnvironment: Include :environment task as a dependency for all Rake tasks.
  task :test do
  ^^^^^^^^^^
lib/tasks/jhu.rake:49:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        solr.with_collection(name: "blacklight-core", dir: Rails.root.join("solr", "conf").to_s) do
                                   ^^^^^^^^^^^^^^^^^
lib/tasks/jhu.rake:49:60: C: Rails/FilePath: Please use Rails.root.join('path/to') instead.
        solr.with_collection(name: "blacklight-core", dir: Rails.root.join("solr", "conf").to_s) do
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/jhu.rake:49:76: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        solr.with_collection(name: "blacklight-core", dir: Rails.root.join("solr", "conf").to_s) do
                                                                           ^^^^^^
lib/tasks/jhu.rake:49:84: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        solr.with_collection(name: "blacklight-core", dir: Rails.root.join("solr", "conf").to_s) do
                                                                                   ^^^^^^
lib/tasks/jhu.rake:50:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          puts "Solr running at http://localhost:8985/solr/#/blacklight-core/, ^C to exit"
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/jhu.rake:64:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  desc "Start solr server for development."
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/jhu.rake:65:3: C: Rails/RakeEnvironment: Include :environment task as a dependency for all Rake tasks.
  task :development do
  ^^^^^^^^^^^^^^^^^
lib/tasks/jhu.rake:70:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      solr.with_collection(name: "blacklight-core", dir: Rails.root.join("solr", "conf").to_s) do
                                 ^^^^^^^^^^^^^^^^^
lib/tasks/jhu.rake:70:58: C: Rails/FilePath: Please use Rails.root.join('path/to') instead.
      solr.with_collection(name: "blacklight-core", dir: Rails.root.join("solr", "conf").to_s) do
                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/jhu.rake:70:74: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      solr.with_collection(name: "blacklight-core", dir: Rails.root.join("solr", "conf").to_s) do
                                                                         ^^^^^^
lib/tasks/jhu.rake:70:82: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      solr.with_collection(name: "blacklight-core", dir: Rails.root.join("solr", "conf").to_s) do
                                                                                 ^^^^^^
lib/tasks/jhu.rake:71:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        puts "Solr running at http://localhost:8983/solr/#/blacklight-core/, ^C to exit"
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/jhu.rake:82:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  desc "Put sample JHU data into solr"
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/jhu.rake:83:8: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  task :index_jhu_fixtures => :environment do
       ^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/marc_codes.rake:6:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
lib/tasks/marc_codes.rake:7:1: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
desc "fetch marc geographic codes, write solrmarc-style translation properties to stdout"

lib/tasks/marc_codes.rake:7:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
desc "fetch marc geographic codes, write solrmarc-style translation properties to stdout"
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/marc_codes.rake:8:1: C: Rails/RakeEnvironment: Include :environment task as a dependency for all Rake tasks.
task :geographic do
^^^^^^^^^^^^^^^^
lib/tasks/marc_codes.rake:9:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  html = Nokogiri::HTML(open("http://www.loc.gov/marc/geoareas/gacs_code.html").read)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/marc_codes.rake:11:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  puts "# Translation map for marc geographic codes constructed by rake marc_codes:geographic task"
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/marc_codes.rake:13:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  html.css("tr").each do |line|
           ^^^^
lib/tasks/marc_codes.rake:14:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    code = line.css("td.code").inner_text.strip
                    ^^^^^^^^^
lib/tasks/marc_codes.rake:15:5: C: Rails/Present: Use if code.present? instead of unless code.blank?.
    unless code.blank?
    ^^^^^^^^^^^^^^^^^^
lib/tasks/marc_codes.rake:15:5: C: Style/Next: Use next to skip iteration.
    unless code.blank?
    ^^^^^^^^^^^^^^^^^^
lib/tasks/marc_codes.rake:17:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/marc_codes.rake:18:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      label = line.css("td[2]").inner_text.strip
                       ^^^^^^^
lib/tasks/marc_codes.rake:19:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/marc_codes.rake:23:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/tasks/marc_codes.rake:25:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
lib/tasks/marc_codes.rake:27:1: C: Layout/TrailingEmptyLines: 2 trailing blank lines detected.
lib/tasks/nightly_cleanup.rake:5:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
desc "Nightly db cleanup tasks for JH Catalyst"
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/nightly_cleanup.rake:6:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
task "nightly_cleanup" => [:purge_searches, :purge_guest_users]
     ^^^^^^^^^^^^^^^^^
lib/tasks/nightly_cleanup.rake:6:27: C: Style/SymbolArray: Use %i or %I for an array of symbols.
task "nightly_cleanup" => [:purge_searches, :purge_guest_users]
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/nightly_cleanup.rake:8:1: C: Layout/EmptyLines: Extra blank line detected.
lib/tasks/nightly_cleanup.rake:9:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
desc "purge old search data"
     ^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/nightly_cleanup.rake:10:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
task "purge_searches" => :environment do
     ^^^^^^^^^^^^^^^^
lib/tasks/nightly_cleanup.rake:13:61: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # (horrible idea on lots of rows), 7 days (too long), etc.
                                                            ^
lib/tasks/nightly_cleanup.rake:15:64: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  puts "#{DateTime.now}: Purging searches more than 2 days old"
                                                               ^^^^
lib/tasks/nightly_cleanup.rake:16:94: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  searches = Search.delete_all(['created_at < ? AND user_id IS NULL', DateTime.now - 2.days])
                                                                                             ^^
lib/tasks/nightly_cleanup.rake:22:16: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# related data.
               ^
lib/tasks/nightly_cleanup.rake:23:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
desc "Purge old guest user data"
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/nightly_cleanup.rake:24:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
task "purge_guest_users" => :environment do
     ^^^^^^^^^^^^^^^^^^^
lib/tasks/nightly_cleanup.rake:25:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  days_old    = (ENV["GUEST_DAYS_OLD"] || 7).to_i.days
                     ^^^^^^^^^^^^^^^^
lib/tasks/nightly_cleanup.rake:32:39: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # deleting the users themselves too.
                                      ^
lib/tasks/nightly_cleanup.rake:35:16: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # with joins.
               ^
lib/tasks/nightly_cleanup.rake:37:46: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # https://github.com/rails/rails/issues/919
                                             ^^
lib/tasks/nightly_cleanup.rake:38:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  expired_guests = User.where(:guest => true).where(["created_at < ?", older_than])
                              ^^^^^^^^^
lib/tasks/nightly_cleanup.rake:38:54: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  expired_guests = User.where(:guest => true).where(["created_at < ?", older_than])
                                                     ^^^^^^^^^^^^^^^^
lib/tasks/nightly_cleanup.rake:39:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  inner_query    = expired_guests.select("users.id")
                                         ^^^^^^^^^^
lib/tasks/nightly_cleanup.rake:41:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  bookmarks = Bookmark.where(:user_id => inner_query).delete_all
                             ^^^^^^^^^^^
lib/tasks/nightly_cleanup.rake:42:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  searches  = Search.where(:user_id => inner_query).delete_all
                           ^^^^^^^^^^^
marc_display/app/helpers/marc_display_helper.rb:2:1: C: Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body beginning.
marc_display/app/helpers/marc_display_helper.rb:4:87: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # call as marc_presenter_list(){} with an empty block get full expected fallthrough.
                                                                                      ^
marc_display/app/helpers/marc_display_helper.rb:5:121: C: Layout/LineLength: Line is too long. [131/120]
  # first, local var passed in in render call: render(:partial => 'marc_display', :locals => {:marc_presenter_config = something })
                                                                                                                        ^^^^^^^^^^^
marc_display/app/helpers/marc_display_helper.rb:9:5: C: Style/RedundantReturn: Redundant return detected.
    return (context && eval("defined?(marc_presenter_list) && marc_presenter_list", context.binding)) || @marc_presenter_list || MarcDisplay::DefaultPresenterConfigList
    ^^^^^^
marc_display/app/helpers/marc_display_helper.rb:9:24: C: Style/EvalWithLocation: Pass __FILE__ and __LINE__ to eval method, as they are used by backtraces.
    return (context && eval("defined?(marc_presenter_list) && marc_presenter_list", context.binding)) || @marc_presenter_list || MarcDisplay::DefaultPresenterConfigList
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_helper.rb:9:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return (context && eval("defined?(marc_presenter_list) && marc_presenter_list", context.binding)) || @marc_presenter_list || MarcDisplay::DefaultPresenterConfigList
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_helper.rb:9:121: C: Layout/LineLength: Line is too long. [168/120]
    return (context && eval("defined?(marc_presenter_list) && marc_presenter_list", context.binding)) || @marc_presenter_list || MarcDisplay::DefaultPresenterConfigList
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_helper.rb:11:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_helper.rb:12:67: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Give us a ruby marc field, get back any 880's that are linked.
                                                                  ^
marc_display/app/helpers/marc_display_helper.rb:14:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #We've got this logic stored in MarcPresenter, expose it as a helper
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_helper.rb:19:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # ezproxy prefixes.
                     ^
marc_display/app/helpers/marc_display_helper.rb:23:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_helper.rb:24:63: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # try to split a 505 contents field into individual entries.
                                                              ^
marc_display/app/helpers/marc_display_helper.rb:31:40: C: Style/WordArray: Use %w or %W for an array of words.
    contents = marc505.find_all { |sf| ["a", "r","g","t"].include?(sf.code)  }.collect {|sf| sf.value }.join(" ")
                                       ^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_helper.rb:31:41: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    contents = marc505.find_all { |sf| ["a", "r","g","t"].include?(sf.code)  }.collect {|sf| sf.value }.join(" ")
                                        ^^^
marc_display/app/helpers/marc_display_helper.rb:31:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    contents = marc505.find_all { |sf| ["a", "r","g","t"].include?(sf.code)  }.collect {|sf| sf.value }.join(" ")
                                             ^^^
marc_display/app/helpers/marc_display_helper.rb:31:49: C: Layout/SpaceAfterComma: Space missing after comma.
    contents = marc505.find_all { |sf| ["a", "r","g","t"].include?(sf.code)  }.collect {|sf| sf.value }.join(" ")
                                                ^
marc_display/app/helpers/marc_display_helper.rb:31:50: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    contents = marc505.find_all { |sf| ["a", "r","g","t"].include?(sf.code)  }.collect {|sf| sf.value }.join(" ")
                                                 ^^^
marc_display/app/helpers/marc_display_helper.rb:31:53: C: Layout/SpaceAfterComma: Space missing after comma.
    contents = marc505.find_all { |sf| ["a", "r","g","t"].include?(sf.code)  }.collect {|sf| sf.value }.join(" ")
                                                    ^
marc_display/app/helpers/marc_display_helper.rb:31:54: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    contents = marc505.find_all { |sf| ["a", "r","g","t"].include?(sf.code)  }.collect {|sf| sf.value }.join(" ")
                                                     ^^^
marc_display/app/helpers/marc_display_helper.rb:31:76: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    contents = marc505.find_all { |sf| ["a", "r","g","t"].include?(sf.code)  }.collect {|sf| sf.value }.join(" ")
                                                                           ^
marc_display/app/helpers/marc_display_helper.rb:31:88: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    contents = marc505.find_all { |sf| ["a", "r","g","t"].include?(sf.code)  }.collect {|sf| sf.value }.join(" ")
                                                                                       ^^
marc_display/app/helpers/marc_display_helper.rb:31:88: C: Style/SymbolProc: Pass &:value as an argument to collect instead of a block.
    contents = marc505.find_all { |sf| ["a", "r","g","t"].include?(sf.code)  }.collect {|sf| sf.value }.join(" ")
                                                                                       ^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_helper.rb:31:110: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    contents = marc505.find_all { |sf| ["a", "r","g","t"].include?(sf.code)  }.collect {|sf| sf.value }.join(" ")
                                                                                                             ^^^
marc_display/app/helpers/marc_display_helper.rb:32:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_helper.rb:33:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    contents.split(" -- ")
                   ^^^^^^
marc_display/app/helpers/marc_display_helper.rb:37:26: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  def url_display_as(url)
                         ^^^^
marc_display/app/helpers/marc_display_helper.rb:38:5: C: Style/RedundantBegin: Redundant begin block detected.
    begin
    ^^^^^
marc_display/app/helpers/marc_display_helper.rb:39:7: C: Style/RedundantReturn: Redundant return detected.
      return URI.parse(url).host
      ^^^^^^
marc_display/app/helpers/marc_display_helper.rb:40:5: C: Style/RescueStandardError: Avoid rescuing without specifying an error class.
    rescue
    ^^^^^^
marc_display/app/helpers/marc_display_helper.rb:41:7: C: Style/RedundantReturn: Redundant return detected.
      return url
      ^^^^^^
marc_display/app/helpers/marc_display_helper.rb:42:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    end
       ^^^^
marc_display/app/helpers/marc_display_helper.rb:43:6: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  end
     ^^
marc_display/app/helpers/marc_display_helper.rb:44:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_helper.rb:46:1: C: Layout/TrailingEmptyLines: 1 trailing blank lines detected.
marc_display/app/helpers/marc_display_logic.rb:1:1: C: Style/Encoding: Unnecessary utf-8 encoding comment.
# encoding: UTF-8
^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:7:25: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# Marc in standard ways.
                        ^
marc_display/app/helpers/marc_display_logic.rb:9:70: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# it's methods do not (and must not) depend on ANY assumed state from
                                                                     ^
marc_display/app/helpers/marc_display_logic.rb:23:73: C: Layout/TrailingWhitespace: Trailing whitespace detected.
#   marc_logic(:format_strip_edge_punctuation, :remove_leading => false)
                                                                        ^
marc_display/app/helpers/marc_display_logic.rb:24:1: C: Metrics/ModuleLength: Module has too many lines. [296/100]
module MarcDisplayLogic ...
^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:27:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def self.instance
^^^^
marc_display/app/helpers/marc_display_logic.rb:28:7: C: Style/RedundantReturn: Redundant return detected.
      return DisplaySingleton.instance
      ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:31:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:33:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def format_260c(value)
^^^^
marc_display/app/helpers/marc_display_logic.rb:33:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def format_260c(value)
    ^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:34:68: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      value.gsub(/c(\d)/, "\302\251\\1").gsub(/p(\d)/, "\u2117\\1")
                                                                   ^
marc_display/app/helpers/marc_display_logic.rb:37:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def format_strip_edge_punctuation(value, options = {})
^^^^
marc_display/app/helpers/marc_display_logic.rb:38:17: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      options = {:remove_leading => true,
                ^
marc_display/app/helpers/marc_display_logic.rb:38:18: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      options = {:remove_leading => true,
                 ^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:39:8: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
       :remove_trailing => true}.merge(options)
       ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:39:8: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
       :remove_trailing => true}.merge(options)
       ^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:39:32: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
       :remove_trailing => true}.merge(options)
                               ^
marc_display/app/helpers/marc_display_logic.rb:41:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:43:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:44:25: C: Style/RegexpLiteral: Use %r around regular expression.
      value = value.sub(/[\/ ,\;\:\=\.]+$/, '') if options[:remove_trailing]
                        ^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:45:25: C: Style/RegexpLiteral: Use %r around regular expression.
      value = value.sub(/^[\/ ,\;\:\=\.]+/, '') if options[:remove_leading]
                        ^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:46:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:49:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:50:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:51:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def format_instr_048(value)
^^^^
marc_display/app/helpers/marc_display_logic.rb:51:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def format_instr_048(value)
    ^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:51:5: C: Metrics/MethodLength: Method has too many lines. [11/10]
    def format_instr_048(value) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:53:9: C: Layout/IndentationConsistency: Inconsistent indentation detected.
        number = value[2..3]
        ^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:54:9: C: Layout/IndentationConsistency: Inconsistent indentation detected.
        number = number.to_i if number
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:55:9: C: Layout/IndentationConsistency: Inconsistent indentation detected.
        number = nil if number == 0
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:55:25: C: Style/NumericPredicate: Use number.zero? instead of number == 0.
        number = nil if number == 0
                        ^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:56:9: C: Layout/IndentationConsistency: Inconsistent indentation detected.
        if instrument ...
        ^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:58:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            (number ? " (#{number})" : "") +
                                       ^^
marc_display/app/helpers/marc_display_logic.rb:59:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            "."
            ^^^
marc_display/app/helpers/marc_display_logic.rb:60:9: C: Style/EmptyElse: Redundant else-clause.
        else
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:65:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def format_aacr2_abbrev(value)
^^^^
marc_display/app/helpers/marc_display_logic.rb:65:5: C: Metrics/MethodLength: Method has too many lines. [13/10]
    def format_aacr2_abbrev(value) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:76:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      value.gsub!(/s\.n\./i, "no publisher")
                             ^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:77:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      value.gsub!(/s\.l\./i, "place unknown")
                             ^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:82:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def format_marc_lang(value)
^^^^
marc_display/app/helpers/marc_display_logic.rb:83:10: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
      if (value && value.length > 0)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:83:20: C: Style/NumericPredicate: Use value.length.positive? instead of value.length > 0.
      if (value && value.length > 0)
                   ^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:83:20: C: Style/ZeroLengthPredicate: Use !empty? instead of length > 0.
      if (value && value.length > 0)
                   ^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:83:37: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      if (value && value.length > 0)
                                    ^
marc_display/app/helpers/marc_display_logic.rb:85:7: C: Style/EmptyElse: Redundant else-clause.
      else
      ^^^^
marc_display/app/helpers/marc_display_logic.rb:90:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def format_245h(value)
^^^^
marc_display/app/helpers/marc_display_logic.rb:90:27: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    def format_245h(value)
                          ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:91:35: C: Style/RegexpLiteral: Use %r around regular expression.
      value.sub(/^\s*\[/, '').sub(/[\]: ,\.\/\=\;]+$/, '').capitalize
                                  ^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:91:70: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      value.sub(/^\s*\[/, '').sub(/[\]: ,\.\/\=\;]+$/, '').capitalize
                                                                     ^
marc_display/app/helpers/marc_display_logic.rb:94:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def format_url_to_anchor(value)
^^^^
marc_display/app/helpers/marc_display_logic.rb:100:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def format_lccn_normalize(value)
^^^^
marc_display/app/helpers/marc_display_logic.rb:103:121: C: Layout/LineLength: Line is too long. [129/120]
      # 2. If there is a forward slash (/) in the string, remove it, and remove all characters to the right of the forward slash.
                                                                                                                        ^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:104:25: C: Style/RegexpLiteral: Use %r around regular expression.
      value = value.sub(/\/.*$/, '')
                        ^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:107:121: C: Layout/LineLength: Line is too long. [143/120]
      # * Inspect the substring following (to the right of) the (removed) hyphen. Then (and assuming that steps 1 and 2 have been carried out):
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:110:44: W: Lint/UnusedBlockArgument: Unused block argument - match. You can omit the argument if you don't care about it.
      value = value.sub(/\-(\d{1,6})/) do |match|
                                           ^^^^^
marc_display/app/helpers/marc_display_logic.rb:111:21: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
        ('0' * (6 - $1.length)) + $1
                    ^^
marc_display/app/helpers/marc_display_logic.rb:111:35: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
        ('0' * (6 - $1.length)) + $1
                                  ^^
marc_display/app/helpers/marc_display_logic.rb:116:1: C: Layout/EmptyLines: Extra blank line detected.
marc_display/app/helpers/marc_display_logic.rb:123:20: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # with options.
                   ^
marc_display/app/helpers/marc_display_logic.rb:124:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def prefix_heading(field, options = {})
^^^^
marc_display/app/helpers/marc_display_logic.rb:124:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def prefix_heading(field, options = {})
    ^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:124:5: C: Metrics/AbcSize: Assignment Branch Condition size for prefix_heading is too high. [<5, 23, 28> 36.58/15]
    def prefix_heading(field, options = {}) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:124:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for prefix_heading is too high. [20/7]
    def prefix_heading(field, options = {}) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:124:5: C: Metrics/MethodLength: Method has too many lines. [26/10]
    def prefix_heading(field, options = {}) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:124:5: C: Metrics/PerceivedComplexity: Perceived complexity for prefix_heading is too high. [22/7]
    def prefix_heading(field, options = {}) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:125:17: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      options = {:materials => "3",
                ^
marc_display/app/helpers/marc_display_logic.rb:125:18: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      options = {:materials => "3",
                 ^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:125:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      options = {:materials => "3",
                               ^^^
marc_display/app/helpers/marc_display_logic.rb:125:36: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      options = {:materials => "3",
                                   ^
marc_display/app/helpers/marc_display_logic.rb:126:11: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
          :uncontrolled_relator => "e",
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:126:11: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          :uncontrolled_relator => "e",
          ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:126:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          :uncontrolled_relator => "e",
                                   ^^^
marc_display/app/helpers/marc_display_logic.rb:126:40: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          :uncontrolled_relator => "e",
                                       ^
marc_display/app/helpers/marc_display_logic.rb:127:11: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
          :controlled_relator => "4",
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:127:11: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          :controlled_relator => "4",
          ^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:127:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          :controlled_relator => "4",
                                 ^^^
marc_display/app/helpers/marc_display_logic.rb:128:11: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
          :default_relator_logic => true}.merge(options)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:128:11: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          :default_relator_logic => true}.merge(options)
          ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:128:41: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
          :default_relator_logic => true}.merge(options)
                                        ^
marc_display/app/helpers/marc_display_logic.rb:130:73: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      materials = options[:materials] ? field[options[:materials]] : nil
                                                                        ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:131:20: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
      relator = if (options[:controlled_relator] && ...
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:132:32: W: Lint/AssignmentInCondition: Use == if you meant to do a comparison or wrap the expression in parentheses to indicate you meant to assign in a condition.
                    controlled = MarcDisplay::CodeMaps::RELATOR[field[options[:controlled_relator]]])
                               ^
marc_display/app/helpers/marc_display_logic.rb:134:23: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an elsif.
                elsif (options[:uncontrolled_relator] &&               ...
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:134:57: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                elsif (options[:uncontrolled_relator] &&
                                                        ^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:135:35: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =.
                      uncontrolled= field[options[:uncontrolled_relator]])
                                  ^
marc_display/app/helpers/marc_display_logic.rb:135:35: W: Lint/AssignmentInCondition: Use == if you meant to do a comparison or wrap the expression in parentheses to indicate you meant to assign in a condition.
                      uncontrolled= field[options[:uncontrolled_relator]])
                                  ^
marc_display/app/helpers/marc_display_logic.rb:136:17: C: Layout/IndentationWidth: Use 2 (not 6) spaces for indentation.
                      format_strip_edge_punctuation(uncontrolled).capitalize
                ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:138:81: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      (field.tag == '100' || field.tag == '110' || field.tag == "111" ||
                                                                                ^^^^^
marc_display/app/helpers/marc_display_logic.rb:142:17: C: Style/EmptyElse: Redundant else-clause.
                else
                ^^^^
marc_display/app/helpers/marc_display_logic.rb:145:10: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
      if ( materials || relator )
         ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:145:11: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      if ( materials || relator )
          ^
marc_display/app/helpers/marc_display_logic.rb:145:32: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      if ( materials || relator )
                               ^
marc_display/app/helpers/marc_display_logic.rb:147:20: C: Style/RedundantCondition: Use double pipes || instead.
        (materials ? materials : "") +
                   ^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:147:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        (materials ? materials : "") +
                                 ^^
marc_display/app/helpers/marc_display_logic.rb:148:10: C: Layout/MultilineOperationIndentation: Use 2 (not 1) spaces for indenting an expression spanning multiple lines.
         (( materials && relator ) ? ", " : "") +
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:148:11: C: Style/TernaryParentheses: Omit parentheses for ternary conditions.
         (( materials && relator ) ? ", " : "") +
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:148:12: C: Layout/SpaceInsideParens: Space inside parentheses detected.
         (( materials && relator ) ? ", " : "") +
           ^
marc_display/app/helpers/marc_display_logic.rb:148:33: C: Layout/SpaceInsideParens: Space inside parentheses detected.
         (( materials && relator ) ? ", " : "") +
                                ^
marc_display/app/helpers/marc_display_logic.rb:148:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
         (( materials && relator ) ? ", " : "") +
                                     ^^^^
marc_display/app/helpers/marc_display_logic.rb:148:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
         (( materials && relator ) ? ", " : "") +
                                            ^^
marc_display/app/helpers/marc_display_logic.rb:149:10: C: Layout/MultilineOperationIndentation: Use 2 (not 1) spaces for indenting an expression spanning multiple lines.
         (relator ? relator : "")
         ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:149:19: C: Style/RedundantCondition: Use double pipes || instead.
         (relator ? relator : "")
                  ^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:149:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
         (relator ? relator : "")
                              ^^
marc_display/app/helpers/marc_display_logic.rb:150:7: C: Style/EmptyElse: Redundant else-clause.
      else
      ^^^^
marc_display/app/helpers/marc_display_logic.rb:151:7: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
         nil
      ^^^
marc_display/app/helpers/marc_display_logic.rb:152:10: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      end
         ^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:155:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def prefix_760(field)
^^^^
marc_display/app/helpers/marc_display_logic.rb:159:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def prefix_762(field)
^^^^
marc_display/app/helpers/marc_display_logic.rb:164:37: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # has it, sometimes it doesn't).
                                    ^
marc_display/app/helpers/marc_display_logic.rb:165:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def prefix_246(field)
^^^^
marc_display/app/helpers/marc_display_logic.rb:166:52: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      display_text = MarcDisplay::Util.h_esc(field["i"])
                                                   ^^^
marc_display/app/helpers/marc_display_logic.rb:168:7: C: Style/RedundantReturn: Redundant return detected.
      return display_text
      ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:172:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def prefix_024(field)
^^^^
marc_display/app/helpers/marc_display_logic.rb:174:9: C: Indent when as deep as case.
        when '0' then "ISRC"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:174:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when '0' then "ISRC"
                      ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:175:9: C: Indent when as deep as case.
        when '1' then "UPC"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:175:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when '1' then "UPC"
                      ^^^^^
marc_display/app/helpers/marc_display_logic.rb:176:9: C: Indent when as deep as case.
        when '2' then "ISMN"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:176:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when '2' then "ISMN"
                      ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:177:9: C: Indent when as deep as case.
        when '3' then "EAN"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:177:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when '3' then "EAN"
                      ^^^^^
marc_display/app/helpers/marc_display_logic.rb:178:9: C: Indent when as deep as case.
        when '4' then "SICI"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:178:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when '4' then "SICI"
                      ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:179:9: C: Indent when as deep as case.
        when '7' then field["2"]
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:179:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when '7' then field["2"]
                            ^^^
marc_display/app/helpers/marc_display_logic.rb:180:9: C: Style/EmptyElse: Redundant else-clause.
        else nil
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:183:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:192:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def prefix_with_3(field, options = {})
^^^^
marc_display/app/helpers/marc_display_logic.rb:192:5: C: Metrics/AbcSize: Assignment Branch Condition size for prefix_with_3 is too high. [<2, 16, 9> 18.47/15]
    def prefix_with_3(field, options = {}) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:192:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for prefix_with_3 is too high. [9/7]
    def prefix_with_3(field, options = {}) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:192:5: C: Metrics/MethodLength: Method has too many lines. [12/10]
    def prefix_with_3(field, options = {}) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:192:5: C: Metrics/PerceivedComplexity: Perceived complexity for prefix_with_3 is too high. [9/7]
    def prefix_with_3(field, options = {}) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:193:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      value = ""
              ^^
marc_display/app/helpers/marc_display_logic.rb:194:10: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
      if ( options[:prefix] &&  ...
         ^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:194:11: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      if ( options[:prefix] &&
          ^
marc_display/app/helpers/marc_display_logic.rb:194:31: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      if ( options[:prefix] &&
                              ^
marc_display/app/helpers/marc_display_logic.rb:196:7: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
          value << options[:prefix]
      ^^^^
marc_display/app/helpers/marc_display_logic.rb:199:10: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
      if (field['3'] && options['prefix'])
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:203:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:206:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      value = nil if value == ""
                              ^^
marc_display/app/helpers/marc_display_logic.rb:207:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:210:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:211:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:212:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def prefix_785(field)
^^^^
marc_display/app/helpers/marc_display_logic.rb:212:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def prefix_785(field)
    ^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:212:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for prefix_785 is too high. [10/7]
    def prefix_785(field) ...
    ^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:212:5: C: Metrics/MethodLength: Method has too many lines. [12/10]
    def prefix_785(field) ...
    ^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:214:9: C: Indent when as deep as case.
        when "0" then "Continued by"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:214:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "0" then "Continued by"
             ^^^
marc_display/app/helpers/marc_display_logic.rb:214:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "0" then "Continued by"
                      ^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:215:9: C: Indent when as deep as case.
        when "1" then "Continued in part by"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:215:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "1" then "Continued in part by"
             ^^^
marc_display/app/helpers/marc_display_logic.rb:215:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "1" then "Continued in part by"
                      ^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:216:9: C: Indent when as deep as case.
        when "2" then "Superseded by"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:216:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "2" then "Superseded by"
             ^^^
marc_display/app/helpers/marc_display_logic.rb:216:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "2" then "Superseded by"
                      ^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:217:9: C: Indent when as deep as case.
        when "3" then "Superseded in part by"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:217:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "3" then "Superseded in part by"
             ^^^
marc_display/app/helpers/marc_display_logic.rb:217:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "3" then "Superseded in part by"
                      ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:218:9: C: Indent when as deep as case.
        when "4" then "Absorbed by"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:218:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "4" then "Absorbed by"
             ^^^
marc_display/app/helpers/marc_display_logic.rb:218:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "4" then "Absorbed by"
                      ^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:219:9: C: Indent when as deep as case.
        when "5" then "Absorbed in part by"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:219:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "5" then "Absorbed in part by"
             ^^^
marc_display/app/helpers/marc_display_logic.rb:219:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "5" then "Absorbed in part by"
                      ^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:220:9: C: Indent when as deep as case.
        when "6" then "Split into"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:220:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "6" then "Split into"
             ^^^
marc_display/app/helpers/marc_display_logic.rb:220:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "6" then "Split into"
                      ^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:221:9: C: Indent when as deep as case.
        when "7" then "Merged"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:221:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "7" then "Merged"
             ^^^
marc_display/app/helpers/marc_display_logic.rb:221:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "7" then "Merged"
                      ^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:222:9: C: Indent when as deep as case.
        when "8" then "Changed back to"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:222:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "8" then "Changed back to"
             ^^^
marc_display/app/helpers/marc_display_logic.rb:222:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "8" then "Changed back to"
                      ^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:223:9: C: Style/EmptyElse: Redundant else-clause.
        else nil
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:227:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def prefix_780(field)
^^^^
marc_display/app/helpers/marc_display_logic.rb:227:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for prefix_780 is too high. [9/7]
    def prefix_780(field) ...
    ^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:229:9: C: Indent when as deep as case.
        when "0" then "Continues"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:229:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "0" then "Continues"
             ^^^
marc_display/app/helpers/marc_display_logic.rb:229:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "0" then "Continues"
                      ^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:230:9: C: Indent when as deep as case.
        when "1" then "Continues in part"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:230:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "1" then "Continues in part"
             ^^^
marc_display/app/helpers/marc_display_logic.rb:230:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "1" then "Continues in part"
                      ^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:231:9: C: Indent when as deep as case.
        when "2" then "Supercedes"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:231:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "2" then "Supercedes"
             ^^^
marc_display/app/helpers/marc_display_logic.rb:231:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "2" then "Supercedes"
                      ^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:232:9: C: Indent when as deep as case.
        when "3" then "Supercedes in part"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:232:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "3" then "Supercedes in part"
             ^^^
marc_display/app/helpers/marc_display_logic.rb:232:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "3" then "Supercedes in part"
                      ^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:233:9: C: Indent when as deep as case.
        when "4" then "Merged from"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:233:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "4" then "Merged from"
             ^^^
marc_display/app/helpers/marc_display_logic.rb:233:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "4" then "Merged from"
                      ^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:234:9: C: Indent when as deep as case.
        when "5" then "Absorbed"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:234:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "5" then "Absorbed"
             ^^^
marc_display/app/helpers/marc_display_logic.rb:234:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "5" then "Absorbed"
                      ^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:235:9: C: Indent when as deep as case.
        when "6" then "Absorbed in part"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:235:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "6" then "Absorbed in part"
             ^^^
marc_display/app/helpers/marc_display_logic.rb:235:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "6" then "Absorbed in part"
                      ^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:236:9: C: Indent when as deep as case.
        when "7" then "Seperated from"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:236:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "7" then "Seperated from"
             ^^^
marc_display/app/helpers/marc_display_logic.rb:236:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "7" then "Seperated from"
                      ^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:237:10: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      end
         ^^
marc_display/app/helpers/marc_display_logic.rb:241:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def prefix_521(field)
^^^^
marc_display/app/helpers/marc_display_logic.rb:242:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {"0" => "Reading grade level", "1" => "Interest age
      ^
marc_display/app/helpers/marc_display_logic.rb:242:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      {"0" => "Reading grade level", "1" => "Interest age
       ^^^
marc_display/app/helpers/marc_display_logic.rb:242:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      {"0" => "Reading grade level", "1" => "Interest age
              ^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:242:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      {"0" => "Reading grade level", "1" => "Interest age
                                     ^^^
marc_display/app/helpers/marc_display_logic.rb:243:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      level", "2" => "Interest grade level"}[field.indicator1]
              ^^^
marc_display/app/helpers/marc_display_logic.rb:243:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      level", "2" => "Interest grade level"}[field.indicator1]
                     ^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:243:44: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      level", "2" => "Interest grade level"}[field.indicator1]
                                           ^
marc_display/app/helpers/marc_display_logic.rb:248:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def prefix_545(field)
^^^^
marc_display/app/helpers/marc_display_logic.rb:250:9: C: Indent when as deep as case.
        when "0" then "Biograpical sketch"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:250:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "0" then "Biograpical sketch"
             ^^^
marc_display/app/helpers/marc_display_logic.rb:250:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "0" then "Biograpical sketch"
                      ^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:251:9: C: Indent when as deep as case.
        when "1" then "Administrative history"
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:251:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "1" then "Administrative history"
             ^^^
marc_display/app/helpers/marc_display_logic.rb:251:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "1" then "Administrative history"
                      ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:252:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        else "Historical information"
             ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:256:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def delete_if_no_t(marc_field)
^^^^
marc_display/app/helpers/marc_display_logic.rb:261:26: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # with marc_logic_map
                         ^^^^
marc_display/app/helpers/marc_display_logic.rb:262:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def map_prefix_lcsh
^^^^
marc_display/app/helpers/marc_display_logic.rb:263:7: C: Layout/SpaceAroundKeyword: Space after keyword unless is missing.
      unless(@map_prefix_lcsh)
      ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:265:9: C: Style/WordArray: Use %w or %W for an array of words.
        ["600", "650", "610", "611", "630", "651", "655", "690"].each do |tag|
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:265:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        ["600", "650", "610", "611", "630", "651", "655", "690"].each do |tag|
         ^^^^^
marc_display/app/helpers/marc_display_logic.rb:265:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        ["600", "650", "610", "611", "630", "651", "655", "690"].each do |tag|
                ^^^^^
marc_display/app/helpers/marc_display_logic.rb:265:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        ["600", "650", "610", "611", "630", "651", "655", "690"].each do |tag|
                       ^^^^^
marc_display/app/helpers/marc_display_logic.rb:265:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        ["600", "650", "610", "611", "630", "651", "655", "690"].each do |tag|
                              ^^^^^
marc_display/app/helpers/marc_display_logic.rb:265:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        ["600", "650", "610", "611", "630", "651", "655", "690"].each do |tag|
                                     ^^^^^
marc_display/app/helpers/marc_display_logic.rb:265:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        ["600", "650", "610", "611", "630", "651", "655", "690"].each do |tag|
                                            ^^^^^
marc_display/app/helpers/marc_display_logic.rb:265:52: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        ["600", "650", "610", "611", "630", "651", "655", "690"].each do |tag|
                                                   ^^^^^
marc_display/app/helpers/marc_display_logic.rb:265:59: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        ["600", "650", "610", "611", "630", "651", "655", "690"].each do |tag|
                                                          ^^^^^
marc_display/app/helpers/marc_display_logic.rb:266:11: C: Style/WordArray: Use %w or %W for an array of words.
          ["v", "x", "y", "z"].each do |subfield|
          ^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:266:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          ["v", "x", "y", "z"].each do |subfield|
           ^^^
marc_display/app/helpers/marc_display_logic.rb:266:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          ["v", "x", "y", "z"].each do |subfield|
                ^^^
marc_display/app/helpers/marc_display_logic.rb:266:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          ["v", "x", "y", "z"].each do |subfield|
                     ^^^
marc_display/app/helpers/marc_display_logic.rb:266:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          ["v", "x", "y", "z"].each do |subfield|
                          ^^^
marc_display/app/helpers/marc_display_logic.rb:267:53: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            @map_prefix_lcsh["#{tag}#{subfield}"] = " — "
                                                    ^^^^^
marc_display/app/helpers/marc_display_logic.rb:276:59: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # Return a hash, possibly by modifying hash passed in.
                                                          ^
marc_display/app/helpers/marc_display_logic.rb:277:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:278:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:282:68: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # as normal, this just changes the query to be phrase searches.
                                                                   ^
marc_display/app/helpers/marc_display_logic.rb:283:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def link_lcsh_subd(link, hash, options ={})
^^^^
marc_display/app/helpers/marc_display_logic.rb:283:5: C: Metrics/AbcSize: Assignment Branch Condition size for link_lcsh_subd is too high. [<4, 20, 2> 20.49/15]
    def link_lcsh_subd(link, hash, options ={}) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:283:5: C: Metrics/MethodLength: Method has too many lines. [14/10]
    def link_lcsh_subd(link, hash, options ={}) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:283:36: W: Lint/UnusedMethodArgument: Unused method argument - options. If it's necessary, use _ or _options as an argument name to indicate that it won't be used.
    def link_lcsh_subd(link, hash, options ={})
                                   ^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:283:43: C: Layout/SpaceAroundEqualsInParameterDefault: Surrounding space missing in default value assignment.
    def link_lcsh_subd(link, hash, options ={})
                                          ^^
marc_display/app/helpers/marc_display_logic.rb:284:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:286:59: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # that subdivisions break on certain subfield codes.
                                                          ^
marc_display/app/helpers/marc_display_logic.rb:287:21: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      subdivisions =
                    ^
marc_display/app/helpers/marc_display_logic.rb:288:7: C: Layout/AssignmentIndentation: Indent the first line of the right-hand-side of a multi-line assignment.
      link.line.marc_field.subfields.inject([""]) do |subdivisions, subfield| ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:288:38: C: Style/EachWithObject: Use each_with_object instead of inject.
      link.line.marc_field.subfields.inject([""]) do |subdivisions, subfield|
                                     ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:288:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      link.line.marc_field.subfields.inject([""]) do |subdivisions, subfield|
                                             ^^
marc_display/app/helpers/marc_display_logic.rb:288:55: W: Lint/ShadowingOuterLocalVariable: Shadowing outer local variable - subdivisions.
      link.line.marc_field.subfields.inject([""]) do |subdivisions, subfield|
                                                      ^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:289:9: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
        if ["v", "x", "y", "z"].include? subfield.code
        ^^
marc_display/app/helpers/marc_display_logic.rb:289:12: C: Style/WordArray: Use %w or %W for an array of words.
        if ["v", "x", "y", "z"].include? subfield.code
           ^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:289:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        if ["v", "x", "y", "z"].include? subfield.code
            ^^^
marc_display/app/helpers/marc_display_logic.rb:289:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        if ["v", "x", "y", "z"].include? subfield.code
                 ^^^
marc_display/app/helpers/marc_display_logic.rb:289:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        if ["v", "x", "y", "z"].include? subfield.code
                      ^^^
marc_display/app/helpers/marc_display_logic.rb:289:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        if ["v", "x", "y", "z"].include? subfield.code
                           ^^^
marc_display/app/helpers/marc_display_logic.rb:290:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          subdivisions.push("")
                            ^^
marc_display/app/helpers/marc_display_logic.rb:292:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        subdivisions.last << (" " + subfield.value)
                              ^^^
marc_display/app/helpers/marc_display_logic.rb:293:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:296:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:298:64: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # punctuation, and phrase quote em if they still need it.
                                                               ^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:300:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        subdivision = subdivision.strip.chomp(".").chomp(",")
                                              ^^^
marc_display/app/helpers/marc_display_logic.rb:300:58: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        subdivision = subdivision.strip.chomp(".").chomp(",")
                                                         ^^^
marc_display/app/helpers/marc_display_logic.rb:301:9: C: Style/TernaryParentheses: Omit parentheses for ternary conditions.
        (subdivision =~ /[^[:alnum:]]/) ? ('"' + subdivision.gsub('"', '') + '"') : subdivision
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:303:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:305:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      hash[:q] = terms.join(" ")
                            ^^^
marc_display/app/helpers/marc_display_logic.rb:306:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:307:7: C: Style/RedundantReturn: Redundant return detected.
      return hash
      ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:309:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:312:121: C: Layout/LineLength: Line is too long. [152/120]
    #   :marc_source =>  array of marc source spec that can be passed to a FieldPresenter to find main entry. Defaults to all fields from 100, 110, 111.
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:313:104: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    #   :phrase_search => once found, should main entry be enclosed in phrase quotes? Defaults to true.
                                                                                                       ^
marc_display/app/helpers/marc_display_logic.rb:314:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def link_add_main_entry(link, hash, options = {})
^^^^
marc_display/app/helpers/marc_display_logic.rb:314:5: C: Metrics/AbcSize: Assignment Branch Condition size for link_add_main_entry is too high. [<6, 18, 3> 19.21/15]
    def link_add_main_entry(link, hash, options = {}) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:314:5: C: Metrics/MethodLength: Method has too many lines. [12/10]
    def link_add_main_entry(link, hash, options = {}) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:315:7: C: Layout/LeadingCommentSpace: Missing space after #.
      #default options
      ^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:316:17: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      options = {:phrase_search => true,
                ^
marc_display/app/helpers/marc_display_logic.rb:316:18: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      options = {:phrase_search => true,
                 ^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:316:41: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      options = {:phrase_search => true,
                                        ^^^
marc_display/app/helpers/marc_display_logic.rb:317:18: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                 :marc_source => ["100abcdfgjklmnopqrstu", "110abcdfgjklmnopqrstu", "111acdefgklnpqstu"]
                 ^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:317:34: C: Style/WordArray: Use %w or %W for an array of words.
                 :marc_source => ["100abcdfgjklmnopqrstu", "110abcdfgjklmnopqrstu", "111acdefgklnpqstu"]
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:317:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                 :marc_source => ["100abcdfgjklmnopqrstu", "110abcdfgjklmnopqrstu", "111acdefgklnpqstu"]
                                  ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:317:60: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                 :marc_source => ["100abcdfgjklmnopqrstu", "110abcdfgjklmnopqrstu", "111acdefgklnpqstu"]
                                                           ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:317:85: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                 :marc_source => ["100abcdfgjklmnopqrstu", "110abcdfgjklmnopqrstu", "111acdefgklnpqstu"]
                                                                                    ^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:317:105: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                 :marc_source => ["100abcdfgjklmnopqrstu", "110abcdfgjklmnopqrstu", "111acdefgklnpqstu"]
                                                                                                        ^^
marc_display/app/helpers/marc_display_logic.rb:318:17: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                }.merge(options)
                ^
marc_display/app/helpers/marc_display_logic.rb:319:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:325:64: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      presenter = MarcDisplay::FieldPresenter.new(nil, marc, { :source => options[:marc_source]})
                                                               ^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:325:96: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      presenter = MarcDisplay::FieldPresenter.new(nil, marc, { :source => options[:marc_source]})
                                                                                               ^
marc_display/app/helpers/marc_display_logic.rb:328:26: C: Style/NumericPredicate: Use presenter.lines.length.positive? instead of presenter.lines.length > 0.
      return hash unless presenter.lines.length > 0
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:328:26: C: Style/ZeroLengthPredicate: Use !empty? instead of length > 0.
      return hash unless presenter.lines.length > 0
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:330:66: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # we've got a main entry, get it and add it on to the query
                                                                 ^
marc_display/app/helpers/marc_display_logic.rb:331:43: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      main_entry_terms = link.clean_query( presenter.lines[0].join )
                                          ^
marc_display/app/helpers/marc_display_logic.rb:331:67: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      main_entry_terms = link.clean_query( presenter.lines[0].join )
                                                                  ^
marc_display/app/helpers/marc_display_logic.rb:332:7: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if options[:phrase_search]
      ^^
marc_display/app/helpers/marc_display_logic.rb:336:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      hash[:q] = main_entry_terms + " " + hash[:q]
                                    ^^^
marc_display/app/helpers/marc_display_logic.rb:338:7: C: Style/RedundantReturn: Redundant return detected.
      return hash
      ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:340:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:343:66: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # including 700, 710, 711, 730, 740, and 7xx 'linking fields'
                                                                 ^
marc_display/app/helpers/marc_display_logic.rb:344:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #http://www.oclc.org/bibformats/en/7xx/76x-78x.shtm
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:347:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def extract_7xx_pieces(marc_line)
^^^^
marc_display/app/helpers/marc_display_logic.rb:347:5: C: Metrics/AbcSize: Assignment Branch Condition size for extract_7xx_pieces is too high. [<10, 24, 14> 29.53/15]
    def extract_7xx_pieces(marc_line) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:347:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for extract_7xx_pieces is too high. [17/7]
    def extract_7xx_pieces(marc_line) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:347:5: C: Metrics/MethodLength: Method has too many lines. [21/10]
    def extract_7xx_pieces(marc_line) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:347:5: C: Metrics/PerceivedComplexity: Perceived complexity for extract_7xx_pieces is too high. [12/7]
    def extract_7xx_pieces(marc_line) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:349:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:351:9: C: Indent when as deep as case.
        when "730" then nil
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:351:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "730" then nil
             ^^^^^
marc_display/app/helpers/marc_display_logic.rb:352:9: C: Indent when as deep as case.
        when "740" then nil
        ^^^^
marc_display/app/helpers/marc_display_logic.rb:352:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "740" then nil
             ^^^^^
marc_display/app/helpers/marc_display_logic.rb:354:7: W: Layout/EndAlignment: end at 354, 6 is not aligned with case at 350, 24.
      end
      ^^^
marc_display/app/helpers/marc_display_logic.rb:355:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:356:42: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      pieces[:title] = case marc_line.tag
                                         ^
marc_display/app/helpers/marc_display_logic.rb:357:11: C: Indent when as deep as case.
          when "700" then [marc_line['t'], marc_line['m'], marc_line['n']].reject(&:blank?).join(' ')
          ^^^^
marc_display/app/helpers/marc_display_logic.rb:357:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          when "700" then [marc_line['t'], marc_line['m'], marc_line['n']].reject(&:blank?).join(' ')
               ^^^^^
marc_display/app/helpers/marc_display_logic.rb:358:11: C: Indent when as deep as case.
          when "711" then marc_line["t"]
          ^^^^
marc_display/app/helpers/marc_display_logic.rb:358:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          when "711" then marc_line["t"]
               ^^^^^
marc_display/app/helpers/marc_display_logic.rb:358:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          when "711" then marc_line["t"]
                                    ^^^
marc_display/app/helpers/marc_display_logic.rb:358:41: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          when "711" then marc_line["t"]
                                        ^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:359:11: C: Indent when as deep as case.
          when "730" then marc_line["a"]
          ^^^^
marc_display/app/helpers/marc_display_logic.rb:359:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          when "730" then marc_line["a"]
               ^^^^^
marc_display/app/helpers/marc_display_logic.rb:359:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          when "730" then marc_line["a"]
                                    ^^^
marc_display/app/helpers/marc_display_logic.rb:360:11: C: Indent when as deep as case.
          when "740" then marc_line["a"]
          ^^^^
marc_display/app/helpers/marc_display_logic.rb:360:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          when "740" then marc_line["a"]
               ^^^^^
marc_display/app/helpers/marc_display_logic.rb:360:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          when "740" then marc_line["a"]
                                    ^^^
marc_display/app/helpers/marc_display_logic.rb:361:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          else marc_line["s"] || marc_line["t"]
                         ^^^
marc_display/app/helpers/marc_display_logic.rb:361:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          else marc_line["s"] || marc_line["t"]
                                           ^^^
marc_display/app/helpers/marc_display_logic.rb:362:7: W: Layout/EndAlignment: end at 362, 6 is not aligned with case at 356, 23.
      end
      ^^^
marc_display/app/helpers/marc_display_logic.rb:363:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:364:55: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      pieces[:issn] = marc_line['x'] if marc_line['x']
                                                      ^^^^^
marc_display/app/helpers/marc_display_logic.rb:366:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:367:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:369:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      std_num = marc_line["0"] || marc_line["w"]
                          ^^^
marc_display/app/helpers/marc_display_logic.rb:369:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      std_num = marc_line["0"] || marc_line["w"]
                                            ^^^
marc_display/app/helpers/marc_display_logic.rb:370:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:371:14: C: Style/TernaryParentheses: Omit parentheses for ternary conditions.
      lccn = (std_num =~ /\(DLC\) *(.*)$/)  ? $1 : nil
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:371:43: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      lccn = (std_num =~ /\(DLC\) *(.*)$/)  ? $1 : nil
                                          ^
marc_display/app/helpers/marc_display_logic.rb:371:45: C: Layout/SpaceAroundOperators: Operator ? should be surrounded by a single space.
      lccn = (std_num =~ /\(DLC\) *(.*)$/)  ? $1 : nil
                                            ^
marc_display/app/helpers/marc_display_logic.rb:371:47: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
      lccn = (std_num =~ /\(DLC\) *(.*)$/)  ? $1 : nil
                                              ^^
marc_display/app/helpers/marc_display_logic.rb:372:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      pieces[:lccn] = lccn if lccn
                                  ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:373:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:374:17: C: Style/TernaryParentheses: Omit parentheses for ternary conditions.
      oclcnum = (std_num =~ %r|\(OCoLC\) *(.*)$|) ? $1 : nil
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:374:29: C: Style/PercentLiteralDelimiters: %r-literals should be delimited by { and }.
      oclcnum = (std_num =~ %r|\(OCoLC\) *(.*)$|) ? $1 : nil
                            ^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:374:29: C: Style/RegexpLiteral: Use // around regular expression.
      oclcnum = (std_num =~ %r|\(OCoLC\) *(.*)$|) ? $1 : nil
                            ^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:374:53: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
      oclcnum = (std_num =~ %r|\(OCoLC\) *(.*)$|) ? $1 : nil
                                                    ^^
marc_display/app/helpers/marc_display_logic.rb:376:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:377:7: C: Style/RedundantReturn: Redundant return detected.
      return pieces
      ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:382:61: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # to construct a search link to find that related title.
                                                            ^
marc_display/app/helpers/marc_display_logic.rb:389:61: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # see how that approach works. Ignoring oclcnum or lccn.
                                                            ^
marc_display/app/helpers/marc_display_logic.rb:391:64: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # An additional enhancement could be to actually search for
                                                               ^
marc_display/app/helpers/marc_display_logic.rb:395:33: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # can handle phrase quotes).
                                ^
marc_display/app/helpers/marc_display_logic.rb:396:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def link_7xx(link, hash, options={})
^^^^
marc_display/app/helpers/marc_display_logic.rb:396:5: C: Metrics/AbcSize: Assignment Branch Condition size for link_7xx is too high. [<8, 26, 7> 28.09/15]
    def link_7xx(link, hash, options={}) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:396:5: C: Metrics/MethodLength: Method has too many lines. [19/10]
    def link_7xx(link, hash, options={}) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:396:5: C: Metrics/PerceivedComplexity: Perceived complexity for link_7xx is too high. [8/7]
    def link_7xx(link, hash, options={}) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:396:37: C: Layout/SpaceAroundEqualsInParameterDefault: Surrounding space missing in default value assignment.
    def link_7xx(link, hash, options={})
                                    ^
marc_display/app/helpers/marc_display_logic.rb:398:7: C: Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
      :isbn_field => "number",
      ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:398:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :isbn_field => "number",
      ^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:398:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :isbn_field => "number",
                     ^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:399:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :issn_field => "number"
      ^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:399:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :issn_field => "number"
                     ^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:401:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:403:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:407:44: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        # a space used in the issn or isbn.
                                           ^
marc_display/app/helpers/marc_display_logic.rb:414:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        hash[:q] = ""
                   ^^
marc_display/app/helpers/marc_display_logic.rb:415:21: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
        hash[:q] << %|"#{parts[:author].gsub('"', '')}" | if parts[:author]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:416:21: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
        hash[:q] << %|"#{parts[:title].gsub('"', '')}"| if parts[:title]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:421:7: C: Style/RedundantReturn: Redundant return detected.
      return hash
      ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:423:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:424:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:425:20: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # EXPERIMENTAL.
                   ^
marc_display/app/helpers/marc_display_logic.rb:426:64: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # Takes 7xx linking field, with common subfields for those,
                                                               ^
marc_display/app/helpers/marc_display_logic.rb:428:28: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # as handling 700, 710,
                           ^
marc_display/app/helpers/marc_display_logic.rb:434:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def link_cql_7xx(link, hash, options = {})
^^^^
marc_display/app/helpers/marc_display_logic.rb:434:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def link_cql_7xx(link, hash, options = {})
    ^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:434:5: C: Metrics/AbcSize: Assignment Branch Condition size for link_cql_7xx is too high. [<7, 43, 17> 46.77/15]
    def link_cql_7xx(link, hash, options = {}) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:434:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for link_cql_7xx is too high. [16/7]
    def link_cql_7xx(link, hash, options = {}) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:434:5: C: Metrics/MethodLength: Method has too many lines. [37/10]
    def link_cql_7xx(link, hash, options = {}) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:434:5: C: Metrics/PerceivedComplexity: Perceived complexity for link_cql_7xx is too high. [17/7]
    def link_cql_7xx(link, hash, options = {}) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:436:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :search_field => "cql",
        ^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:436:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :search_field => "cql",
                         ^^^^^
marc_display/app/helpers/marc_display_logic.rb:437:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :cql_author => "author",
        ^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:437:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :cql_author => "author",
                       ^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:438:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :cql_title => "title",
        ^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:438:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :cql_title => "title",
                      ^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:439:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :cql_issn => "issn",
        ^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:439:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :cql_issn => "issn",
                     ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:440:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :cql_isbn => "isbn",
        ^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:440:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :cql_isbn => "isbn",
                     ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:441:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :cql_lccn => "lccn",
        ^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:441:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :cql_lccn => "lccn",
                     ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:442:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :cql_oclcnum => "oclcnum"
        ^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:442:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :cql_oclcnum => "oclcnum"
                        ^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:444:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:446:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:448:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:450:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:453:24: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
        and_clauses << %|#{options[:cql_author]} = "#{parts[:author]}"| if parts[:author]
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:454:24: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
        and_clauses << %|#{options[:cql_title]} ="#{parts[:title]}"  | if parts[:title]
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:454:88: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        and_clauses << %|#{options[:cql_title]} ="#{parts[:title]}"  | if parts[:title]
                                                                                       ^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:455:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        or_clauses <<  "( " + and_clauses.join(" AND ") + " )"
                       ^^^^
marc_display/app/helpers/marc_display_logic.rb:455:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        or_clauses <<  "( " + and_clauses.join(" AND ") + " )"
                                               ^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:455:59: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        or_clauses <<  "( " + and_clauses.join(" AND ") + " )"
                                                          ^^^^
marc_display/app/helpers/marc_display_logic.rb:457:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:458:7: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if options[:cql_issn] && parts[:issn]
      ^^
marc_display/app/helpers/marc_display_logic.rb:459:23: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
        or_clauses << %| #{options[:cql_issn]} = "#{parts[:issn]}" |
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:462:7: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if options[:cql_isbn] && parts[:isbn]
      ^^
marc_display/app/helpers/marc_display_logic.rb:463:23: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
        or_clauses << %|#{options[:cql_isbn]} = "#{parts[:isbn]}"|
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:465:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:466:7: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if options[:cql_lccn] && parts[:lccn]
      ^^
marc_display/app/helpers/marc_display_logic.rb:467:23: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
        or_clauses << %|#{options[:cql_lccn]} = "#{parts[:lccn]}"|
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:469:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:470:7: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if options[:cql_oclcnum] && parts[:oclcnum]
      ^^
marc_display/app/helpers/marc_display_logic.rb:471:23: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
        or_clauses << %|#{options[:cql_oclcnum]} = "#{parts[:oclcnum]}"|
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:473:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:474:7: C: Style/GuardClause: Use a guard clause (return false unless or_clauses.length > 0) instead of wrapping the code inside a conditional expression.
      if or_clauses.length > 0
      ^^
marc_display/app/helpers/marc_display_logic.rb:474:10: C: Style/NumericPredicate: Use or_clauses.length.positive? instead of or_clauses.length > 0.
      if or_clauses.length > 0
         ^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:474:10: C: Style/ZeroLengthPredicate: Use !empty? instead of length > 0.
      if or_clauses.length > 0
         ^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:476:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        hash[:q] = or_clauses.join(" OR ")
                                   ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:477:9: C: Style/RedundantReturn: Redundant return detected.
        return hash
        ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:477:20: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        return hash
                   ^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:479:9: C: Style/RedundantReturn: Redundant return detected.
        return false
        ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:481:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:485:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def clean_up_8xx_d(link, hash, options={})
^^^^
marc_display/app/helpers/marc_display_logic.rb:485:24: W: Lint/UnusedMethodArgument: Unused method argument - link. If it's necessary, use _ or _link as an argument name to indicate that it won't be used.
    def clean_up_8xx_d(link, hash, options={})
                       ^^^^
marc_display/app/helpers/marc_display_logic.rb:485:36: W: Lint/UnusedMethodArgument: Unused method argument - options. If it's necessary, use _ or _options as an argument name to indicate that it won't be used.
    def clean_up_8xx_d(link, hash, options={})
                                   ^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:485:43: C: Layout/SpaceAroundEqualsInParameterDefault: Surrounding space missing in default value assignment.
    def clean_up_8xx_d(link, hash, options={})
                                          ^
marc_display/app/helpers/marc_display_logic.rb:487:7: C: Style/RedundantReturn: Redundant return detected.
      return hash
      ^^^^^^
marc_display/app/helpers/marc_display_logic.rb:489:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:491:48: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # in MarcDisplayLogic via a singleton object.
                                               ^
marc_display/app/helpers/marc_display_logic.rb:502:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  class DisplaySingleton ...
  ^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:506:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:508:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  module MarcLogicProcs ...
  ^^^^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:513:33: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # the extra args hard-coded.
                                ^
marc_display/app/helpers/marc_display_logic.rb:515:10: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
      if (args.length == 0)
         ^^^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:515:11: C: Style/NumericPredicate: Use args.length.zero? instead of args.length == 0.
      if (args.length == 0)
          ^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:515:11: C: Style/ZeroLengthPredicate: Use empty? instead of length == 0.
      if (args.length == 0)
          ^^^^^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:517:42: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        # itself, no need to 'curry' args
                                         ^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:532:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/helpers/marc_display_logic.rb:533:6: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  end
     ^^^^^^^^^^^^
marc_display/app/helpers/marc_display_logic.rb:534:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:1:19: C: Layout/TrailingWhitespace: Trailing whitespace detected.
module MarcDisplay
                  ^^
marc_display/app/models/marc_display/field_presenter.rb:2:1: C: Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body beginning.
marc_display/app/models/marc_display/field_presenter.rb:5:11: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
      obj.kind_of?(Proc) || obj.kind_of?(Method)
          ^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:5:33: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
      obj.kind_of?(Proc) || obj.kind_of?(Method)
                                ^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:10:48: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # at several levels, and given in a hash map.
                                               ^
marc_display/app/models/marc_display/field_presenter.rb:12:71: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # that will be used to look up appropriate value in a formatter_map,
                                                                      ^
marc_display/app/models/marc_display/field_presenter.rb:16:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:17:3: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
     def load_value_from_config(config_key, argument_to_pass = nil)
  ^^^
marc_display/app/models/marc_display/field_presenter.rb:17:6: C: Metrics/AbcSize: Assignment Branch Condition size for load_value_from_config is too high. [<6, 13, 9> 16.91/15]
     def load_value_from_config(config_key, argument_to_pass = nil) ...
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:17:6: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for load_value_from_config is too high. [11/7]
     def load_value_from_config(config_key, argument_to_pass = nil) ...
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:17:6: C: Metrics/MethodLength: Method has too many lines. [14/10]
     def load_value_from_config(config_key, argument_to_pass = nil) ...
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:17:6: C: Metrics/PerceivedComplexity: Perceived complexity for load_value_from_config is too high. [10/7]
     def load_value_from_config(config_key, argument_to_pass = nil) ...
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:20:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:21:10: C: Layout/LeadingCommentSpace: Missing space after #.
         #if it's nil, forget it, onto next
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:24:20: C: Layout/ExtraSpacing: Unnecessary spacing detected.
         break if (  found = config_hash[config_key]  )
                   ^
marc_display/app/models/marc_display/field_presenter.rb:24:20: C: Layout/SpaceInsideParens: Space inside parentheses detected.
         break if (  found = config_hash[config_key]  )
                   ^^
marc_display/app/models/marc_display/field_presenter.rb:24:53: C: Layout/ExtraSpacing: Unnecessary spacing detected.
         break if (  found = config_hash[config_key]  )
                                                    ^
marc_display/app/models/marc_display/field_presenter.rb:24:53: C: Layout/SpaceInsideParens: Space inside parentheses detected.
         break if (  found = config_hash[config_key]  )
                                                    ^^
marc_display/app/models/marc_display/field_presenter.rb:26:10: C: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
         next if map_key.nil?
         ^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:29:20: C: Layout/SpaceInsideParens: Space inside parentheses detected.
         break if ( found = map[map_key]   )
                   ^
marc_display/app/models/marc_display/field_presenter.rb:29:41: C: Layout/ExtraSpacing: Unnecessary spacing detected.
         break if ( found = map[map_key]   )
                                        ^^
marc_display/app/models/marc_display/field_presenter.rb:29:41: C: Layout/SpaceInsideParens: Space inside parentheses detected.
         break if ( found = map[map_key]   )
                                        ^^^
marc_display/app/models/marc_display/field_presenter.rb:31:20: C: Layout/SpaceInsideParens: Space inside parentheses detected.
         break if ( found = map["*"])
                   ^
marc_display/app/models/marc_display/field_presenter.rb:31:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
         break if ( found = map["*"])
                                ^^^
marc_display/app/models/marc_display/field_presenter.rb:33:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:34:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:36:8: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
       if found && argument_to_pass && callable?(found)
       ^^
marc_display/app/models/marc_display/field_presenter.rb:37:8: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
          found = found.call(argument_to_pass)
       ^^^
marc_display/app/models/marc_display/field_presenter.rb:37:47: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          found = found.call(argument_to_pass)
                                              ^^
marc_display/app/models/marc_display/field_presenter.rb:39:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:40:8: C: Style/RedundantReturn: Redundant return detected.
       return found
       ^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:44:3: C: Metrics/ClassLength: Class has too many lines. [126/100]
  class FieldPresenter ...
  ^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:45:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    include DiscoverCallable
                            ^^
marc_display/app/models/marc_display/field_presenter.rb:46:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:48:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:49:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:50:5: C: Metrics/AbcSize: Assignment Branch Condition size for initialize is too high. [<9, 51, 19> 55.16/15]
    def initialize(solr_doc, marc, config) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:50:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for initialize is too high. [22/7]
    def initialize(solr_doc, marc, config) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:50:5: C: Metrics/MethodLength: Method has too many lines. [38/10]
    def initialize(solr_doc, marc, config) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:50:5: C: Metrics/PerceivedComplexity: Perceived complexity for initialize is too high. [15/7]
    def initialize(solr_doc, marc, config) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:51:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:54:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:58:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:59:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:60:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:62:44: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          fields = marc.find_all do |field|
                                           ^
marc_display/app/models/marc_display/field_presenter.rb:63:11: C: Layout/IndentationWidth: Use 2 (not 6) spaces for indentation.
                (spec[:tag].nil? || spec[:tag] === field.tag) &&
          ^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:63:48: C: Style/CaseEquality: Avoid the use of the case equality operator ===.
                (spec[:tag].nil? || spec[:tag] === field.tag) &&
                                               ^^^
marc_display/app/models/marc_display/field_presenter.rb:64:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:65:17: C: Layout/MultilineOperationIndentation: Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
                (spec[:indicators][0].nil? || spec[:indicators][0] === field.indicator1 ) &&
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:65:68: C: Style/CaseEquality: Avoid the use of the case equality operator ===.
                (spec[:indicators][0].nil? || spec[:indicators][0] === field.indicator1 ) &&
                                                                   ^^^
marc_display/app/models/marc_display/field_presenter.rb:65:88: C: Layout/SpaceInsideParens: Space inside parentheses detected.
                (spec[:indicators][0].nil? || spec[:indicators][0] === field.indicator1 ) &&
                                                                                       ^
marc_display/app/models/marc_display/field_presenter.rb:66:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:67:17: C: Layout/MultilineOperationIndentation: Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
                (spec[:indicators][1].nil? || spec[:indicators][1] === field.indicator2)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:67:68: C: Style/CaseEquality: Avoid the use of the case equality operator ===.
                (spec[:indicators][1].nil? || spec[:indicators][1] === field.indicator2)
                                                                   ^^^
marc_display/app/models/marc_display/field_presenter.rb:67:89: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                (spec[:indicators][1].nil? || spec[:indicators][1] === field.indicator2)
                                                                                        ^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:69:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:71:18: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an unless.
          unless (spec[:suppress_non_roman] || @config[:suppress_non_roman])
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:75:13: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                [orig_field].concat( find_linked_fields(orig_field) )
            ^^^^
marc_display/app/models/marc_display/field_presenter.rb:75:37: C: Layout/SpaceInsideParens: Space inside parentheses detected.
                [orig_field].concat( find_linked_fields(orig_field) )
                                    ^
marc_display/app/models/marc_display/field_presenter.rb:75:68: C: Layout/SpaceInsideParens: Space inside parentheses detected.
                [orig_field].concat( find_linked_fields(orig_field) )
                                                                   ^
marc_display/app/models/marc_display/field_presenter.rb:78:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:79:25: C: Layout/SpaceInsideParens: Space inside parentheses detected.
          @lines.concat( fields.collect {|field| Line.new(@config, marc, field, spec)} )
                        ^
marc_display/app/models/marc_display/field_presenter.rb:79:41: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
          @lines.concat( fields.collect {|field| Line.new(@config, marc, field, spec)} )
                                        ^^
marc_display/app/models/marc_display/field_presenter.rb:79:86: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
          @lines.concat( fields.collect {|field| Line.new(@config, marc, field, spec)} )
                                                                                     ^
marc_display/app/models/marc_display/field_presenter.rb:79:87: C: Layout/SpaceInsideParens: Space inside parentheses detected.
          @lines.concat( fields.collect {|field| Line.new(@config, marc, field, spec)} )
                                                                                      ^
marc_display/app/models/marc_display/field_presenter.rb:82:9: C: Style/Next: Use next to skip iteration.
        if spec[:solr_field]
        ^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:83:46: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          value = solr_doc[spec[:solr_field]]
                                             ^^
marc_display/app/models/marc_display/field_presenter.rb:84:14: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
          if ( value )
             ^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:84:14: C: Style/RedundantParentheses: Don't use parentheses around a variable.
          if ( value )
             ^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:84:15: C: Layout/SpaceInsideParens: Space inside parentheses detected.
          if ( value )
              ^
marc_display/app/models/marc_display/field_presenter.rb:84:21: C: Layout/SpaceInsideParens: Space inside parentheses detected.
          if ( value )
                    ^
marc_display/app/models/marc_display/field_presenter.rb:86:42: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
            value = [value] unless value.kind_of?(Array)
                                         ^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:88:60: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
              @lines << Line.new(@config, marc, nil, spec, :raw_data => v)
                                                           ^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:92:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
marc_display/app/models/marc_display/field_presenter.rb:97:22: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
      @lines.reject! {|l| l.parts.length == 0}
                     ^^
marc_display/app/models/marc_display/field_presenter.rb:97:27: C: Style/NumericPredicate: Use l.parts.length.zero? instead of l.parts.length == 0.
      @lines.reject! {|l| l.parts.length == 0}
                          ^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:97:27: C: Style/ZeroLengthPredicate: Use empty? instead of length == 0.
      @lines.reject! {|l| l.parts.length == 0}
                          ^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:97:46: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      @lines.reject! {|l| l.parts.length == 0}
                                             ^
marc_display/app/models/marc_display/field_presenter.rb:98:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:100:7: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if (@config[:unique])
      ^^
marc_display/app/models/marc_display/field_presenter.rb:100:10: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
      if (@config[:unique])
         ^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:103:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:105:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:107:44: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        (filter = line.delete_if_filter) &&
                                           ^^^
marc_display/app/models/marc_display/field_presenter.rb:108:12: C: Layout/MultilineOperationIndentation: Use 2 (not 3) spaces for indenting an expression spanning multiple lines.
           (filter.arity == 2 ? ...
           ^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:108:13: C: Style/MultilineTernaryOperator: Avoid multi-line ternary operators, use if or unless instead.
           (filter.arity == 2 ? ...
            ^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:112:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:114:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:119:90: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
        key = MarcDisplayLogic.instance.format_strip_edge_punctuation(line.parts.collect {|p| p.formatted_value}.join(" "))
                                                                                         ^^
marc_display/app/models/marc_display/field_presenter.rb:119:90: C: Style/SymbolProc: Pass &:formatted_value as an argument to collect instead of a block.
        key = MarcDisplayLogic.instance.format_strip_edge_punctuation(line.parts.collect {|p| p.formatted_value}.join(" "))
                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:119:112: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
        key = MarcDisplayLogic.instance.format_strip_edge_punctuation(line.parts.collect {|p| p.formatted_value}.join(" "))
                                                                                                               ^
marc_display/app/models/marc_display/field_presenter.rb:119:119: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        key = MarcDisplayLogic.instance.format_strip_edge_punctuation(line.parts.collect {|p| p.formatted_value}.join(" "))
                                                                                                                      ^^^
marc_display/app/models/marc_display/field_presenter.rb:119:121: C: Layout/LineLength: Line is too long. [129/120]
        key = MarcDisplayLogic.instance.format_strip_edge_punctuation(line.parts.collect {|p| p.formatted_value}.join(" "))
                                                                                                                        ^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:119:124: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        key = MarcDisplayLogic.instance.format_strip_edge_punctuation(line.parts.collect {|p| p.formatted_value}.join(" "))
                                                                                                                           ^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:120:21: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        if hash[key]
                    ^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:122:15: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          true
              ^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:130:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:138:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:139:14: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    def label
             ^^
marc_display/app/models/marc_display/field_presenter.rb:141:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:142:32: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      @_label = @config[:label]
                               ^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:143:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:144:53: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      @_label = label.call(self) if callable?(label)
                                                    ^
marc_display/app/models/marc_display/field_presenter.rb:146:7: C: Style/RedundantReturn: Redundant return detected.
      return @_label
      ^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:148:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:151:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def css_classes
    ^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:153:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:157:7: C: Style/RedundantReturn: Redundant return detected.
      return @_classes
      ^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:159:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:162:41: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # used for display:none when needed.
                                        ^
marc_display/app/models/marc_display/field_presenter.rb:163:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def style
    ^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:164:10: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
      if ( lines.length == 0 && @config[:display_on_empty] == :hidden )
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:164:11: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      if ( lines.length == 0 && @config[:display_on_empty] == :hidden )
          ^
marc_display/app/models/marc_display/field_presenter.rb:164:12: C: Style/NumericPredicate: Use lines.length.zero? instead of lines.length == 0.
      if ( lines.length == 0 && @config[:display_on_empty] == :hidden )
           ^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:164:12: C: Style/ZeroLengthPredicate: Use empty? instead of length == 0.
      if ( lines.length == 0 && @config[:display_on_empty] == :hidden )
           ^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:164:70: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      if ( lines.length == 0 && @config[:display_on_empty] == :hidden )
                                                                     ^
marc_display/app/models/marc_display/field_presenter.rb:165:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "display:none"
        ^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:165:23: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        "display:none"
                      ^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:167:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        ""
        ^^
marc_display/app/models/marc_display/field_presenter.rb:173:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:174:26: C: Style/NumericPredicate: Use lines.length.positive? instead of lines.length > 0.
      @_should_display = lines.length > 0 || [true, :hidden].include?(@config[:display_on_empty])
                         ^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:174:26: C: Style/ZeroLengthPredicate: Use !empty? instead of length > 0.
      @_should_display = lines.length > 0 || [true, :hidden].include?(@config[:display_on_empty])
                         ^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:175:7: C: Style/RedundantReturn: Redundant return detected.
      return @_should_display
      ^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:177:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:178:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:180:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # used shortcuts.
                     ^
marc_display/app/models/marc_display/field_presenter.rb:181:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def normalize_definition(definition)
    ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:181:5: C: Metrics/AbcSize: Assignment Branch Condition size for normalize_definition is too high. [<6, 20, 13> 24.6/15]
    def normalize_definition(definition) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:181:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for normalize_definition is too high. [14/7]
    def normalize_definition(definition) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:181:5: C: Metrics/MethodLength: Method has too many lines. [21/10]
    def normalize_definition(definition) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:181:5: C: Metrics/PerceivedComplexity: Perceived complexity for normalize_definition is too high. [12/7]
    def normalize_definition(definition) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:183:51: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
      definition = [definition] unless definition.kind_of?(Array)
                                                  ^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:184:68: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # Parse out strings that are shortcuts for hashes and arrays,
                                                                   ^
marc_display/app/models/marc_display/field_presenter.rb:185:27: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # at several levels.
                          ^^
marc_display/app/models/marc_display/field_presenter.rb:187:9: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
        if el.kind_of?(String)
        ^^
marc_display/app/models/marc_display/field_presenter.rb:187:15: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
        if el.kind_of?(String)
              ^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:188:16: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
          el = {:load_marc => el}
               ^
marc_display/app/models/marc_display/field_presenter.rb:188:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          el = {:load_marc => el}
                ^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:188:33: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
          el = {:load_marc => el}
                                ^
marc_display/app/models/marc_display/field_presenter.rb:190:12: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
        if ( el[:load_marc] && el[:load_marc].kind_of?(String))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:190:13: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        if ( el[:load_marc] && el[:load_marc].kind_of?(String))
            ^
marc_display/app/models/marc_display/field_presenter.rb:190:14: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
        if ( el[:load_marc] && el[:load_marc].kind_of?(String))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:190:47: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
        if ( el[:load_marc] && el[:load_marc].kind_of?(String))
                                              ^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:191:53: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          # translate marc shortcut string to values
                                                    ^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:193:21: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
          el.merge!({:tag => $1,
                    ^
marc_display/app/models/marc_display/field_presenter.rb:193:22: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          el.merge!({:tag => $1,
                     ^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:193:30: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
          el.merge!({:tag => $1,
                             ^^
marc_display/app/models/marc_display/field_presenter.rb:194:13: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
            :indicators => [($3[0..0] if ($3 && "*" != $3[0..0] )),           ...
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:194:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :indicators => [($3[0..0] if ($3 && "*" != $3[0..0] )),
            ^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:194:30: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
            :indicators => [($3[0..0] if ($3 && "*" != $3[0..0] )),
                             ^^
marc_display/app/models/marc_display/field_presenter.rb:194:42: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
            :indicators => [($3[0..0] if ($3 && "*" != $3[0..0] )),
                                         ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:194:43: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
            :indicators => [($3[0..0] if ($3 && "*" != $3[0..0] )),
                                          ^^
marc_display/app/models/marc_display/field_presenter.rb:194:49: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :indicators => [($3[0..0] if ($3 && "*" != $3[0..0] )),
                                                ^^^
marc_display/app/models/marc_display/field_presenter.rb:194:49: C: Style/YodaCondition: Reverse the order of the operands "*" != $3[0..0].
            :indicators => [($3[0..0] if ($3 && "*" != $3[0..0] )),
                                                ^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:194:56: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
            :indicators => [($3[0..0] if ($3 && "*" != $3[0..0] )),
                                                       ^^
marc_display/app/models/marc_display/field_presenter.rb:194:64: C: Layout/SpaceInsideParens: Space inside parentheses detected.
            :indicators => [($3[0..0] if ($3 && "*" != $3[0..0] )),
                                                               ^
marc_display/app/models/marc_display/field_presenter.rb:194:68: C: Layout/TrailingWhitespace: Trailing whitespace detected.
            :indicators => [($3[0..0] if ($3 && "*" != $3[0..0] )),
                                                                   ^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:195:30: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
                            ($3[1..1] if ($3 && "*" != $3[1..1] ))],
                             ^^
marc_display/app/models/marc_display/field_presenter.rb:195:42: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
                            ($3[1..1] if ($3 && "*" != $3[1..1] ))],
                                         ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:195:43: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
                            ($3[1..1] if ($3 && "*" != $3[1..1] ))],
                                          ^^
marc_display/app/models/marc_display/field_presenter.rb:195:49: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            ($3[1..1] if ($3 && "*" != $3[1..1] ))],
                                                ^^^
marc_display/app/models/marc_display/field_presenter.rb:195:49: C: Style/YodaCondition: Reverse the order of the operands "*" != $3[1..1].
                            ($3[1..1] if ($3 && "*" != $3[1..1] ))],
                                                ^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:195:56: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
                            ($3[1..1] if ($3 && "*" != $3[1..1] ))],
                                                       ^^
marc_display/app/models/marc_display/field_presenter.rb:195:64: C: Layout/SpaceInsideParens: Space inside parentheses detected.
                            ($3[1..1] if ($3 && "*" != $3[1..1] ))],
                                                               ^
marc_display/app/models/marc_display/field_presenter.rb:196:13: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
            :subfields =>  ($4 if $4)})
            ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:196:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :subfields =>  ($4 if $4)})
            ^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:196:29: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
            :subfields =>  ($4 if $4)})
                            ^^
marc_display/app/models/marc_display/field_presenter.rb:196:29: C: Style/RedundantCondition: This condition is not needed.
            :subfields =>  ($4 if $4)})
                            ^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:196:35: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
            :subfields =>  ($4 if $4)})
                                  ^^
marc_display/app/models/marc_display/field_presenter.rb:196:38: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
            :subfields =>  ($4 if $4)})
                                     ^
marc_display/app/models/marc_display/field_presenter.rb:197:32: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          el.delete(:load_marc)
                               ^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:199:9: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
        if el[:subfields].kind_of?(String)
        ^^
marc_display/app/models/marc_display/field_presenter.rb:199:27: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
        if el[:subfields].kind_of?(String)
                          ^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:200:9: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            el[:subfields] = el[:subfields].split('')
        ^^^^
marc_display/app/models/marc_display/field_presenter.rb:203:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:204:11: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        el
          ^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:212:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:213:55: W: Lint/UnusedMethodArgument: Unused method argument - options. If it's necessary, use _ or _options as an argument name to indicate that it won't be used.
    def self.find_linked_fields(marc_doc, orig_field, options = {})
                                                      ^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:215:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:217:26: C: Layout/ExtraSpacing: Unnecessary spacing detected.
        marc_doc.find_all  do |f|
                         ^
marc_display/app/models/marc_display/field_presenter.rb:217:34: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        marc_doc.find_all  do |f|
                                 ^
marc_display/app/models/marc_display/field_presenter.rb:218:13: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
          f.kind_of?(MARC::DataField) &&
            ^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:219:11: C: Layout/MultilineOperationIndentation: Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
          f['6'] &&
          ^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:219:20: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          f['6'] &&
                   ^
marc_display/app/models/marc_display/field_presenter.rb:220:11: C: Layout/MultilineOperationIndentation: Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
          f['6'][0..5] == "#{orig_field.tag}-#{linkage[4..5]}"
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:224:10: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      end
         ^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:229:7: C: Style/RedundantReturn: Redundant return detected.
      return find_linked_fields(orig_field, options)[0]
      ^^^^^^
marc_display/app/models/marc_display/field_presenter.rb:231:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/field_presenter.rb:233:1: C: Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body end.
marc_display/app/models/marc_display/line.rb:2:1: C: Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body beginning.
marc_display/app/models/marc_display/line.rb:4:38: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # Composed of a list of LinePart's.
                                     ^
marc_display/app/models/marc_display/line.rb:8:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line.rb:10:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line.rb:11:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line.rb:12:66: C: Layout/SpaceAroundEqualsInParameterDefault: Surrounding space missing in default value assignment.
    def initialize(config, marc_record, marc_field, spec, options ={})
                                                                 ^^
marc_display/app/models/marc_display/line.rb:19:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line.rb:20:5: C: Metrics/MethodLength: Method has too many lines. [13/10]
    def parts ...
    ^^^^^^^^^
marc_display/app/models/marc_display/line.rb:22:12: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
        if ( @marc_field )
           ^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/line.rb:22:12: C: Style/RedundantParentheses: Don't use parentheses around a variable.
        if ( @marc_field )
           ^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/line.rb:22:13: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        if ( @marc_field )
            ^
marc_display/app/models/marc_display/line.rb:22:25: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        if ( @marc_field )
                        ^
marc_display/app/models/marc_display/line.rb:24:23: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                          @marc_field.subfields
                      ^^^^
marc_display/app/models/marc_display/line.rb:26:46: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
                        @marc_field.find_all {|sf| @data_spec[:subfields].include?(sf.code)}
                                             ^^
marc_display/app/models/marc_display/line.rb:26:92: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
                        @marc_field.find_all {|sf| @data_spec[:subfields].include?(sf.code)}
                                                                                           ^
marc_display/app/models/marc_display/line.rb:28:38: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
          @parts = subfields.collect {|sf| LinePart.new(@data_spec, @marc_field, sf, self)}
                                     ^^
marc_display/app/models/marc_display/line.rb:28:91: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
          @parts = subfields.collect {|sf| LinePart.new(@data_spec, @marc_field, sf, self)}
                                                                                          ^
marc_display/app/models/marc_display/line.rb:29:13: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        else
            ^
marc_display/app/models/marc_display/line.rb:30:21: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
          @parts = [ LinePart.new(@data_spec, nil, nil, self, :raw_data => @raw_data) ]
                    ^
marc_display/app/models/marc_display/line.rb:30:63: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          @parts = [ LinePart.new(@data_spec, nil, nil, self, :raw_data => @raw_data) ]
                                                              ^^^^^^^^^^^^
marc_display/app/models/marc_display/line.rb:30:86: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
          @parts = [ LinePart.new(@data_spec, nil, nil, self, :raw_data => @raw_data) ]
                                                                                     ^
marc_display/app/models/marc_display/line.rb:31:12: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        end
           ^^^^^^
marc_display/app/models/marc_display/line.rb:35:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line.rb:37:7: C: Style/GuardClause: Use a guard clause (return nil unless @marc_field) instead of wrapping the code inside a conditional expression.
      if @marc_field
      ^^
marc_display/app/models/marc_display/line.rb:38:46: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        # Use the real tag the 880 represents
                                             ^^^^^^
marc_display/app/models/marc_display/line.rb:41:9: C: Style/RedundantReturn: Redundant return detected.
        return nil
        ^^^^^^
marc_display/app/models/marc_display/line.rb:44:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line.rb:49:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line.rb:51:7: C: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
      return @_prefix if defined?(@_prefix)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/line.rb:52:62: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      @_prefix = load_value_from_config(:prefix, @marc_field)
                                                             ^^
marc_display/app/models/marc_display/line.rb:54:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line.rb:56:1: C: Layout/EmptyLines: Extra blank line detected.
marc_display/app/models/marc_display/line.rb:57:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def label
    ^^^^^^^^^
marc_display/app/models/marc_display/line.rb:58:7: C: Style/GuardClause: Use a guard clause (return @_label if defined? @_label) instead of wrapping the code inside a conditional expression.
      if defined? @_label
      ^^
marc_display/app/models/marc_display/line.rb:59:9: C: Style/RedundantReturn: Redundant return detected.
        return @_label
        ^^^^^^
marc_display/app/models/marc_display/line.rb:59:23: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        return @_label
                      ^
marc_display/app/models/marc_display/line.rb:61:9: C: Style/RedundantReturn: Redundant return detected.
        return (@_label = load_value_from_config(:label, @marc_field))
        ^^^^^^
marc_display/app/models/marc_display/line.rb:64:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line.rb:65:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line.rb:66:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def delete_if_filter
    ^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/line.rb:67:7: C: Style/GuardClause: Use a guard clause (return @_delete_if_filter if defined? @_delete_if_filter) instead of wrapping the code inside a conditional expression.
      if defined? @_delete_if_filter
      ^^
marc_display/app/models/marc_display/line.rb:68:9: C: Style/RedundantReturn: Redundant return detected.
        return @_delete_if_filter
        ^^^^^^
marc_display/app/models/marc_display/line.rb:70:9: C: Style/RedundantReturn: Redundant return detected.
        return (@_delete_if_filter = load_value_from_config(:delete_if_filter))
        ^^^^^^
marc_display/app/models/marc_display/line.rb:72:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    end
       ^^^^
marc_display/app/models/marc_display/line.rb:73:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line.rb:76:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line.rb:79:22: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      @_classes.push( "marc#{@marc_field.tag}" ) if @marc_field
                     ^
marc_display/app/models/marc_display/line.rb:79:47: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      @_classes.push( "marc#{@marc_field.tag}" ) if @marc_field
                                              ^
marc_display/app/models/marc_display/line.rb:79:64: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      @_classes.push( "marc#{@marc_field.tag}" ) if @marc_field
                                                               ^
marc_display/app/models/marc_display/line.rb:80:7: C: Style/RedundantReturn: Redundant return detected.
      return @_classes
      ^^^^^^
marc_display/app/models/marc_display/line.rb:82:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line.rb:84:7: C: Layout/LeadingCommentSpace: Missing space after #.
      #debugger if marc_field && marc_field.tag == "19"
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/line.rb:85:14: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an unless.
      unless (@link || @link == false)
             ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/line.rb:86:87: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        link_config = @data_spec[:link].nil? ? @config_hash[:link] : @data_spec[:link]
                                                                                      ^^
marc_display/app/models/marc_display/line.rb:87:9: C: Style/ConditionalAssignment: Use the return of the conditional for variable assignment and comparison.
        if link_config ...
        ^^^^^^^^^^^^^^
marc_display/app/models/marc_display/line.rb:88:28: C: Layout/SpaceInsideParens: Space inside parentheses detected.
          @link = Link.new( self, link_config )
                           ^
marc_display/app/models/marc_display/line.rb:88:46: C: Layout/SpaceInsideParens: Space inside parentheses detected.
          @link = Link.new( self, link_config )
                                             ^
marc_display/app/models/marc_display/line.rb:93:56: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # @link == false means there was no link to load.
                                                       ^
marc_display/app/models/marc_display/line.rb:96:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line.rb:97:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    def join(seperator = " ")
                         ^^^
marc_display/app/models/marc_display/line.rb:98:22: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
      @parts.collect {|p| p.formatted_value }.join(seperator)
                     ^^
marc_display/app/models/marc_display/line.rb:98:22: C: Style/SymbolProc: Pass &:formatted_value as an argument to collect instead of a block.
      @parts.collect {|p| p.formatted_value }.join(seperator)
                     ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/line.rb:101:1: C: Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body end.
marc_display/app/models/marc_display/line_part.rb:3:45: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # usually correspond to a single subfield.
                                            ^
marc_display/app/models/marc_display/line_part.rb:7:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line_part.rb:8:46: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    attr_accessor :marc_field, :marc_subfield
                                             ^^
marc_display/app/models/marc_display/line_part.rb:9:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line_part.rb:11:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line_part.rb:18:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line_part.rb:20:7: C: Style/ConditionalAssignment: Use the return of the conditional for variable assignment and comparison.
      if @raw_data ...
      ^^^^^^^^^^^^
marc_display/app/models/marc_display/line_part.rb:21:9: W: Lint/UselessAssignment: Useless assignment to variable - value.
        value = @raw_data
        ^^^^^
marc_display/app/models/marc_display/line_part.rb:23:9: W: Lint/UselessAssignment: Useless assignment to variable - value.
        value = @marc_subfield.value
        ^^^^^
marc_display/app/models/marc_display/line_part.rb:24:10: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      end
         ^^^^^
marc_display/app/models/marc_display/line_part.rb:26:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line_part.rb:30:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line_part.rb:32:7: C: Style/GuardClause: Use a guard clause (return nil unless (@marc_field && @marc_subfield)) instead of wrapping the code inside a conditional expression.
      if (@marc_field && @marc_subfield)
      ^^
marc_display/app/models/marc_display/line_part.rb:32:10: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
      if (@marc_field && @marc_subfield)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/line_part.rb:37:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line_part.rb:38:9: C: Style/RedundantReturn: Redundant return detected.
        return "#{@marc_field.tag}#{@marc_subfield.code}"
        ^^^^^^
marc_display/app/models/marc_display/line_part.rb:40:9: C: Style/RedundantReturn: Redundant return detected.
        return nil
        ^^^^^^
marc_display/app/models/marc_display/line_part.rb:43:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line_part.rb:45:7: C: Style/GuardClause: Use a guard clause (return @_formatted_value if defined? @_formatted_value) instead of wrapping the code inside a conditional expression.
      if defined? @_formatted_value
      ^^
marc_display/app/models/marc_display/line_part.rb:46:9: C: Style/RedundantReturn: Redundant return detected.
        return @_formatted_value
        ^^^^^^
marc_display/app/models/marc_display/line_part.rb:48:9: C: Style/RedundantReturn: Redundant return detected.
        return (@_formatted_value = (load_value_from_config(:formatter, value) || value))
        ^^^^^^
marc_display/app/models/marc_display/line_part.rb:50:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    end
       ^^^^
marc_display/app/models/marc_display/line_part.rb:51:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line_part.rb:52:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line_part.rb:53:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def prefix
    ^^^^^^^^^^
marc_display/app/models/marc_display/line_part.rb:54:7: C: Style/GuardClause: Use a guard clause (return @_prefix if defined?(@_prefix)) instead of wrapping the code inside a conditional expression.
      if defined?(@_prefix)
      ^^
marc_display/app/models/marc_display/line_part.rb:55:9: C: Style/RedundantReturn: Redundant return detected.
        return @_prefix
        ^^^^^^
marc_display/app/models/marc_display/line_part.rb:57:9: C: Style/RedundantReturn: Redundant return detected.
        return (@_prefix = load_value_from_config(:prefix, @marc_subfield))
        ^^^^^^
marc_display/app/models/marc_display/line_part.rb:60:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line_part.rb:62:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def raw_prefix
    ^^^^^^^^^^^^^^
marc_display/app/models/marc_display/line_part.rb:63:7: C: Style/GuardClause: Use a guard clause (return @_raw_prefix if defined? @_raw_prefix) instead of wrapping the code inside a conditional expression.
      if defined? @_raw_prefix
      ^^
marc_display/app/models/marc_display/line_part.rb:64:9: C: Style/RedundantReturn: Redundant return detected.
        return @_raw_prefix
        ^^^^^^
marc_display/app/models/marc_display/line_part.rb:66:9: C: Style/RedundantReturn: Redundant return detected.
        return (@_raw_prefix = load_value_from_config(:raw_prefix, @marc_subfield))
        ^^^^^^
marc_display/app/models/marc_display/line_part.rb:69:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line_part.rb:70:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line_part.rb:71:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def label
    ^^^^^^^^^
marc_display/app/models/marc_display/line_part.rb:72:7: C: Style/GuardClause: Use a guard clause (return @_label if defined? @_label) instead of wrapping the code inside a conditional expression.
      if defined? @_label
      ^^
marc_display/app/models/marc_display/line_part.rb:73:9: C: Style/RedundantReturn: Redundant return detected.
        return @_label
        ^^^^^^
marc_display/app/models/marc_display/line_part.rb:75:9: C: Style/RedundantReturn: Redundant return detected.
        return (@_label = load_value_from_config(:label, @marc_subfield))
        ^^^^^^
marc_display/app/models/marc_display/line_part.rb:78:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line_part.rb:79:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line_part.rb:80:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def css_classes
    ^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/line_part.rb:81:7: C: Style/GuardClause: Use a guard clause (return @_classes if defined? @_classes) instead of wrapping the code inside a conditional expression.
      if defined? @_classes
      ^^
marc_display/app/models/marc_display/line_part.rb:82:9: C: Style/IdenticalConditionalBranches: Move return @_classes out of the conditional.
        return @_classes
        ^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/line_part.rb:82:9: C: Style/RedundantReturn: Redundant return detected.
        return @_classes
        ^^^^^^
marc_display/app/models/marc_display/line_part.rb:86:105: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        @_classes.push("marc#{@marc_field.tag}_#{@marc_subfield.code}") if @marc_field && @marc_subfield
                                                                                                        ^^^^
marc_display/app/models/marc_display/line_part.rb:87:9: C: Style/IdenticalConditionalBranches: Move return @_classes out of the conditional.
        return @_classes
        ^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/line_part.rb:87:9: C: Style/RedundantReturn: Redundant return detected.
        return @_classes
        ^^^^^^
marc_display/app/models/marc_display/line_part.rb:90:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/line_part.rb:92:1: C: Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body end.
marc_display/app/models/marc_display/link.rb:2:1: C: Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body beginning.
marc_display/app/models/marc_display/link.rb:6:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      include DiscoverCallable
  ^^^^
marc_display/app/models/marc_display/link.rb:7:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      attr_accessor :line
  ^^^^
marc_display/app/models/marc_display/link.rb:8:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/link.rb:9:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      @@default_link_text = "More"
  ^^^^
marc_display/app/models/marc_display/link.rb:9:7: C: Style/ClassVars: Replace class var @@default_link_text with a class instance var.
      @@default_link_text = "More"
      ^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/link.rb:9:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @@default_link_text = "More"
                            ^^^^^^
marc_display/app/models/marc_display/link.rb:9:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      @@default_link_text = "More"
                                  ^^
marc_display/app/models/marc_display/link.rb:10:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/link.rb:11:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      def initialize(line, config_hash)
  ^^^^
marc_display/app/models/marc_display/link.rb:11:7: C: Metrics/MethodLength: Method has too many lines. [12/10]
      def initialize(line, config_hash) ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/link.rb:13:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/link.rb:15:9: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
        if config_hash[:subfields].kind_of?(String)
        ^^
marc_display/app/models/marc_display/link.rb:15:36: C: Style/ClassCheck: Prefer Object#is_a? over Object#kind_of?.
        if config_hash[:subfields].kind_of?(String)
                                   ^^^^^^^^
marc_display/app/models/marc_display/link.rb:16:70: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          config_hash[:subfields] = config_hash[:subfields].split('')
                                                                     ^
marc_display/app/models/marc_display/link.rb:18:9: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
        if config_hash[:link_text] == true
        ^^
marc_display/app/models/marc_display/link.rb:22:54: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        # Can override with nil if you don't want it.
                                                     ^
marc_display/app/models/marc_display/link.rb:23:28: C: Style/PreferredHashMethods: Use Hash#key? instead of Hash#has_key?.
        unless config_hash.has_key?(:formatter)
                           ^^^^^^^^
marc_display/app/models/marc_display/link.rb:28:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/link.rb:29:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      def hash_for_url
  ^^^^
marc_display/app/models/marc_display/link.rb:29:7: C: Metrics/AbcSize: Assignment Branch Condition size for hash_for_url is too high. [<8, 14, 4> 16.61/15]
      def hash_for_url     ...
      ^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/link.rb:29:7: C: Metrics/MethodLength: Method has too many lines. [15/10]
      def hash_for_url     ...
      ^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/link.rb:29:23: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      def hash_for_url
                      ^^^^
marc_display/app/models/marc_display/link.rb:30:16: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
        hash = {:controller => "catalog",
               ^
marc_display/app/models/marc_display/link.rb:30:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        hash = {:controller => "catalog",
                ^^^^^^^^^^^^^^
marc_display/app/models/marc_display/link.rb:30:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        hash = {:controller => "catalog",
                               ^^^^^^^^^
marc_display/app/models/marc_display/link.rb:31:9: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
        :action => "index"}
        ^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/link.rb:31:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :action => "index"}
        ^^^^^^^^^^
marc_display/app/models/marc_display/link.rb:31:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :action => "index"}
                   ^^^^^^^
marc_display/app/models/marc_display/link.rb:31:27: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
        :action => "index"}
                          ^
marc_display/app/models/marc_display/link.rb:32:13: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        if ( facet = @config_hash[:facet])
            ^
marc_display/app/models/marc_display/link.rb:37:11: C: Layout/LeadingCommentSpace: Missing space after #.
          #ordinary query
          ^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/link.rb:41:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/link.rb:44:73: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        # being spellchecked. Sorry, more JH specific stuff is going in.
                                                                        ^
marc_display/app/models/marc_display/link.rb:45:36: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =.
        hash[:suppress_spellcheck] =1
                                   ^
marc_display/app/models/marc_display/link.rb:45:38: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        hash[:suppress_spellcheck] =1
                                     ^
marc_display/app/models/marc_display/link.rb:48:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/link.rb:49:9: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
        if @config_hash[:custom]
        ^^
marc_display/app/models/marc_display/link.rb:52:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/link.rb:53:8: C: Layout/IndentationConsistency: Inconsistent indentation detected.
       return hash
       ^^^^^^^^^^^
marc_display/app/models/marc_display/link.rb:53:8: C: Style/RedundantReturn: Redundant return detected.
       return hash
       ^^^^^^
marc_display/app/models/marc_display/link.rb:55:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/link.rb:57:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      def as_whole_line?
  ^^^^
marc_display/app/models/marc_display/link.rb:57:25: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      def as_whole_line?
                        ^^^^
marc_display/app/models/marc_display/link.rb:61:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/link.rb:63:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      def as_suffix?
  ^^^^
marc_display/app/models/marc_display/link.rb:64:38: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        # only if we have suffix text
                                     ^^^^
marc_display/app/models/marc_display/link.rb:67:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/link.rb:69:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      def link_text
  ^^^^
marc_display/app/models/marc_display/link.rb:72:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/link.rb:73:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      def query
  ^^^^
marc_display/app/models/marc_display/link.rb:73:7: C: Metrics/AbcSize: Assignment Branch Condition size for query is too high. [<4, 23, 6> 24.1/15]
      def query ...
      ^^^^^^^^^
marc_display/app/models/marc_display/link.rb:73:7: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for query is too high. [8/7]
      def query ...
      ^^^^^^^^^
marc_display/app/models/marc_display/link.rb:73:7: C: Metrics/MethodLength: Method has too many lines. [13/10]
      def query ...
      ^^^^^^^^^
marc_display/app/models/marc_display/link.rb:74:16: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an unless.
        unless (@query)
               ^^^^^^^^
marc_display/app/models/marc_display/link.rb:74:16: C: Style/RedundantParentheses: Don't use parentheses around a variable.
        unless (@query)
               ^^^^^^^^
marc_display/app/models/marc_display/link.rb:74:24: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        unless (@query)
                       ^^^^^^
marc_display/app/models/marc_display/link.rb:78:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/link.rb:79:13: C: Style/Next: Use next to skip iteration.
            if ( @config_hash[:subfields].nil? || ...
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/link.rb:79:16: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
            if ( @config_hash[:subfields].nil? || ...
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/link.rb:79:17: C: Layout/SpaceInsideParens: Space inside parentheses detected.
            if ( @config_hash[:subfields].nil? ||
                ^
marc_display/app/models/marc_display/link.rb:80:19: C: Style/RedundantParentheses: Don't use parentheses around an unary operation.
                 ((!part.marc_subfield.nil?) &&
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/app/models/marc_display/link.rb:82:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/link.rb:83:13: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                part.formatted_value
            ^^^^
marc_display/app/models/marc_display/link.rb:85:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          end.compact.join(" ")
                           ^^^
marc_display/app/models/marc_display/link.rb:88:48: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          # was intended, phrase search or not.
                                               ^
marc_display/app/models/marc_display/link.rb:91:11: C: Layout/LeadingCommentSpace: Missing space after #.
          #Formatter?
          ^^^^^^^^^^^
marc_display/app/models/marc_display/link.rb:93:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/link.rb:98:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/link.rb:101:57: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # method so it can be called by custom link logic.
                                                        ^
marc_display/app/models/marc_display/link.rb:102:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      def clean_query(query)
  ^^^^
marc_display/app/models/marc_display/link.rb:103:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        query.gsub(/\"/, '')
                            ^^
marc_display/app/models/marc_display/link.rb:106:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/app/models/marc_display/link.rb:107:5: W: Layout/EndAlignment: end at 107, 4 is not aligned with class at 5, 2.
    end
    ^^^
marc_display/app/models/marc_display/link.rb:108:1: C: Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body end.
marc_display/lib/marc_display.rb:2:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display.rb:4:74: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # Mimic old vendored plugin behavior, marc_display/lib is autoloaded.
                                                                         ^
marc_display/lib/marc_display.rb:5:35: C: Style/ExpandPathArguments: Use expand_path(__dir__) instead of expand_path('..', __FILE__).
    config.autoload_paths << File.expand_path("..", __FILE__)
                                  ^^^^^^^^^^^
marc_display/lib/marc_display.rb:5:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.autoload_paths << File.expand_path("..", __FILE__)
                                              ^^^^
marc_display/lib/marc_display.rb:6:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display.rb:8:48: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      require 'marc_display/default_presenters'
                                               ^^^^^^
marc_display/lib/marc_display.rb:13:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display.rb:15:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display.rb:16:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display.rb:18:1: C: Layout/EmptyLines: Extra blank line detected.
marc_display/lib/marc_display.rb:19:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display.rb:21:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:6:30: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # SolrMarc.use_extension(
                             ^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:20:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:22:51: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        document.will_export_as(:openurl_ctx_xml, "application/x-openurl-ctx+xml")
                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:23:51: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        document.will_export_as(:openurl_ctx_kev, "application/x-openurl-ctx-kev")
                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:26:7: C: Metrics/AbcSize: Assignment Branch Condition size for to_openurl is too high. [<2, 15, 3> 15.43/15]
      def to_openurl ...
      ^^^^^^^^^^^^^^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:30:15: C: Layout/SpaceInsideParens: Space inside parentheses detected.
          if ( prefix = self.class.extension_parameters[:self_uri_prefix]  )
              ^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:30:74: C: Layout/ExtraSpacing: Unnecessary spacing detected.
          if ( prefix = self.class.extension_parameters[:self_uri_prefix]  )
                                                                         ^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:30:74: C: Layout/SpaceInsideParens: Space inside parentheses detected.
          if ( prefix = self.class.extension_parameters[:self_uri_prefix]  )
                                                                         ^^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:31:43: C: Layout/SpaceInsideParens: Space inside parentheses detected.
            @_ctx.referent.add_identifier( prefix +  self["id"] )
                                          ^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:31:51: C: Layout/SpaceAroundOperators: Operator + should be surrounded by a single space.
            @_ctx.referent.add_identifier( prefix +  self["id"] )
                                                  ^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:31:52: C: Layout/ExtraSpacing: Unnecessary spacing detected.
            @_ctx.referent.add_identifier( prefix +  self["id"] )
                                                   ^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:31:59: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            @_ctx.referent.add_identifier( prefix +  self["id"] )
                                                          ^^^^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:31:64: C: Layout/SpaceInsideParens: Space inside parentheses detected.
            @_ctx.referent.add_identifier( prefix +  self["id"] )
                                                               ^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:33:41: C: Layout/SpaceInsideParens: Space inside parentheses detected.
          @_ctx.referrer.add_identifier( self.class.extension_parameters[:rfr_id] || "info:sid:projectblacklight.org" )
                                        ^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:33:86: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          @_ctx.referrer.add_identifier( self.class.extension_parameters[:rfr_id] || "info:sid:projectblacklight.org" )
                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:33:118: C: Layout/SpaceInsideParens: Space inside parentheses detected.
          @_ctx.referrer.add_identifier( self.class.extension_parameters[:rfr_id] || "info:sid:projectblacklight.org" )
                                                                                                                     ^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:35:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:36:9: C: Style/RedundantReturn: Redundant return detected.
        return @_ctx
        ^^^^^^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:40:62: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # we're over-riding, even though we do nothing with it.
                                                             ^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:41:37: W: Lint/UnusedMethodArgument: Unused method argument - ignored_param. If it's necessary, use _ or _ignored_param as an argument name to indicate that it won't be used. You can also write as export_as_openurl_ctx_kev(*) if you want the method to accept any arguments but don't care about them.
      def export_as_openurl_ctx_kev(ignored_param = nil)
                                    ^^^^^^^^^^^^^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:42:9: C: Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
        unless defined? @_ctx_kev
        ^^^^^^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:45:9: C: Style/RedundantReturn: Redundant return detected.
        return @_ctx_kev
        ^^^^^^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:47:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:48:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:49:7: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
      def export_as_openurl_ctx_xml
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:50:9: C: Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
        unless defined? @_ctx_xml
        ^^^^^^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:53:9: C: Style/RedundantReturn: Redundant return detected.
        return @_ctx_xml
        ^^^^^^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:54:10: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      end
         ^^^^^^
marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:55:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/code_maps.rb:2:3: C: Metrics/ModuleLength: Module has too many lines. [825/100]
  module CodeMaps ...
  ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:3:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/code_maps.rb:4:14: C: Style/MutableConstant: Freeze mutable objects assigned to constants.
    FORMAT = { ...
             ^
marc_display/lib/marc_display/code_maps.rb:15:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/code_maps.rb:16:16: C: Style/MutableConstant: Freeze mutable objects assigned to constants.
    LANGUAGE = { ...
               ^
marc_display/lib/marc_display/code_maps.rb:17:7: C: Layout/LeadingCommentSpace: Missing space after #.
      #'???' => '',  # Prefer nil for no language.
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:17:51: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      #'???' => '',  # Prefer nil for no language.
                                                  ^
marc_display/lib/marc_display/code_maps.rb:18:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'aar' => %{Afar},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:19:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'abk' => %{Abkhaz},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:20:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ace' => %{Achinese},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:21:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ach' => %{Acoli},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:22:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ada' => %{Adangme},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:23:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ady' => %{Adygei},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:26:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'afr' => %{Afrikaans},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:27:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ajm' => %{Aljamia},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:28:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'aka' => %{Akan},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:29:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'akk' => %{Akkadian},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:30:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'alb' => %{Albanian},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:31:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ale' => %{Aleut},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:33:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'amh' => %{Amharic},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:35:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'apa' => %{Apache languages},
               ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:36:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ara' => %{Arabic},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:37:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'arc' => %{Aramaic},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:38:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'arg' => %{Aragonese Spanish},
               ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:39:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'arm' => %{Armenian},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:40:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'arn' => %{Mapuche},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:41:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'arp' => %{Arapaho},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:43:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'arw' => %{Arawak},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:44:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'asm' => %{Assamese},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:45:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ast' => %{Bable},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:47:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'aus' => %{Australian languages},
               ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:48:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ava' => %{Avaric},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:49:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ave' => %{Avestan},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:50:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'awa' => %{Awadhi},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:51:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'aym' => %{Aymara},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:52:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'aze' => %{Azerbaijani},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:53:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bad' => %{Banda},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:54:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bai' => %{Bamileke languages},
               ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:55:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bak' => %{Bashkir},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:56:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bal' => %{Baluchi},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:57:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bam' => %{Bambara},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:58:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ban' => %{Balinese},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:59:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'baq' => %{Basque},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:60:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bas' => %{Basa},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:62:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bej' => %{Beja},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:63:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bel' => %{Belarusian},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:64:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bem' => %{Bemba},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:65:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ben' => %{Bengali},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:67:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bho' => %{Bhojpuri},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:68:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bih' => %{Bihari},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:69:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bik' => %{Bikol},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:70:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bin' => %{Edo},
               ^^^^^^
marc_display/lib/marc_display/code_maps.rb:71:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bis' => %{Bislama},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:72:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bla' => %{Siksika},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:74:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bos' => %{Bosnian},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:75:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bra' => %{Braj},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:76:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bre' => %{Breton},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:77:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'btk' => %{Batak},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:78:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bua' => %{Buriat},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:79:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bug' => %{Bugis},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:80:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bul' => %{Bulgarian},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:81:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'bur' => %{Burmese},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:82:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'cad' => %{Caddo},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:84:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'cam' => %{Khmer},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:85:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'car' => %{Carib},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:86:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'cat' => %{Catalan},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:88:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ceb' => %{Cebuano},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:90:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'cha' => %{Chamorro},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:91:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'chb' => %{Chibcha},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:92:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'che' => %{Chechen},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:93:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'chg' => %{Chagatai},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:94:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'chi' => %{Chinese},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:95:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'chk' => %{Truk},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:96:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'chm' => %{Mari},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:97:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'chn' => %{Chinook jargon},
               ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:98:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'cho' => %{Choctaw},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:99:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'chp' => %{Chipewyan},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:100:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'chr' => %{Cherokee},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:101:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'chu' => %{Church Slavic},
               ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:102:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'chv' => %{Chuvash},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:103:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'chy' => %{Cheyenne},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:104:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'cmc' => %{Chamic languages},
               ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:105:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'cop' => %{Coptic},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:106:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'cor' => %{Cornish},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:107:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'cos' => %{Corsican},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:111:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'cre' => %{Cree},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:112:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'crh' => %{Crimean Tatar},
               ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:115:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'cze' => %{Czech},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:116:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'dak' => %{Dakota},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:117:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'dan' => %{Danish},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:118:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'dar' => %{Dargwa},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:119:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'day' => %{Dayak},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:120:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'del' => %{Delaware},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:121:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'den' => %{Slave},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:122:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'dgr' => %{Dogrib},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:123:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'din' => %{Dinka},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:124:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'div' => %{Divehi},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:125:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'doi' => %{Dogri},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:127:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'dua' => %{Duala},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:129:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'dut' => %{Dutch},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:130:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'dyu' => %{Dyula},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:131:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'dzo' => %{Dzongkha},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:132:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'efi' => %{Efik},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:133:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'egy' => %{Egyptian},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:134:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'eka' => %{Ekajuk},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:135:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'elx' => %{Elamite},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:136:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'eng' => %{English},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:138:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'epo' => %{Esperanto},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:139:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'esk' => %{Eskimo languages},
               ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:140:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'esp' => %{Esperanto},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:141:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'est' => %{Estonian},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:142:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'eth' => %{Ethiopic},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:143:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ewe' => %{Ewe},
               ^^^^^^
marc_display/lib/marc_display/code_maps.rb:144:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ewo' => %{Ewondo},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:145:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'fan' => %{Fang},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:146:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'fao' => %{Faroese},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:147:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'far' => %{Faroese},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:148:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'fat' => %{Fanti},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:149:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'fij' => %{Fijian},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:150:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'fin' => %{Finnish},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:152:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'fon' => %{Fon},
               ^^^^^^
marc_display/lib/marc_display/code_maps.rb:153:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'fre' => %{French},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:154:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'fri' => %{Frisian},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:157:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'fry' => %{Frisian},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:158:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ful' => %{Fula},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:159:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'fur' => %{Friulian},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:160:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'gaa' => %{Ga},
               ^^^^^
marc_display/lib/marc_display/code_maps.rb:161:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'gae' => %{Scottish Gaelic},
               ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:162:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'gag' => %{Galician},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:163:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'gal' => %{Oromo},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:164:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'gay' => %{Gayo},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:165:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'gba' => %{Gbaya},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:167:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'geo' => %{Georgian},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:168:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ger' => %{German},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:169:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'gez' => %{Ethiopic},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:170:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'gil' => %{Gilbertese},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:171:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'gla' => %{Scottish Gaelic},
               ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:172:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'gle' => %{Irish},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:173:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'glg' => %{Galician},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:174:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'glv' => %{Manx},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:177:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'gon' => %{Gondi},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:178:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'gor' => %{Gorontalo},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:179:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'got' => %{Gothic},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:180:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'grb' => %{Grebo},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:183:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'grn' => %{Guarani},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:184:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'gua' => %{Guarani},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:185:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'guj' => %{Gujarati},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:186:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'gwi' => %{Gwich'in},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:187:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'hai' => %{Haida},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:188:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'hat' => %{Haitian French Creole},
               ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:189:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'hau' => %{Hausa},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:190:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'haw' => %{Hawaiian},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:191:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'heb' => %{Hebrew},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:192:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'her' => %{Herero},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:193:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'hil' => %{Hiligaynon},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:194:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'him' => %{Himachali},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:195:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'hin' => %{Hindi},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:196:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'hit' => %{Hittite},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:197:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'hmn' => %{Hmong},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:198:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'hmo' => %{Hiri Motu},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:199:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'hun' => %{Hungarian},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:200:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'hup' => %{Hupa},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:201:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'iba' => %{Iban},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:202:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ibo' => %{Igbo},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:203:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ice' => %{Icelandic},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:204:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ido' => %{Ido},
               ^^^^^^
marc_display/lib/marc_display/code_maps.rb:205:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'iii' => %{Sichuan Yi},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:206:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ijo' => %{Ijo},
               ^^^^^^
marc_display/lib/marc_display/code_maps.rb:207:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'iku' => %{Inuktitut},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:208:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ile' => %{Interlingue},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:209:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ilo' => %{Iloko},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:212:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ind' => %{Indonesian},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:214:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'inh' => %{Ingush},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:216:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ipk' => %{Inupiaq},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:218:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'iri' => %{Irish},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:220:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ita' => %{Italian},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:221:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'jav' => %{Javanese},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:222:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'jpn' => %{Japanese},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:223:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'jpr' => %{Judeo-Persian},
               ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:224:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'jrb' => %{Judeo-Arabic},
               ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:225:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kaa' => %{Kara-Kalpak},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:226:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kab' => %{Kabyle},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:227:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kac' => %{Kachin},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:228:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kal' => %{Kalatdlisut},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:229:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kam' => %{Kamba},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:230:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kan' => %{Kannada},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:231:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kar' => %{Karen},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:232:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kas' => %{Kashmiri},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:233:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kau' => %{Kanuri},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:234:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kaw' => %{Kawi},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:235:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kaz' => %{Kazakh},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:236:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kbd' => %{Kabardian},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:237:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kha' => %{Khasi},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:239:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'khm' => %{Khmer},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:240:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kho' => %{Khotanese},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:241:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kik' => %{Kikuyu},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:242:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kin' => %{Kinyarwanda},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:243:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kir' => %{Kyrgyz},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:244:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kmb' => %{Kimbundu},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:245:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kok' => %{Konkani},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:246:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kom' => %{Komi},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:247:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kon' => %{Kongo},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:248:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kor' => %{Korean},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:249:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kos' => %{Kusaie},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:250:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kpe' => %{Kpelle},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:251:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kro' => %{Kru},
               ^^^^^^
marc_display/lib/marc_display/code_maps.rb:252:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kru' => %{Kurukh},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:253:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kua' => %{Kuanyama},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:254:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kum' => %{Kumyk},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:255:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kur' => %{Kurdish},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:256:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kus' => %{Kusaie},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:257:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'kut' => %{Kutenai},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:258:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'lad' => %{Ladino},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:259:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'lah' => %{Lahnda},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:260:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'lam' => %{Lamba},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:262:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'lao' => %{Lao},
               ^^^^^^
marc_display/lib/marc_display/code_maps.rb:263:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'lap' => %{Sami}, # deprecated
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:264:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'lat' => %{Latin},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:265:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'lav' => %{Latvian},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:266:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'lez' => %{Lezgian},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:267:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'lim' => %{Limburgish},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:268:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'lin' => %{Lingala},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:269:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'lit' => %{Lithuanian},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:270:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'lol' => %{Mongo-Nkundu},
               ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:271:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'loz' => %{Lozi},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:272:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ltz' => %{Letzeburgesch},
               ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:273:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'lua' => %{Luba-Lulua},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:274:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'lub' => %{Luba-Katanga},
               ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:275:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'lug' => %{Ganda},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:276:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'lui' => %{Luiseno},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:277:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'lun' => %{Lunda},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:279:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'lus' => %{Lushai},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:280:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mac' => %{Macedonian},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:281:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mad' => %{Madurese},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:282:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mag' => %{Magahi},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:283:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mah' => %{Marshallese},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:284:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mai' => %{Maithili},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:285:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mak' => %{Makasar},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:286:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mal' => %{Malayalam},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:287:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'man' => %{Mandingo},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:288:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mao' => %{Maori},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:290:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mar' => %{Marathi},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:291:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mas' => %{Masai},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:292:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'max' => %{Manx}, # deprecated
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:293:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'may' => %{Malay},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:294:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mdr' => %{Mandar},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:295:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'men' => %{Mende},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:297:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mic' => %{Micmac},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:298:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'min' => %{Minangkabau},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:299:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mis' => %{Miscellaneous languages},
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:301:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mla' => %{Malagasy}, # deprecated
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:302:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mlg' => %{Malagasy},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:303:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mlt' => %{Maltese},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:304:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mnc' => %{Manchu},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:305:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mni' => %{Manipuri},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:306:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mno' => %{Manobo languages},
               ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:307:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'moh' => %{Mohawk},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:308:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mol' => %{Moldavian}, # deprecated
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:309:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mon' => %{Mongolian},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:310:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mos' => %{Moore},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:311:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mul' => %{Multiple languages},
               ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:313:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mus' => %{Creek},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:314:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'mwr' => %{Marwari},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:315:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'myn' => %{Mayan languages},
               ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:316:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'nah' => %{Nahuatl},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:318:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'nap' => %{Neapolitan Italian},
               ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:319:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'nau' => %{Nauru},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:320:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'nav' => %{Navajo},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:323:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ndo' => %{Ndonga},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:324:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'nds' => %{Low German},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:325:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'nep' => %{Nepali},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:326:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'new' => %{Newari},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:327:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'nia' => %{Nias},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:329:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'niu' => %{Niuean},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:332:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'nog' => %{Nogai},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:333:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'non' => %{Old Norse},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:334:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'nor' => %{Norwegian},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:335:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'nso' => %{Northern Sotho},
               ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:336:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'nub' => %{Nubian languages},
               ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:337:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'nya' => %{Nyanja},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:338:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'nym' => %{Nyamwezi},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:339:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'nyn' => %{Nyankole},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:340:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'nyo' => %{Nyoro},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:341:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'nzi' => %{Nzima},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:343:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'oji' => %{Ojibwa},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:344:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ori' => %{Oriya},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:345:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'orm' => %{Oromo},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:346:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'osa' => %{Osage},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:347:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'oss' => %{Ossetic},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:348:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ota' => %{Turkish, Ottoman},
               ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:349:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'oto' => %{Otomian languages},
               ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:351:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'pag' => %{Pangasinan},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:352:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'pal' => %{Pahlavi},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:353:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'pam' => %{Pampanga},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:354:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'pan' => %{Panjabi},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:355:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'pap' => %{Papiamento},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:356:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'pau' => %{Palauan},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:358:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'per' => %{Persian},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:360:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'phn' => %{Phoenician},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:361:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'pli' => %{Pali},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:362:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'pol' => %{Polish},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:363:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'pon' => %{Ponape},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:364:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'por' => %{Portuguese},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:365:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'pra' => %{Prakrit languages},
               ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:367:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'pus' => %{Pushto},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:368:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'que' => %{Quechua},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:369:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'raj' => %{Rajasthani},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:370:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'rap' => %{Rapanui},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:371:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'rar' => %{Rarotongan},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:373:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'roh' => %{Raeto-Romance},
               ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:374:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'rom' => %{Romani},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:375:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'rum' => %{Romanian},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:376:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'run' => %{Rundi},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:377:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'rus' => %{Russian},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:378:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sad' => %{Sandawe},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:380:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sah' => %{Yakut},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:382:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sal' => %{Salishan languages},
               ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:383:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sam' => %{Samaritan Aramaic},
               ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:384:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'san' => %{Sanskrit},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:385:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sao' => %{Samoan}, # deprecated see smo
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:386:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sas' => %{Sasak},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:387:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sat' => %{Santali},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:388:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'scc' => %{Serbian}, # deprecated
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:389:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sco' => %{Scots},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:390:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'scr' => %{Croatian}, # deprecated
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:391:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sel' => %{Selkup},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:394:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sgn' => %{Sign languages},
               ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:395:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'shn' => %{Shan},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:396:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sho' => %{Shona}, # deprecated
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:397:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sid' => %{Sidamo},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:398:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sin' => %{Sinhalese},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:402:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'slo' => %{Slovak},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:403:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'slv' => %{Slovenian},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:404:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sma' => %{Southern Sami},
               ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:405:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sme' => %{Northern Sami},
               ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:406:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'smi' => %{Sami},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:407:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'smj' => %{Lule Sami},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:408:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'smn' => %{Inari Sami},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:409:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'smo' => %{Samoan},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:410:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sms' => %{Skolt Sami},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:411:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sna' => %{Shona},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:412:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'snd' => %{Sindhi},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:413:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'snh' => %{Sinhalese}, # deprecated
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:414:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'snk' => %{Soninke},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:415:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sog' => %{Sogdian},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:416:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'som' => %{Somali},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:417:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'son' => %{Songhai},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:418:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sot' => %{Sotho},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:419:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'spa' => %{Spanish},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:420:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'srd' => %{Sardinian},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:421:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'srr' => %{Serer},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:423:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sso' => %{Sotho}, # deprecated
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:424:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ssw' => %{Swazi},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:425:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'suk' => %{Sukuma},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:426:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sun' => %{Sundanese},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:427:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sus' => %{Susu},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:428:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'sux' => %{Sumerian},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:429:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'swa' => %{Swahili},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:430:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'swe' => %{Swedish},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:431:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'swz' => %{Swazi}, # deprecated
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:432:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'syr' => %{Syriac},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:433:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tag' => %{Tagalog},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:434:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tah' => %{Tahitian},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:436:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'taj' => %{Tajik},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:437:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tam' => %{Tamil},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:438:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tar' => %{Tatar},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:439:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tat' => %{Tatar},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:440:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tel' => %{Telugu},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:441:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tem' => %{Temne},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:442:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ter' => %{Terena},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:443:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tet' => %{Tetum},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:444:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tgk' => %{Tajik},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:445:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tgl' => %{Tagalog},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:446:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tha' => %{Thai},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:447:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tib' => %{Tibetan},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:448:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tig' => %{Tigre},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:449:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tir' => %{Tigrinya},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:450:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tiv' => %{Tiv},
               ^^^^^^
marc_display/lib/marc_display/code_maps.rb:451:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tkl' => %{Tokelauan},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:452:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tli' => %{Tlingit},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:453:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tmh' => %{Tamashek},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:455:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ton' => %{Tongan},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:456:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tpi' => %{Tok Pisin},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:457:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tru' => %{Truk},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:458:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tsi' => %{Tsimshian},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:459:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tsn' => %{Tswana},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:460:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tso' => %{Tsonga},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:461:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tsw' => %{Tswana},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:462:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tuk' => %{Turkmen},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:463:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tum' => %{Tumbuka},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:464:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tup' => %{Tupi languages},
               ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:465:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tur' => %{Turkish},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:467:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tvl' => %{Tuvaluan},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:468:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'twi' => %{Twi},
               ^^^^^^
marc_display/lib/marc_display/code_maps.rb:469:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'tyv' => %{Tuvinian},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:470:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'udm' => %{Udmurt},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:471:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'uga' => %{Ugaritic},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:472:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'uig' => %{Uighur},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:473:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ukr' => %{Ukrainian},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:474:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'umb' => %{Umbundu},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:476:7: C: Layout/LeadingCommentSpace: Missing space after #.
      #'und' => %{Undetermined},
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:476:33: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      #'und' => %{Undetermined},
                                ^^
marc_display/lib/marc_display/code_maps.rb:477:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'urd' => %{Urdu},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:478:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'uzb' => %{Uzbek},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:479:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'vai' => %{Vai},
               ^^^^^^
marc_display/lib/marc_display/code_maps.rb:480:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ven' => %{Venda},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:481:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'vie' => %{Vietnamese},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:482:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'vol' => %{Volapuk},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:483:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'vot' => %{Votic},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:484:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'wak' => %{Wakashan languages},
               ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:485:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'wal' => %{Walamo},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:486:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'war' => %{Waray},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:487:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'was' => %{Washo},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:488:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'wel' => %{Welsh},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:489:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'wen' => %{Sorbian languages},
               ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:490:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'wln' => %{Walloon},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:491:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'wol' => %{Wolof},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:492:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'xal' => %{Kalmyk},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:493:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'xho' => %{Xhosa},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:495:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'yap' => %{Yapese},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:496:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'yid' => %{Yiddish},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:497:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'yor' => %{Yoruba},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:498:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'ypk' => %{Yupik languages},
               ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:499:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'zap' => %{Zapotec},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:500:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'zen' => %{Zenaga},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:501:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'zha' => %{Zhuang},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:502:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'znd' => %{Zande},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:503:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'zul' => %{Zulu},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:504:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      'zun' => %{Zuni}
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:505:58: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # We'd rather leave 'no linguistic content' as nil.
                                                         ^
marc_display/lib/marc_display/code_maps.rb:506:7: C: Layout/LeadingCommentSpace: Missing space after #.
      #'zxx' => ''  # No linguistic content
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:508:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/code_maps.rb:510:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  INSTRUMENTATION = { ...
  ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:510:3: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
  INSTRUMENTATION = {

marc_display/lib/marc_display/code_maps.rb:510:21: C: Style/MutableConstant: Freeze mutable objects assigned to constants.
  INSTRUMENTATION = { ...
                    ^
marc_display/lib/marc_display/code_maps.rb:511:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ba" => "Horn",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:511:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ba" => "Horn",
            ^^^^^^
marc_display/lib/marc_display/code_maps.rb:512:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "bb" => "Trumpet",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:512:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "bb" => "Trumpet",
            ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:513:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "bc" => "Cornet",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:513:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "bc" => "Cornet",
            ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:514:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "bd" => "Trombone",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:514:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "bd" => "Trombone",
            ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:515:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "be" => "Tuba",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:515:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "be" => "Tuba",
            ^^^^^^
marc_display/lib/marc_display/code_maps.rb:516:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "bf" => "Baritone",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:516:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "bf" => "Baritone",
            ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:517:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "bn" => "Brass, unspecified",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:517:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "bn" => "Brass, unspecified",
            ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:518:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "bo" => "Brass, other", # (obsolete; use bz)
    ^^^^
marc_display/lib/marc_display/code_maps.rb:518:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "bo" => "Brass, other", # (obsolete; use bz)
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:519:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "bu" => "Brass, unknown",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:519:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "bu" => "Brass, unknown",
            ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:520:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "by" => "Brass, ethnic",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:520:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "by" => "Brass, ethnic",
            ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:521:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "bz" => "Brass, other",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:521:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "bz" => "Brass, other",
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:522:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/code_maps.rb:523:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ca" => "Mixed chorus",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:523:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ca" => "Mixed chorus",
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:524:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "cb" => "Women's chorus",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:525:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "cc" => "Men's chorus",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:526:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "cd" => "Children's chorus",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:527:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "cn" => "Choruses, unspecified",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:527:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "cn" => "Choruses, unspecified",
            ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:528:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "cu" => "Choruses, unknown",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:528:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "cu" => "Choruses, unknown",
            ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:529:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "cy" => "Choruses, ethnic",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:529:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "cy" => "Choruses, ethnic",
            ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:530:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "cz" => "Choruses, unspecified", # Unspecified (obsolete; use cn)
    ^^^^
marc_display/lib/marc_display/code_maps.rb:530:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "cz" => "Choruses, unspecified", # Unspecified (obsolete; use cn)
            ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:531:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/code_maps.rb:532:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ea" => "Synthesizer",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:532:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ea" => "Synthesizer",
            ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:533:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "eb" => "Tape",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:533:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "eb" => "Tape",
            ^^^^^^
marc_display/lib/marc_display/code_maps.rb:534:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ec" => "Computer",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:534:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ec" => "Computer",
            ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:535:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ed" => "Ondes Martenot",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:535:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ed" => "Ondes Martenot",
            ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:536:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "en" => "Electronic, unspecified",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:536:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "en" => "Electronic, unspecified",
            ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:537:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "eo" => "Electronic, other", # Other (obsolete; use ez)
    ^^^^
marc_display/lib/marc_display/code_maps.rb:537:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "eo" => "Electronic, other", # Other (obsolete; use ez)
            ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:538:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "eu" => "Electronic, unknown",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:538:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "eu" => "Electronic, unknown",
            ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:539:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ez" => "Electronic, other",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:539:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ez" => "Electronic, other",
            ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:540:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/code_maps.rb:541:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ka" => "Piano",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:541:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ka" => "Piano",
            ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:542:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "kb" => "Organ",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:542:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "kb" => "Organ",
            ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:543:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "kc" => "Harpsichord",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:543:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "kc" => "Harpsichord",
            ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:544:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "kd" => "Clavichord",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:544:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "kd" => "Clavichord",
            ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:545:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ke" => "Continuo",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:545:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ke" => "Continuo",
            ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:546:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "kf" => "Celeste",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:546:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "kf" => "Celeste",
            ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:547:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "kn" => "Keyboard, unspecified",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:547:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "kn" => "Keyboard, unspecified",
            ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:548:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ko" => "Keyboard, other", # Other (obsolete; use kz)
    ^^^^
marc_display/lib/marc_display/code_maps.rb:548:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ko" => "Keyboard, other", # Other (obsolete; use kz)
            ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:549:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ku" => "Keyboard, unknown",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:549:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ku" => "Keyboard, unknown",
            ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:550:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ky" => "Keyboard, ethnic",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:550:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ky" => "Keyboard, ethnic",
            ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:551:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "kz" => "Keyboard, other",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:551:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "kz" => "Keyboard, other",
            ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:552:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/code_maps.rb:553:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "oa" => "Full orchestra",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:553:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "oa" => "Full orchestra",
            ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:554:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ob" => "Chamber orchestra",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:554:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ob" => "Chamber orchestra",
            ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:555:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "oc" => "String orchestra",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:555:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "oc" => "String orchestra",
            ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:556:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "od" => "Band",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:556:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "od" => "Band",
            ^^^^^^
marc_display/lib/marc_display/code_maps.rb:557:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "oe" => "Dance orchestra",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:557:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "oe" => "Dance orchestra",
            ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:558:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "of" => "Brass band",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:558:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "of" => "Brass band",
            ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:559:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "on" => "Larger ensemble, unspecified",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:559:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "on" => "Larger ensemble, unspecified",
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:560:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "oo" => "Larger ensemble, other", # (obsolete; use oz)
    ^^^^
marc_display/lib/marc_display/code_maps.rb:560:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "oo" => "Larger ensemble, other", # (obsolete; use oz)
            ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:561:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ou" => "Larger ensemble, unknown",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:561:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ou" => "Larger ensemble, unknown",
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:562:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "oy" => "Larger ensemble, ethnic",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:562:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "oy" => "Larger ensemble, ethnic",
            ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:563:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "oz" => "Larger ensemble, other",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:563:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "oz" => "Larger ensemble, other",
            ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:564:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/code_maps.rb:565:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "pa" => "Timpani",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:565:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "pa" => "Timpani",
            ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:566:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "pb" => "Xylophone",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:566:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "pb" => "Xylophone",
            ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:567:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "pc" => "Marimba",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:567:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "pc" => "Marimba",
            ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:568:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "pd" => "Drum",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:568:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "pd" => "Drum",
            ^^^^^^
marc_display/lib/marc_display/code_maps.rb:569:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "pn" => "Percussion, unspecified",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:569:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "pn" => "Percussion, unspecified",
            ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:570:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "po" => "Percussion, other", # (obsolete; use pz)
    ^^^^
marc_display/lib/marc_display/code_maps.rb:570:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "po" => "Percussion, other", # (obsolete; use pz)
            ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:571:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "pu" => "Percussion, unknown",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:571:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "pu" => "Percussion, unknown",
            ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:572:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "py" => "Percussion, ethnic",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:572:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "py" => "Percussion, ethnic",
            ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:573:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "pz" => "Percussion, other",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:573:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "pz" => "Percussion, other",
            ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:574:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/code_maps.rb:575:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "sa" => "Violin",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:575:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "sa" => "Violin",
            ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:576:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "sb" => "Viola",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:576:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "sb" => "Viola",
            ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:577:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "sc" => "Cello", # We prefer Cello instead of Violoncello from official standard
    ^^^^
marc_display/lib/marc_display/code_maps.rb:577:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "sc" => "Cello", # We prefer Cello instead of Violoncello from official standard
            ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:578:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "sd" => "Double bass",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:578:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "sd" => "Double bass",
            ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:579:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "se" => "Viol",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:579:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "se" => "Viol",
            ^^^^^^
marc_display/lib/marc_display/code_maps.rb:580:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "sf" => "Viola d'amore",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:581:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "sg" => "Viola da gamba",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:581:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "sg" => "Viola da gamba",
            ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:582:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "sn" => "Strings, bowed, unspecified",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:582:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "sn" => "Strings, bowed, unspecified",
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:583:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "so" => "Strings, bowed, other", # (obsolete; use sz)
    ^^^^
marc_display/lib/marc_display/code_maps.rb:583:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "so" => "Strings, bowed, other", # (obsolete; use sz)
            ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:584:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "su" => "Strings, bowed, unknown",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:584:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "su" => "Strings, bowed, unknown",
            ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:585:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "sy" => "Strings, bowed, ethnic",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:585:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "sy" => "Strings, bowed, ethnic",
            ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:586:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "sz" => "Strings, bowed, other (includes hurdygurdy)",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:586:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "sz" => "Strings, bowed, other (includes hurdygurdy)",
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:587:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/code_maps.rb:588:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ta" => "Harp",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:588:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ta" => "Harp",
            ^^^^^^
marc_display/lib/marc_display/code_maps.rb:589:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "tb" => "Guitar",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:589:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "tb" => "Guitar",
            ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:590:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "tc" => "Lute",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:590:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "tc" => "Lute",
            ^^^^^^
marc_display/lib/marc_display/code_maps.rb:591:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "td" => "Mandolin",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:591:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "td" => "Mandolin",
            ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:592:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "tn" => "Strings, plucked, unspecified",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:592:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "tn" => "Strings, plucked, unspecified",
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:593:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "to" => "Strings, plucked, other", # (obsolete; use tz)
    ^^^^
marc_display/lib/marc_display/code_maps.rb:593:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "to" => "Strings, plucked, other", # (obsolete; use tz)
            ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:594:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "tu" => "Strings, plucked, unknown",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:594:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "tu" => "Strings, plucked, unknown",
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:595:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ty" => "Strings, plucked, ethnnic",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:595:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ty" => "Strings, plucked, ethnnic",
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:596:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "tz" => "Strings, plucked, other",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:596:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "tz" => "Strings, plucked, other",
            ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:597:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/code_maps.rb:598:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "va" => "Voices, soprano",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:598:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "va" => "Voices, soprano",
            ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:599:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vb" => "Voices, mezzo soprano",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:599:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vb" => "Voices, mezzo soprano",
            ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:600:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vc" => "Voices, alto",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:600:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vc" => "Voices, alto",
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:601:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vd" => "Voices, tenor",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:601:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vd" => "Voices, tenor",
            ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:602:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ve" => "Voices, baritone",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:602:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "ve" => "Voices, baritone",
            ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:603:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vf" => "Voices, bass",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:603:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vf" => "Voices, bass",
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:604:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vg" => "Voices, counter tenor",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:604:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vg" => "Voices, counter tenor",
            ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:605:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vh" => "High voice",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:605:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vh" => "High voice",
            ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:606:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vi" => "Medium voice",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:606:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vi" => "Medium voice",
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:607:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vj" => "Low voice",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:607:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vj" => "Low voice",
            ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:608:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vn" => "Voices, unspecified (includes narrators, speakers)",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:608:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vn" => "Voices, unspecified (includes narrators, speakers)",
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:609:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vu" => "Voices, unknown",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:609:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vu" => "Voices, unknown",
            ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:610:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vy" => "Voices, ethnic",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:610:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vy" => "Voices, ethnic",
            ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:611:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vz" => "Voices, unspecified (includes narrators, speakers)", #"Unspecified (obsolete; use vn)",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:611:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "vz" => "Voices, unspecified (includes narrators, speakers)", #"Unspecified (obsolete; use vn)",
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:611:67: C: Layout/LeadingCommentSpace: Missing space after #.
    "vz" => "Voices, unspecified (includes narrators, speakers)", #"Unspecified (obsolete; use vn)",
                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:612:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/code_maps.rb:613:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wa" => "Flute",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:613:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wa" => "Flute",
            ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:614:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wb" => "Oboe",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:614:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wb" => "Oboe",
            ^^^^^^
marc_display/lib/marc_display/code_maps.rb:615:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wc" => "Clarinet",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:615:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wc" => "Clarinet",
            ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:616:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wd" => "Bassoon",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:616:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wd" => "Bassoon",
            ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:617:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "we" => "Piccolo",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:617:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "we" => "Piccolo",
            ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:618:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wf" => "English horn",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:618:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wf" => "English horn",
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:619:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wg" => "Bass clarinet",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:619:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wg" => "Bass clarinet",
            ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:620:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wh" => "Recorder",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:620:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wh" => "Recorder",
            ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:621:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wi" => "Saxophone",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:621:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wi" => "Saxophone",
            ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:622:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wn" => "Woodwinds, unspecified",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:622:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wn" => "Woodwinds, unspecified",
            ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:623:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wo" => "Woodwinds, other", #Other (obsolete; use wz)"
    ^^^^
marc_display/lib/marc_display/code_maps.rb:623:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wo" => "Woodwinds, other", #Other (obsolete; use wz)"
            ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:623:33: C: Layout/LeadingCommentSpace: Missing space after #.
    "wo" => "Woodwinds, other", #Other (obsolete; use wz)"
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:624:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wu" => "Woodwinds, unknown",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:624:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wu" => "Woodwinds, unknown",
            ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:625:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wy" => "Woodwinds, ethnic",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:625:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wy" => "Woodwinds, ethnic",
            ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:626:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wz" => "Woodwinds, other",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:626:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "wz" => "Woodwinds, other",
            ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:627:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/code_maps.rb:628:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "zn" => "Unspecified instruments",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:628:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "zn" => "Unspecified instruments",
            ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:629:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "zu" => "Unknown instruments",
    ^^^^
marc_display/lib/marc_display/code_maps.rb:629:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "zu" => "Unknown instruments",
            ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:630:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "zz" => "Unspecified instruments" #(obsolete; use zn)
    ^^^^
marc_display/lib/marc_display/code_maps.rb:630:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "zz" => "Unspecified instruments" #(obsolete; use zn)
            ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:630:39: C: Layout/LeadingCommentSpace: Missing space after #.
    "zz" => "Unspecified instruments" #(obsolete; use zn)
                                      ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:632:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/code_maps.rb:633:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  RELATOR = { ...
  ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:633:3: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
  RELATOR = {

marc_display/lib/marc_display/code_maps.rb:633:13: C: Style/MutableConstant: Freeze mutable objects assigned to constants.
  RELATOR = { ...
            ^
marc_display/lib/marc_display/code_maps.rb:634:7: C: Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
      "acp" => %{Art copyist},
      ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:634:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "acp" => %{Art copyist},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:634:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "acp" => %{Art copyist},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:635:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "act" => %{Actor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:635:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "act" => %{Actor},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:636:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "adp" => %{Adapter},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:636:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "adp" => %{Adapter},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:637:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "aft" => %{Author of afterword, colophon, etc.},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:637:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "aft" => %{Author of afterword, colophon, etc.},
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:638:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "anl" => %{Analyst},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:638:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "anl" => %{Analyst},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:639:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "anm" => %{Animator},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:639:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "anm" => %{Animator},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:640:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ann" => %{Annotator},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:640:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ann" => %{Annotator},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:641:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ant" => %{Bibliographic antecedent},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:641:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ant" => %{Bibliographic antecedent},
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:642:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "app" => %{Applicant},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:642:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "app" => %{Applicant},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:643:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "aqt" => %{Author in quotations or text abstracts},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:643:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "aqt" => %{Author in quotations or text abstracts},
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:644:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "arc" => %{Architect},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:644:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "arc" => %{Architect},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:645:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ard" => %{Artistic director},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:645:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ard" => %{Artistic director},
               ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:646:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "arr" => %{Arranger},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:646:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "arr" => %{Arranger},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:647:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "art" => %{Artist},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:647:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "art" => %{Artist},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:648:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "asg" => %{Assignee},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:648:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "asg" => %{Assignee},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:649:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "asn" => %{Associated name},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:649:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "asn" => %{Associated name},
               ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:650:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "att" => %{Attributed name},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:650:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "att" => %{Attributed name},
               ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:651:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "auc" => %{Auctioneer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:651:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "auc" => %{Auctioneer},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:652:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "aud" => %{Author of dialog},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:652:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "aud" => %{Author of dialog},
               ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:653:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "aui" => %{Author of introduction},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:653:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "aui" => %{Author of introduction},
               ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:654:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "aus" => %{Author of screenplay},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:654:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "aus" => %{Author of screenplay},
               ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:655:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "aut" => %{Author},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:655:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "aut" => %{Author},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:656:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "bdd" => %{Binding designer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:656:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "bdd" => %{Binding designer},
               ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:657:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "bjd" => %{Bookjacket designer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:657:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "bjd" => %{Bookjacket designer},
               ^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:658:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "bkd" => %{Book designer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:658:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "bkd" => %{Book designer},
               ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:659:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "bkp" => %{Book producer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:659:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "bkp" => %{Book producer},
               ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:660:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "bnd" => %{Binder},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:660:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "bnd" => %{Binder},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:661:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "bpd" => %{Bookplate designer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:661:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "bpd" => %{Bookplate designer},
               ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:662:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "bsl" => %{Bookseller},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:662:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "bsl" => %{Bookseller},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:663:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ccp" => %{Conceptor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:663:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ccp" => %{Conceptor},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:664:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "chr" => %{Choreographer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:664:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "chr" => %{Choreographer},
               ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:665:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "clb" => %{Collaborator},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:665:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "clb" => %{Collaborator},
               ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:666:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cli" => %{Client},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:666:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cli" => %{Client},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:667:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cll" => %{Calligrapher},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:667:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cll" => %{Calligrapher},
               ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:668:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "clt" => %{Collotyper},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:668:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "clt" => %{Collotyper},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:669:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cmm" => %{Commentator},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:669:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cmm" => %{Commentator},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:670:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cmp" => %{Composer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:670:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cmp" => %{Composer},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:671:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cmt" => %{Compositor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:671:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cmt" => %{Compositor},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:672:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cng" => %{Cinematographer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:672:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cng" => %{Cinematographer},
               ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:673:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cnd" => %{Conductor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:673:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cnd" => %{Conductor},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:674:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cns" => %{Censor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:674:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cns" => %{Censor},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:675:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "coe" => %{Contestant-appellee},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:675:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "coe" => %{Contestant-appellee},
               ^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:676:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "col" => %{Collector},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:676:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "col" => %{Collector},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:677:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "com" => %{Compiler},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:677:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "com" => %{Compiler},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:678:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cos" => %{Contestant},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:678:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cos" => %{Contestant},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:679:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cot" => %{Contestant-appellant},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:679:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cot" => %{Contestant-appellant},
               ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:680:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cov" => %{Cover designer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:680:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cov" => %{Cover designer},
               ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:681:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cpc" => %{Copyright claimant},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:681:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cpc" => %{Copyright claimant},
               ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:682:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cpe" => %{Complainant-appellee},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:682:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cpe" => %{Complainant-appellee},
               ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:683:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cph" => %{Copyright holder},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:683:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cph" => %{Copyright holder},
               ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:684:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cpl" => %{Complainant},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:684:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cpl" => %{Complainant},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:685:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cpt" => %{Complainant-appellant},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:685:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cpt" => %{Complainant-appellant},
               ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:686:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cre" => %{Creator},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:686:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cre" => %{Creator},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:687:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "crp" => %{Correspondent},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:687:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "crp" => %{Correspondent},
               ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:688:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "crr" => %{Corrector},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:688:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "crr" => %{Corrector},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:689:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "csl" => %{Consultant},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:689:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "csl" => %{Consultant},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:690:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "csp" => %{Consultant to a project},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:690:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "csp" => %{Consultant to a project},
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:691:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cst" => %{Costume designer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:691:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cst" => %{Costume designer},
               ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:692:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ctb" => %{Contributor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:692:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ctb" => %{Contributor},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:693:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cte" => %{Contestee-appellee},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:693:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cte" => %{Contestee-appellee},
               ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:694:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ctg" => %{Cartographer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:694:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ctg" => %{Cartographer},
               ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:695:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ctr" => %{Contractor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:695:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ctr" => %{Contractor},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:696:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cts" => %{Contestee},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:696:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cts" => %{Contestee},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:697:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ctt" => %{Contestee-appellant},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:697:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ctt" => %{Contestee-appellant},
               ^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:698:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cur" => %{Curator},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:698:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cur" => %{Curator},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:699:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "cwt" => %{Commentator for written text},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:699:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "cwt" => %{Commentator for written text},
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:700:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dfd" => %{Defendant},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:700:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "dfd" => %{Defendant},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:701:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dfe" => %{Defendant-appellee},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:701:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "dfe" => %{Defendant-appellee},
               ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:702:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dft" => %{Defendant-appellant},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:702:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "dft" => %{Defendant-appellant},
               ^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:703:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dgg" => %{Degree grantor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:703:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "dgg" => %{Degree grantor},
               ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:704:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dis" => %{Dissertant},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:704:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "dis" => %{Dissertant},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:705:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dln" => %{Delineator},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:705:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "dln" => %{Delineator},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:706:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dnc" => %{Dancer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:706:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "dnc" => %{Dancer},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:707:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dnr" => %{Donor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:707:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "dnr" => %{Donor},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:708:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dpc" => %{Depicted},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:708:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "dpc" => %{Depicted},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:709:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dpt" => %{Depositor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:709:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "dpt" => %{Depositor},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:710:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "drm" => %{Draftsman},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:710:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "drm" => %{Draftsman},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:711:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "drt" => %{Director},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:711:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "drt" => %{Director},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:712:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dsr" => %{Designer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:712:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "dsr" => %{Designer},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:713:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dst" => %{Distributor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:713:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "dst" => %{Distributor},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:714:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dtc" => %{Data contributor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:714:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "dtc" => %{Data contributor},
               ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:715:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dte" => %{Dedicatee},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:715:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "dte" => %{Dedicatee},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:716:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dtm" => %{Data manager},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:716:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "dtm" => %{Data manager},
               ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:717:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dto" => %{Dedicator},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:717:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "dto" => %{Dedicator},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:718:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "dub" => %{Dubious author},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:718:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "dub" => %{Dubious author},
               ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:719:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "edt" => %{Editor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:719:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "edt" => %{Editor},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:720:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "egr" => %{Engraver},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:720:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "egr" => %{Engraver},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:721:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "elg" => %{Electrician},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:721:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "elg" => %{Electrician},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:722:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "elt" => %{Electrotyper},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:722:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "elt" => %{Electrotyper},
               ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:723:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "eng" => %{Engineer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:723:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "eng" => %{Engineer},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:724:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "etr" => %{Etcher},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:724:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "etr" => %{Etcher},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:725:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "exp" => %{Expert},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:725:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "exp" => %{Expert},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:726:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "fac" => %{Facsimilist},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:726:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "fac" => %{Facsimilist},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:727:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "fld" => %{Field director},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:727:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "fld" => %{Field director},
               ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:728:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "flm" => %{Film editor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:728:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "flm" => %{Film editor},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:729:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "fmo" => %{Former owner},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:729:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "fmo" => %{Former owner},
               ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:730:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "fpy" => %{First party},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:730:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "fpy" => %{First party},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:731:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "fnd" => %{Funder},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:731:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "fnd" => %{Funder},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:732:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "frg" => %{Forger},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:732:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "frg" => %{Forger},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:733:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "gis" => %{Geographic information specialist},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:733:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "gis" => %{Geographic information specialist},
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:734:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "grt" => %{Graphic technician},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:734:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "grt" => %{Graphic technician},
               ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:735:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "hnr" => %{Honoree},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:735:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "hnr" => %{Honoree},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:736:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "hst" => %{Host},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:736:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "hst" => %{Host},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:737:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ill" => %{Illustrator},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:737:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ill" => %{Illustrator},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:738:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ilu" => %{Illuminator},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:738:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ilu" => %{Illuminator},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:739:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ins" => %{Inscriber},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:739:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ins" => %{Inscriber},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:740:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "inv" => %{Inventor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:740:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "inv" => %{Inventor},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:741:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "itr" => %{Instrumentalist},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:741:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "itr" => %{Instrumentalist},
               ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:742:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ive" => %{Interviewee},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:742:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ive" => %{Interviewee},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:743:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ivr" => %{Interviewer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:743:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ivr" => %{Interviewer},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:744:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "lbr" => %{Laboratory},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:744:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "lbr" => %{Laboratory},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:745:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "lbt" => %{Librettist},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:745:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "lbt" => %{Librettist},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:746:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ldr" => %{Laboratory director},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:746:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ldr" => %{Laboratory director},
               ^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:747:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "led" => %{Lead},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:747:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "led" => %{Lead},
               ^^^^^^^
marc_display/lib/marc_display/code_maps.rb:748:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "lee" => %{Libelee-appellee},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:748:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "lee" => %{Libelee-appellee},
               ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:749:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "lel" => %{Libelee},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:749:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "lel" => %{Libelee},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:750:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "len" => %{Lender},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:750:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "len" => %{Lender},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:751:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "let" => %{Libelee-appellant},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:751:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "let" => %{Libelee-appellant},
               ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:752:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "lgd" => %{Lighting designer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:752:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "lgd" => %{Lighting designer},
               ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:753:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "lie" => %{Libelant-appellee},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:753:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "lie" => %{Libelant-appellee},
               ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:754:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "lil" => %{Libelant},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:754:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "lil" => %{Libelant},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:755:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "lit" => %{Libelant-appellant},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:755:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "lit" => %{Libelant-appellant},
               ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:756:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "lsa" => %{Landscape architect},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:756:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "lsa" => %{Landscape architect},
               ^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:757:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "lse" => %{Licensee},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:757:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "lse" => %{Licensee},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:758:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "lso" => %{Licensor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:758:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "lso" => %{Licensor},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:759:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ltg" => %{Lithographer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:759:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ltg" => %{Lithographer},
               ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:760:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "lyr" => %{Lyricist},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:760:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "lyr" => %{Lyricist},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:761:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "mcp" => %{Music copyist},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:761:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "mcp" => %{Music copyist},
               ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:762:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "mfr" => %{Manufacturer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:762:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "mfr" => %{Manufacturer},
               ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:763:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "mdc" => %{Metadata contact},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:763:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "mdc" => %{Metadata contact},
               ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:764:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "mod" => %{Moderator},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:764:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "mod" => %{Moderator},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:765:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "mon" => %{Monitor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:765:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "mon" => %{Monitor},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:766:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "mrk" => %{Markup editor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:766:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "mrk" => %{Markup editor},
               ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:767:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "msd" => %{Musical director},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:767:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "msd" => %{Musical director},
               ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:768:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "mte" => %{Metal-engraver},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:768:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "mte" => %{Metal-engraver},
               ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:769:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "mus" => %{Musician},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:769:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "mus" => %{Musician},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:770:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "nrt" => %{Narrator},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:770:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "nrt" => %{Narrator},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:771:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "opn" => %{Opponent},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:771:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "opn" => %{Opponent},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:772:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "org" => %{Originator},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:772:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "org" => %{Originator},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:773:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "orm" => %{Organizer of meeting},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:773:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "orm" => %{Organizer of meeting},
               ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:774:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "oth" => %{Other},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:774:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "oth" => %{Other},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:775:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "own" => %{Owner},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:775:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "own" => %{Owner},
               ^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:776:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "pat" => %{Patron},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:776:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "pat" => %{Patron},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:777:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "pbd" => %{Publishing director},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:777:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "pbd" => %{Publishing director},
               ^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:778:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "pbl" => %{Publisher},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:778:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "pbl" => %{Publisher},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:779:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "pdr" => %{Project director},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:779:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "pdr" => %{Project director},
               ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:780:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "pfr" => %{Proofreader},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:780:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "pfr" => %{Proofreader},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:781:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "pht" => %{Photographer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:781:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "pht" => %{Photographer},
               ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:782:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "plt" => %{Platemaker},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:782:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "plt" => %{Platemaker},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:783:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "pma" => %{Permitting agency},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:783:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "pma" => %{Permitting agency},
               ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:784:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "pmn" => %{Production manager},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:784:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "pmn" => %{Production manager},
               ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:785:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "pop" => %{Printer of plates},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:785:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "pop" => %{Printer of plates},
               ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:786:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ppm" => %{Papermaker},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:786:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ppm" => %{Papermaker},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:787:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ppt" => %{Puppeteer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:787:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ppt" => %{Puppeteer},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:788:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "prc" => %{Process contact},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:788:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "prc" => %{Process contact},
               ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:789:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "prd" => %{Production personnel},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:789:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "prd" => %{Production personnel},
               ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:790:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "prf" => %{Performer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:790:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "prf" => %{Performer},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:791:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "prg" => %{Programmer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:791:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "prg" => %{Programmer},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:792:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "prm" => %{Printmaker},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:792:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "prm" => %{Printmaker},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:793:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "pro" => %{Producer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:793:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "pro" => %{Producer},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:794:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "prt" => %{Printer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:794:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "prt" => %{Printer},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:795:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "pta" => %{Patent applicant},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:795:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "pta" => %{Patent applicant},
               ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:796:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "pte" => %{Plaintiff-appellee},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:796:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "pte" => %{Plaintiff-appellee},
               ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:797:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ptf" => %{Plaintiff},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:797:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ptf" => %{Plaintiff},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:798:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "pth" => %{Patent holder},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:798:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "pth" => %{Patent holder},
               ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:799:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ptt" => %{Plaintiff-appellant},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:799:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ptt" => %{Plaintiff-appellant},
               ^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:800:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "rbr" => %{Rubricator},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:800:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "rbr" => %{Rubricator},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:801:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "rce" => %{Recording engineer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:801:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "rce" => %{Recording engineer},
               ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:802:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "rcp" => %{Recipient},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:802:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "rcp" => %{Recipient},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:803:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "red" => %{Redactor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:803:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "red" => %{Redactor},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:804:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ren" => %{Renderer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:804:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ren" => %{Renderer},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:805:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "res" => %{Researcher},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:805:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "res" => %{Researcher},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:806:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "rev" => %{Reviewer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:806:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "rev" => %{Reviewer},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:807:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "rps" => %{Repository},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:807:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "rps" => %{Repository},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:808:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "rpt" => %{Reporter},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:808:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "rpt" => %{Reporter},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:809:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "rpy" => %{Responsible party},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:809:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "rpy" => %{Responsible party},
               ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:810:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "rse" => %{Respondent-appellee},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:810:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "rse" => %{Respondent-appellee},
               ^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:811:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "rsg" => %{Restager},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:811:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "rsg" => %{Restager},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:812:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "rsp" => %{Respondent},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:812:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "rsp" => %{Respondent},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:813:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "rst" => %{Respondent-appellant},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:813:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "rst" => %{Respondent-appellant},
               ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:814:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "rth" => %{Research team head},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:814:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "rth" => %{Research team head},
               ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:815:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "rtm" => %{Research team member},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:815:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "rtm" => %{Research team member},
               ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:816:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "sad" => %{Scientific advisor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:816:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "sad" => %{Scientific advisor},
               ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:817:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "sce" => %{Scenarist},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:817:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "sce" => %{Scenarist},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:818:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "scl" => %{Sculptor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:818:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "scl" => %{Sculptor},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:819:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "scr" => %{Scribe},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:819:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "scr" => %{Scribe},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:820:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "sds" => %{Sound designer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:820:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "sds" => %{Sound designer},
               ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:821:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "sec" => %{Secretary},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:821:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "sec" => %{Secretary},
               ^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:822:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "sgn" => %{Signer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:822:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "sgn" => %{Signer},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:823:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "sht" => %{Supporting host},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:823:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "sht" => %{Supporting host},
               ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:824:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "sng" => %{Singer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:824:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "sng" => %{Singer},
               ^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:825:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "spk" => %{Speaker},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:825:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "spk" => %{Speaker},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:826:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "spn" => %{Sponsor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:826:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "spn" => %{Sponsor},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:827:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "spy" => %{Second party},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:827:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "spy" => %{Second party},
               ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:828:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "srv" => %{Surveyor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:828:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "srv" => %{Surveyor},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:829:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "std" => %{Set designer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:829:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "std" => %{Set designer},
               ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:830:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "stl" => %{Storyteller},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:830:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "stl" => %{Storyteller},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:831:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "stm" => %{Stage manager},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:831:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "stm" => %{Stage manager},
               ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:832:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "stn" => %{Standards body},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:832:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "stn" => %{Standards body},
               ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:833:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "str" => %{Stereotyper},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:833:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "str" => %{Stereotyper},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:834:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "tcd" => %{Technical director},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:834:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "tcd" => %{Technical director},
               ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:835:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "tch" => %{Teacher},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:835:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "tch" => %{Teacher},
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:836:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ths" => %{Thesis advisor},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:836:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "ths" => %{Thesis advisor},
               ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:837:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "trc" => %{Transcriber},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:837:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "trc" => %{Transcriber},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:838:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "trl" => %{Translator},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:838:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "trl" => %{Translator},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:839:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "tyd" => %{Type designer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:839:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "tyd" => %{Type designer},
               ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:840:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "tyg" => %{Typographer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:840:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "tyg" => %{Typographer},
               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:841:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "vdg" => %{Videographer},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:841:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "vdg" => %{Videographer},
               ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:842:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "voc" => %{Vocalist},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:842:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "voc" => %{Vocalist},
               ^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:843:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "wam" => %{Writer of accompanying material},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:843:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "wam" => %{Writer of accompanying material},
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:844:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "wdc" => %{Woodcutter},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:844:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "wdc" => %{Woodcutter},
               ^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:845:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "wde" => %{Wood-engraver},
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:845:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "wde" => %{Wood-engraver},
               ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:846:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "wit" => %{Witness}
      ^^^^^
marc_display/lib/marc_display/code_maps.rb:846:16: C: Style/PercentLiteralDelimiters: %-literals should be delimited by ( and ).
      "wit" => %{Witness}
               ^^^^^^^^^^
marc_display/lib/marc_display/code_maps.rb:848:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/code_maps.rb:850:4: C: Layout/TrailingEmptyLines: Final newline missing.
end

marc_display/lib/marc_display/default_presenters.rb:4:3: C: Metrics/ModuleLength: Module has too many lines. [462/100]
  module DefaultPresenters ...
  ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:5:71: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # in order to get our nice shortcut `marc_logic` method, we mix in
                                                                      ^
marc_display/lib/marc_display/default_presenters.rb:8:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/default_presenters.rb:15:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      SuggestedHeaderPresenterConfigList = [
  ^^^^
marc_display/lib/marc_display/default_presenters.rb:15:7: C: Layout/IndentationConsistency: Inconsistent indentation detected.
      SuggestedHeaderPresenterConfigList = [ ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:15:7: C: Naming/ConstantName: Use SCREAMING_SNAKE_CASE for constants.
      SuggestedHeaderPresenterConfigList = [
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:15:44: C: Style/MutableConstant: Freeze mutable objects assigned to constants.
      SuggestedHeaderPresenterConfigList = [ ...
                                           ^
marc_display/lib/marc_display/default_presenters.rb:19:91: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          #  #211 212 and 214 were in my legacy mappings, but dont' seem to actually exist
                                                                                          ^^^
marc_display/lib/marc_display/default_presenters.rb:22:11: C: Layout/LeadingCommentSpace: Missing space after #.
          #},
          ^^^
marc_display/lib/marc_display/default_presenters.rb:23:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/default_presenters.rb:25:64: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          # Includes a bunch of edition-related information too
                                                               ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:26:11: C: Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the start of the line where the left square bracket is.
          { :label => "Publication", ...
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:26:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "Publication",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:26:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "Publication",
                      ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:27:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :publication,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:28:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => ["260abcdefg", "261abedf", "262abckl", "264abc", "562abcde35", "250ab"],
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:28:24: C: Style/WordArray: Use %w or %W for an array of words.
            :source => ["260abcdefg", "261abedf", "262abckl", "264abc", "562abcde35", "250ab"],
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:28:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["260abcdefg", "261abedf", "262abckl", "264abc", "562abcde35", "250ab"],
                        ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:28:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["260abcdefg", "261abedf", "262abckl", "264abc", "562abcde35", "250ab"],
                                      ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:28:51: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["260abcdefg", "261abedf", "262abckl", "264abc", "562abcde35", "250ab"],
                                                  ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:28:63: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["260abcdefg", "261abedf", "262abckl", "264abc", "562abcde35", "250ab"],
                                                              ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:28:73: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["260abcdefg", "261abedf", "262abckl", "264abc", "562abcde35", "250ab"],
                                                                        ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:28:87: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["260abcdefg", "261abedf", "262abckl", "264abc", "562abcde35", "250ab"],
                                                                                      ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:29:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :prefix_map =>
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:29:27: C: Layout/TrailingWhitespace: Trailing whitespace detected.
            :prefix_map =>
                          ^
marc_display/lib/marc_display/default_presenters.rb:30:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              { "362" => "Publication history",
                ^^^^^
marc_display/lib/marc_display/default_presenters.rb:30:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              { "362" => "Publication history",
                         ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:31:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "362e" => "Manufactured",
                ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:31:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "362e" => "Manufactured",
                          ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:32:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "264" => lambda do |field|
                ^^^^^
marc_display/lib/marc_display/default_presenters.rb:33:25: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                            case field.indicator2
                        ^^^^
marc_display/lib/marc_display/default_presenters.rb:34:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            when "0" then "Production"
                                 ^^^
marc_display/lib/marc_display/default_presenters.rb:34:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            when "0" then "Production"
                                          ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:35:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            when "2" then "Distribution"
                                 ^^^
marc_display/lib/marc_display/default_presenters.rb:35:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            when "2" then "Distribution"
                                          ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:36:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            when "3" then "Manufacture"
                                 ^^^
marc_display/lib/marc_display/default_presenters.rb:36:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            when "3" then "Manufacture"
                                          ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:37:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            when "4" then "Copyright Notice"
                                 ^^^
marc_display/lib/marc_display/default_presenters.rb:37:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            when "4" then "Copyright Notice"
                                          ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:38:29: C: Style/EmptyElse: Redundant else-clause.
                            else nil
                            ^^^^
marc_display/lib/marc_display/default_presenters.rb:40:25: C: Layout/BlockAlignment: end at 40, 24 is not aligned with lambda do |field| at 32, 25 or "264" => lambda do |field| at 32, 16.
                        end,
                        ^^^
marc_display/lib/marc_display/default_presenters.rb:41:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "310" => lambda do |field|
                ^^^^^
marc_display/lib/marc_display/default_presenters.rb:41:43: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                "310" => lambda do |field|
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:42:27: C: Layout/IndentationWidth: Use 2 (not 12) spaces for indentation.
                                      "Frequency" +
                          ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:42:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                                      "Frequency" +
                                      ^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:43:39: C: Layout/MultilineOperationIndentation: Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
                                      (field['b'] ? " (#{field['b']})" : "")
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:43:74: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                                      (field['b'] ? " (#{field['b']})" : "")
                                                                         ^^
marc_display/lib/marc_display/default_presenters.rb:44:27: C: Layout/BlockAlignment: end at 44, 26 is not aligned with lambda do |field|                                     at 41, 25 or "310" => lambda do |field|                                     at 41, 16.
                          end,
                          ^^^
marc_display/lib/marc_display/default_presenters.rb:45:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "321" => lambda do |field|
                ^^^^^
marc_display/lib/marc_display/default_presenters.rb:46:27: C: Layout/IndentationWidth: Use 2 (not 12) spaces for indentation.
                                      "Former frequency" +
                          ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:46:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                                      "Former frequency" +
                                      ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:47:39: C: Layout/MultilineOperationIndentation: Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
                                      (field['b'] ? " (#{field['b']})" : "")
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:47:74: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                                      (field['b'] ? " (#{field['b']})" : "")
                                                                         ^^
marc_display/lib/marc_display/default_presenters.rb:48:27: C: Layout/BlockAlignment: end at 48, 26 is not aligned with lambda do |field| at 45, 25 or "321" => lambda do |field| at 45, 16.
                          end,
                          ^^^
marc_display/lib/marc_display/default_presenters.rb:49:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "562" => marc_logic(:prefix_with_3),
                ^^^^^
marc_display/lib/marc_display/default_presenters.rb:49:53: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                "562" => marc_logic(:prefix_with_3),
                                                    ^
marc_display/lib/marc_display/default_presenters.rb:50:17: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                "533"=> marc_logic(:prefix_with_3, ...
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:50:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "533"=> marc_logic(:prefix_with_3,
                ^^^^^
marc_display/lib/marc_display/default_presenters.rb:50:22: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                "533"=> marc_logic(:prefix_with_3,
                     ^^
marc_display/lib/marc_display/default_presenters.rb:51:25: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
                        :prefix => "Reproduction",  ...
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:51:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                        :prefix => "Reproduction",
                        ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:51:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                        :prefix => "Reproduction",
                                   ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:51:51: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                        :prefix => "Reproduction",
                                                  ^
marc_display/lib/marc_display/default_presenters.rb:52:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                        :force_prefix => true,
                        ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:52:47: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                        :force_prefix => true,
                                              ^
marc_display/lib/marc_display/default_presenters.rb:53:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                        :linking_text => " of "),
                        ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:53:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                        :linking_text => " of "),
                                         ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:54:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "534" => lambda do |field|
                ^^^^^
marc_display/lib/marc_display/default_presenters.rb:55:17: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                    field['p'].try {|s| s.chomp(":")} || "Reproduced from"
                ^^^^
marc_display/lib/marc_display/default_presenters.rb:55:36: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
                    field['p'].try {|s| s.chomp(":")} || "Reproduced from"
                                   ^^
marc_display/lib/marc_display/default_presenters.rb:55:49: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                    field['p'].try {|s| s.chomp(":")} || "Reproduced from"
                                                ^^^
marc_display/lib/marc_display/default_presenters.rb:55:53: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
                    field['p'].try {|s| s.chomp(":")} || "Reproduced from"
                                                    ^
marc_display/lib/marc_display/default_presenters.rb:55:58: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                    field['p'].try {|s| s.chomp(":")} || "Reproduced from"
                                                         ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:55:75: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                    field['p'].try {|s| s.chomp(":")} || "Reproduced from"
                                                                          ^
marc_display/lib/marc_display/default_presenters.rb:57:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "534z" => "ISBN",
                ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:57:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "534z" => "ISBN",
                          ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:58:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "534n" => "note"
                ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:58:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "534n" => "note"
                          ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:59:15: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
              },
              ^
marc_display/lib/marc_display/default_presenters.rb:60:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :formatter_map => {"260c" => marc_logic(:format_260c), "260a" => marc_logic(:format_aacr2_abbrev), "260b" => marc_logic(:format_aacr2_abbrev), "310a" => marc_logic(:format_strip_edge_punctuation), "321a" => marc_logic(:format_strip_edge_punctuation)}
            ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:60:31: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :formatter_map => {"260c" => marc_logic(:format_260c), "260a" => marc_logic(:format_aacr2_abbrev), "260b" => marc_logic(:format_aacr2_abbrev), "310a" => marc_logic(:format_strip_edge_punctuation), "321a" => marc_logic(:format_strip_edge_punctuation)}
                              ^
marc_display/lib/marc_display/default_presenters.rb:60:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :formatter_map => {"260c" => marc_logic(:format_260c), "260a" => marc_logic(:format_aacr2_abbrev), "260b" => marc_logic(:format_aacr2_abbrev), "310a" => marc_logic(:format_strip_edge_punctuation), "321a" => marc_logic(:format_strip_edge_punctuation)}
                               ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:60:68: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :formatter_map => {"260c" => marc_logic(:format_260c), "260a" => marc_logic(:format_aacr2_abbrev), "260b" => marc_logic(:format_aacr2_abbrev), "310a" => marc_logic(:format_strip_edge_punctuation), "321a" => marc_logic(:format_strip_edge_punctuation)}
                                                                   ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:60:112: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :formatter_map => {"260c" => marc_logic(:format_260c), "260a" => marc_logic(:format_aacr2_abbrev), "260b" => marc_logic(:format_aacr2_abbrev), "310a" => marc_logic(:format_strip_edge_punctuation), "321a" => marc_logic(:format_strip_edge_punctuation)}
                                                                                                               ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:60:121: C: Layout/LineLength: Line is too long. [262/120]
            :formatter_map => {"260c" => marc_logic(:format_260c), "260a" => marc_logic(:format_aacr2_abbrev), "260b" => marc_logic(:format_aacr2_abbrev), "310a" => marc_logic(:format_strip_edge_punctuation), "321a" => marc_logic(:format_strip_edge_punctuation)}
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:60:156: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :formatter_map => {"260c" => marc_logic(:format_260c), "260a" => marc_logic(:format_aacr2_abbrev), "260b" => marc_logic(:format_aacr2_abbrev), "310a" => marc_logic(:format_strip_edge_punctuation), "321a" => marc_logic(:format_strip_edge_punctuation)}
                                                                                                                                                           ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:60:210: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :formatter_map => {"260c" => marc_logic(:format_260c), "260a" => marc_logic(:format_aacr2_abbrev), "260b" => marc_logic(:format_aacr2_abbrev), "310a" => marc_logic(:format_strip_edge_punctuation), "321a" => marc_logic(:format_strip_edge_punctuation)}
                                                                                                                                                                                                                 ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:60:262: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
            :formatter_map => {"260c" => marc_logic(:format_260c), "260a" => marc_logic(:format_aacr2_abbrev), "260b" => marc_logic(:format_aacr2_abbrev), "310a" => marc_logic(:format_strip_edge_punctuation), "321a" => marc_logic(:format_strip_edge_punctuation)}
                                                                                                                                                                                                                                                                     ^
marc_display/lib/marc_display/default_presenters.rb:61:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:65:23: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          # right now.
                      ^
marc_display/lib/marc_display/default_presenters.rb:66:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "Format",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:66:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "Format",
                      ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:67:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :format,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:68:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => [
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:68:25: C: Layout/TrailingWhitespace: Trailing whitespace detected.
            :source => [
                        ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:70:50: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                  # we're generating and showing.
                                                 ^
marc_display/lib/marc_display/default_presenters.rb:71:19: C: Layout/LeadingCommentSpace: Missing space after #.
                  #{:load_marc => "245h"},
                  ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:72:19: C: Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the start of the line where the left square bracket is.
                  "300abcefg",
                  ^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:72:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  "300abcefg",
                  ^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:72:31: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                  "300abcefg",
                              ^
marc_display/lib/marc_display/default_presenters.rb:73:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  "305abcdef",
                  ^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:73:31: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                  "305abcdef",
                              ^
marc_display/lib/marc_display/default_presenters.rb:74:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  "340abcdefhi",
                  ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:75:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  "256a",
                  ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:76:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  "245k",
                  ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:76:26: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                  "245k",
                         ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:77:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  "753a",
                  ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:77:26: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                  "753a",
                         ^
marc_display/lib/marc_display/default_presenters.rb:78:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  "516a",
                  ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:78:26: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                  "516a",
                         ^
marc_display/lib/marc_display/default_presenters.rb:79:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  "538ai3"
                  ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:80:14: C: Layout/FirstArrayElementIndentation: Indent the right bracket the same as the start of the line where the left bracket is.
             ],
             ^
marc_display/lib/marc_display/default_presenters.rb:81:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :prefix_map => {
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:81:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
            :prefix_map => {
                            ^^
marc_display/lib/marc_display/default_presenters.rb:82:17: C: Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
                "340" => marc_logic(:prefix_with_3),
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:82:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "340" => marc_logic(:prefix_with_3),
                ^^^^^
marc_display/lib/marc_display/default_presenters.rb:83:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "300" => marc_logic(:prefix_with_3),
                ^^^^^
marc_display/lib/marc_display/default_presenters.rb:83:53: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                "300" => marc_logic(:prefix_with_3),
                                                    ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:84:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "300e" => "Accompanied by"
                ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:84:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "300e" => "Accompanied by"
                          ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:86:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :formatter_map => {
            ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:87:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "300a" => marc_logic(:format_aacr2_abbrev),
              ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:88:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "300b" => marc_logic(:format_aacr2_abbrev),
              ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:89:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "300e" => marc_logic(:format_aacr2_abbrev),
              ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:90:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "245h" => marc_logic(:format_245h)
              ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:90:49: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              "245h" => marc_logic(:format_245h)
                                                ^
marc_display/lib/marc_display/default_presenters.rb:92:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          }
          ^
marc_display/lib/marc_display/default_presenters.rb:93:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      ]
       ^^^^
marc_display/lib/marc_display/default_presenters.rb:98:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/default_presenters.rb:99:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      DefaultPresenterConfigList =  [
  ^^^^
marc_display/lib/marc_display/default_presenters.rb:99:7: C: Layout/IndentationConsistency: Inconsistent indentation detected.
      DefaultPresenterConfigList =  [ ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:99:7: C: Naming/ConstantName: Use SCREAMING_SNAKE_CASE for constants.
      DefaultPresenterConfigList =  [
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:99:34: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
      DefaultPresenterConfigList =  [
                                 ^
marc_display/lib/marc_display/default_presenters.rb:99:35: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      DefaultPresenterConfigList =  [
                                  ^
marc_display/lib/marc_display/default_presenters.rb:99:37: C: Style/MutableConstant: Freeze mutable objects assigned to constants.
      DefaultPresenterConfigList =  [ ...
                                    ^
marc_display/lib/marc_display/default_presenters.rb:100:11: C: Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the start of the line where the left square bracket is.
          { :label => "This reproduction", ...
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:100:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "This reproduction",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:100:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "This reproduction",
                      ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:101:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :reproduction,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:102:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => ["533abcdefmn", "534abcefklmntxz"],
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:102:24: C: Style/WordArray: Use %w or %W for an array of words.
            :source => ["533abcdefmn", "534abcefklmntxz"],
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:102:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["533abcdefmn", "534abcefklmntxz"],
                        ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:102:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["533abcdefmn", "534abcefklmntxz"],
                                       ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:103:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :prefix_map => {
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:104:17: C: Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
                "533"=> marc_logic(:prefix_with_3,                         ...
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:104:17: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                "533"=> marc_logic(:prefix_with_3,                         ...
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:104:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "533"=> marc_logic(:prefix_with_3,
                ^^^^^
marc_display/lib/marc_display/default_presenters.rb:104:22: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                "533"=> marc_logic(:prefix_with_3,
                     ^^
marc_display/lib/marc_display/default_presenters.rb:104:51: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                "533"=> marc_logic(:prefix_with_3,
                                                  ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:105:19: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
                  :linking_text => " of "),
                  ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:105:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :linking_text => " of "),
                  ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:105:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  :linking_text => " of "),
                                   ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:106:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "534" => lambda do |field|
                ^^^^^
marc_display/lib/marc_display/default_presenters.rb:107:17: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
                    field['p'].try {|s| s.chomp(":")} || "Reproduced from"
                ^^^^
marc_display/lib/marc_display/default_presenters.rb:107:36: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
                    field['p'].try {|s| s.chomp(":")} || "Reproduced from"
                                   ^^
marc_display/lib/marc_display/default_presenters.rb:107:49: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                    field['p'].try {|s| s.chomp(":")} || "Reproduced from"
                                                ^^^
marc_display/lib/marc_display/default_presenters.rb:107:53: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
                    field['p'].try {|s| s.chomp(":")} || "Reproduced from"
                                                    ^
marc_display/lib/marc_display/default_presenters.rb:107:58: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                    field['p'].try {|s| s.chomp(":")} || "Reproduced from"
                                                         ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:107:75: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                    field['p'].try {|s| s.chomp(":")} || "Reproduced from"
                                                                          ^
marc_display/lib/marc_display/default_presenters.rb:109:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "534z" => "ISBN",
                ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:109:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "534z" => "ISBN",
                          ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:110:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "534n" => "note"
                ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:110:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "534n" => "note"
                          ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:112:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:113:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "Publication history",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:113:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "Publication history",
                      ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:114:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :publication_history,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:115:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => ["310a", "321a", "362a"],
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:115:24: C: Style/WordArray: Use %w or %W for an array of words.
            :source => ["310a", "321a", "362a"],
                       ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:115:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["310a", "321a", "362a"],
                        ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:115:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["310a", "321a", "362a"],
                                ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:115:41: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["310a", "321a", "362a"],
                                        ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:116:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :prefix_map => {
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:117:17: C: Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
                "310" => lambda do |field|                                     ...
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:117:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "310" => lambda do |field|
                ^^^^^
marc_display/lib/marc_display/default_presenters.rb:117:43: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                "310" => lambda do |field|
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:118:27: C: Layout/IndentationWidth: Use 2 (not 12) spaces for indentation.
                                      "Frequency" +
                          ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:118:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                                      "Frequency" +
                                      ^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:119:39: C: Layout/MultilineOperationIndentation: Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
                                      (field['b'] ? " (#{field['b']})" : "")
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:119:74: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                                      (field['b'] ? " (#{field['b']})" : "")
                                                                         ^^
marc_display/lib/marc_display/default_presenters.rb:120:27: C: Layout/BlockAlignment: end at 120, 26 is not aligned with lambda do |field|                                     at 117, 25 or "310" => lambda do |field|                                     at 117, 16.
                          end,
                          ^^^
marc_display/lib/marc_display/default_presenters.rb:121:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "321" => lambda do |field|
                ^^^^^
marc_display/lib/marc_display/default_presenters.rb:122:27: C: Layout/IndentationWidth: Use 2 (not 12) spaces for indentation.
                                      "Former frequency" +
                          ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:122:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                                      "Former frequency" +
                                      ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:123:39: C: Layout/MultilineOperationIndentation: Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
                                      (field['b'] ? " (#{field['b']})" : "")
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:123:74: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                                      (field['b'] ? " (#{field['b']})" : "")
                                                                         ^^
marc_display/lib/marc_display/default_presenters.rb:124:27: C: Layout/BlockAlignment: end at 124, 26 is not aligned with lambda do |field| at 121, 25 or "321" => lambda do |field| at 121, 16.
                          end,
                          ^^^
marc_display/lib/marc_display/default_presenters.rb:125:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "362e" => "Manufactured"
                ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:125:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                "362e" => "Manufactured"
                          ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:127:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:128:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "Related Links",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:128:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "Related Links",
                      ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:129:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :links,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:130:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => ["856uzy3"],
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:130:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["856uzy3"],
                        ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:131:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :partial => "marc_display/marc_856"
            ^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:131:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :partial => "marc_display/marc_856"
                        ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:132:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:135:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "Also known as",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:135:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "Also known as",
                      ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:136:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :other_titles,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:137:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => [  { :load_marc => "130adfghklmnoprst", # uniform title
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:137:25: C: Layout/ExtraSpacing: Unnecessary spacing detected.
            :source => [  { :load_marc => "130adfghklmnoprst", # uniform title
                        ^
marc_display/lib/marc_display/default_presenters.rb:137:25: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
            :source => [  { :load_marc => "130adfghklmnoprst", # uniform title
                        ^^
marc_display/lib/marc_display/default_presenters.rb:137:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => [  { :load_marc => "130adfghklmnoprst", # uniform title
                            ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:137:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => [  { :load_marc => "130adfghklmnoprst", # uniform title
                                          ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:138:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => { :phrase_search => true,
                            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:138:40: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => { :phrase_search => true,
                                       ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:138:63: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                            :link => { :phrase_search => true,
                                                              ^
marc_display/lib/marc_display/default_presenters.rb:139:40: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                       :query_field => "title"}
                                       ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:139:56: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                                       :query_field => "title"}
                                                       ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:139:63: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                                       :query_field => "title"}
                                                              ^
marc_display/lib/marc_display/default_presenters.rb:140:27: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                          },
                          ^
marc_display/lib/marc_display/default_presenters.rb:141:27: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                          {:load_marc => "240adfghklmnoprs", # uniform title
                          ^
marc_display/lib/marc_display/default_presenters.rb:141:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          {:load_marc => "240adfghklmnoprs", # uniform title
                           ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:141:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          {:load_marc => "240adfghklmnoprs", # uniform title
                                         ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:142:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :link =>
                           ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:142:36: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                           :link =>
                                   ^
marc_display/lib/marc_display/default_presenters.rb:143:33: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                              { :phrase_search => true,
                                ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:144:33: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                                :custom =>  marc_logic(:link_add_main_entry)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:144:33: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                :custom =>  marc_logic(:link_add_main_entry)
                                ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:145:31: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                              }
                              ^
marc_display/lib/marc_display/default_presenters.rb:146:28: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                           },
                           ^
marc_display/lib/marc_display/default_presenters.rb:147:28: C: Layout/CommentIndentation: Incorrect indentation detected (column 27 instead of 26).
                           # collective uniform title. Deprecated:
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:147:67: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                           # collective uniform title. Deprecated:
                                                                  ^
marc_display/lib/marc_display/default_presenters.rb:148:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          { :load_marc => "243adfghklmnoprs",
                            ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:148:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          { :load_marc => "243adfghklmnoprs",
                                          ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:149:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link =>
                            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:150:31: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                              {:phrase_search => true,
                              ^
marc_display/lib/marc_display/default_presenters.rb:150:32: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                              {:phrase_search => true,
                               ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:150:55: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                              {:phrase_search => true,
                                                      ^
marc_display/lib/marc_display/default_presenters.rb:151:31: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                              :custom => marc_logic(:link_add_main_entry)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:151:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                              :custom => marc_logic(:link_add_main_entry)
                              ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:152:31: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                              }
                              ^
marc_display/lib/marc_display/default_presenters.rb:153:27: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                          },
                          ^
marc_display/lib/marc_display/default_presenters.rb:154:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "210ab", # Abbreviated title
                          ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:155:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "222ab", # (Serial) key title
                          ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:156:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "242abcehnp", # Translated title
                          ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:157:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "740-*0ahnp", # Related title, second indicator 0 means 'alternative title'. Deprecated.
                          ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:157:115: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                          "740-*0ahnp", # Related title, second indicator 0 means 'alternative title'. Deprecated.
                                                                                                                  ^
marc_display/lib/marc_display/default_presenters.rb:158:27: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                          {:load_marc => "247abfgnpx", :link => {:query_field => "title", :subfields => "ab"}}, # Former title
                          ^
marc_display/lib/marc_display/default_presenters.rb:158:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          {:load_marc => "247abfgnpx", :link => {:query_field => "title", :subfields => "ab"}}, # Former title
                           ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:158:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          {:load_marc => "247abfgnpx", :link => {:query_field => "title", :subfields => "ab"}}, # Former title
                                         ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:158:56: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          {:load_marc => "247abfgnpx", :link => {:query_field => "title", :subfields => "ab"}}, # Former title
                                                       ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:158:65: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                          {:load_marc => "247abfgnpx", :link => {:query_field => "title", :subfields => "ab"}}, # Former title
                                                                ^
marc_display/lib/marc_display/default_presenters.rb:158:66: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          {:load_marc => "247abfgnpx", :link => {:query_field => "title", :subfields => "ab"}}, # Former title
                                                                 ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:158:82: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          {:load_marc => "247abfgnpx", :link => {:query_field => "title", :subfields => "ab"}}, # Former title
                                                                                 ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:158:91: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          {:load_marc => "247abfgnpx", :link => {:query_field => "title", :subfields => "ab"}}, # Former title
                                                                                          ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:158:105: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          {:load_marc => "247abfgnpx", :link => {:query_field => "title", :subfields => "ab"}}, # Former title
                                                                                                        ^^^^
marc_display/lib/marc_display/default_presenters.rb:158:109: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                          {:load_marc => "247abfgnpx", :link => {:query_field => "title", :subfields => "ab"}}, # Former title
                                                                                                            ^
marc_display/lib/marc_display/default_presenters.rb:158:110: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                          {:load_marc => "247abfgnpx", :link => {:query_field => "title", :subfields => "ab"}}, # Former title
                                                                                                             ^
marc_display/lib/marc_display/default_presenters.rb:158:121: C: Layout/LineLength: Line is too long. [126/120]
                          {:load_marc => "247abfgnpx", :link => {:query_field => "title", :subfields => "ab"}}, # Former title
                                                                                                                        ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:159:27: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                          {:load_marc => "246abfghnp"} # Varying form of title
                          ^
marc_display/lib/marc_display/default_presenters.rb:159:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          {:load_marc => "246abfghnp"} # Varying form of title
                           ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:159:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          {:load_marc => "246abfghnp"} # Varying form of title
                                         ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:159:54: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                          {:load_marc => "246abfghnp"} # Varying form of title
                                                     ^
marc_display/lib/marc_display/default_presenters.rb:160:24: C: Layout/MultilineArrayBraceLayout: The closing array brace must be on the same line as the last array element when the opening brace is on the same line as the first array element.
                       ],
                       ^
marc_display/lib/marc_display/default_presenters.rb:161:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :prefix_map => {"242" => lambda do |field|
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:161:28: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :prefix_map => {"242" => lambda do |field|
                           ^
marc_display/lib/marc_display/default_presenters.rb:161:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"242" => lambda do |field|
                            ^^^^^
marc_display/lib/marc_display/default_presenters.rb:162:74: C: Layout/SpaceInsideParens: Space inside parentheses detected.
                              MarcDisplayLogic.instance.format_marc_lang( field['y'] )
                                                                         ^
marc_display/lib/marc_display/default_presenters.rb:162:85: C: Layout/SpaceInsideParens: Space inside parentheses detected.
                              MarcDisplayLogic.instance.format_marc_lang( field['y'] )
                                                                                    ^
marc_display/lib/marc_display/default_presenters.rb:162:87: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                              MarcDisplayLogic.instance.format_marc_lang( field['y'] )
                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:162:121: C: Layout/LineLength: Line is too long. [124/120]
                              MarcDisplayLogic.instance.format_marc_lang( field['y'] )
                                                                                                                        ^^^^
marc_display/lib/marc_display/default_presenters.rb:163:29: C: Layout/BlockAlignment: end at 163, 28 is not aligned with lambda do |field| at 161, 37 or :prefix_map => {"242" => lambda do |field| at 161, 12.
                            end,
                            ^^^
marc_display/lib/marc_display/default_presenters.rb:164:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "247" => "Former title",
                            ^^^^^
marc_display/lib/marc_display/default_presenters.rb:164:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "247" => "Former title",
                                     ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:165:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "247x" => "ISSN",
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:165:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "247x" => "ISSN",
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:166:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "246" => marc_logic(:prefix_246),
                            ^^^^^
marc_display/lib/marc_display/default_presenters.rb:167:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "130" => "Uniform Title",
                            ^^^^^
marc_display/lib/marc_display/default_presenters.rb:167:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "130" => "Uniform Title",
                                     ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:168:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "240" => "Uniform Title",
                            ^^^^^
marc_display/lib/marc_display/default_presenters.rb:168:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "240" => "Uniform Title",
                                     ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:169:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "243" => "Uniform Title"
                            ^^^^^
marc_display/lib/marc_display/default_presenters.rb:169:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "243" => "Uniform Title"
                                     ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:170:29: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                            }
                            ^
marc_display/lib/marc_display/default_presenters.rb:171:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:174:40: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          # is present in top headline.
                                       ^
marc_display/lib/marc_display/default_presenters.rb:176:55: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          # work. (Analytic is contributor of course).
                                                      ^
marc_display/lib/marc_display/default_presenters.rb:178:81: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          # Link subfields match subfields in our indexing of author-name facet,
                                                                                ^
marc_display/lib/marc_display/default_presenters.rb:179:77: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          # so we're searching on what we think is the 'controlled heading'.
                                                                            ^
marc_display/lib/marc_display/default_presenters.rb:180:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "Related names",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:180:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "Related names",
                      ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:181:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :related_names,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:182:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => [ {  :load_marc => "100abcdfgjklmnopqrstu",
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:182:25: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
            :source => [ {  :load_marc => "100abcdfgjklmnopqrstu",
                        ^
marc_display/lib/marc_display/default_presenters.rb:182:27: C: Layout/ExtraSpacing: Unnecessary spacing detected.
            :source => [ {  :load_marc => "100abcdfgjklmnopqrstu",
                          ^
marc_display/lib/marc_display/default_presenters.rb:182:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => [ {  :load_marc => "100abcdfgjklmnopqrstu",
                            ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:182:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => [ {  :load_marc => "100abcdfgjklmnopqrstu",
                                          ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:183:28: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:183:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                           ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:183:37: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                                    ^
marc_display/lib/marc_display/default_presenters.rb:183:38: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                                     ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:183:54: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                                                     ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:183:64: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                                                               ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:183:88: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                                                                                       ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:183:102: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                                                                                                     ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:184:26: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                         },
                         ^
marc_display/lib/marc_display/default_presenters.rb:184:28: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                         },
                           ^
marc_display/lib/marc_display/default_presenters.rb:185:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                         { :load_marc => "110abcdfgjklmnopqrstu",
                           ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:185:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                         { :load_marc => "110abcdfgjklmnopqrstu",
                                         ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:186:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                           ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:186:37: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                                    ^
marc_display/lib/marc_display/default_presenters.rb:186:38: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                                     ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:186:54: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                                                     ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:186:64: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                                                               ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:186:88: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                                                                                       ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:186:102: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                                                                                                     ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:187:26: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                         },
                         ^
marc_display/lib/marc_display/default_presenters.rb:188:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                         { :load_marc => "111acdefgklnpqstu",
                           ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:188:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                         { :load_marc => "111acdefgklnpqstu",
                                         ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:189:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                           ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:189:37: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                                    ^
marc_display/lib/marc_display/default_presenters.rb:189:38: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                                     ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:189:54: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                                                     ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:189:64: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                                                               ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:189:88: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                                                                                       ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:189:102: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                                                                                                     ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:189:113: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                                                                                                                ^
marc_display/lib/marc_display/default_presenters.rb:190:26: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                         },
                         ^
marc_display/lib/marc_display/default_presenters.rb:190:28: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                         },
                           ^
marc_display/lib/marc_display/default_presenters.rb:191:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                         { :load_marc => "700abcdjq",
                           ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:191:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                         { :load_marc => "700abcdjq",
                                         ^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:192:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                           ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:192:37: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                                    ^
marc_display/lib/marc_display/default_presenters.rb:192:38: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                                     ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:192:54: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                                                     ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:192:64: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                                                               ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:192:88: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                                                                                       ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:192:102: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                           :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdq" }
                                                                                                     ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:193:26: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                         },
                         ^
marc_display/lib/marc_display/default_presenters.rb:194:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                         {  :load_marc => "710abcd",
                            ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:194:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                         {  :load_marc => "710abcd",
                                          ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:195:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:195:38: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                            :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                                     ^
marc_display/lib/marc_display/default_presenters.rb:195:39: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                                      ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:195:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                                                      ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:195:65: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                                                                ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:195:89: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                                                                                        ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:195:103: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            :link => {:query_field => "author", :phrase_search => true, :subfields => "abcdgnu" }
                                                                                                      ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:196:26: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                         },
                         ^
marc_display/lib/marc_display/default_presenters.rb:196:28: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                         },
                           ^
marc_display/lib/marc_display/default_presenters.rb:197:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                         {  :load_marc => "711acdenqu",
                            ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:197:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                         {  :load_marc => "711acdenqu",
                                          ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:198:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:198:38: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                            :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                                     ^
marc_display/lib/marc_display/default_presenters.rb:198:39: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                                      ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:198:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                                                      ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:198:65: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                                                                ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:198:89: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                                                                                        ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:198:103: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            :link => {:query_field => "author", :phrase_search => true, :subfields => "acdenqu" }
                                                                                                      ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:199:26: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                         },
                         ^
marc_display/lib/marc_display/default_presenters.rb:200:26: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                         {:load_marc => "720a", :link => {:query_field => "author", :phrase_search => true}},
                         ^
marc_display/lib/marc_display/default_presenters.rb:200:27: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                         {:load_marc => "720a", :link => {:query_field => "author", :phrase_search => true}},
                          ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:200:41: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                         {:load_marc => "720a", :link => {:query_field => "author", :phrase_search => true}},
                                        ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:200:49: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                         {:load_marc => "720a", :link => {:query_field => "author", :phrase_search => true}},
                                                ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:200:58: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                         {:load_marc => "720a", :link => {:query_field => "author", :phrase_search => true}},
                                                         ^
marc_display/lib/marc_display/default_presenters.rb:200:59: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                         {:load_marc => "720a", :link => {:query_field => "author", :phrase_search => true}},
                                                          ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:200:75: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                         {:load_marc => "720a", :link => {:query_field => "author", :phrase_search => true}},
                                                                          ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:200:85: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                         {:load_marc => "720a", :link => {:query_field => "author", :phrase_search => true}},
                                                                                    ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:200:107: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                         {:load_marc => "720a", :link => {:query_field => "author", :phrase_search => true}},
                                                                                                          ^
marc_display/lib/marc_display/default_presenters.rb:200:108: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                         {:load_marc => "720a", :link => {:query_field => "author", :phrase_search => true}},
                                                                                                           ^
marc_display/lib/marc_display/default_presenters.rb:200:110: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                         {:load_marc => "720a", :link => {:query_field => "author", :phrase_search => true}},
                                                                                                             ^
marc_display/lib/marc_display/default_presenters.rb:201:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                         { :load_marc => "191abcdfgjklmnopqrstu",
                           ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:201:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                         { :load_marc => "191abcdfgjklmnopqrstu",
                                         ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:201:66: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                         { :load_marc => "191abcdfgjklmnopqrstu",
                                                                 ^
marc_display/lib/marc_display/default_presenters.rb:202:28: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                           :link=> false }
                           ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:202:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                           :link=> false }
                           ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:202:33: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                           :link=> false }
                                ^^
marc_display/lib/marc_display/default_presenters.rb:203:25: C: Layout/MultilineArrayBraceLayout: The closing array brace must be on the same line as the last array element when the opening brace is on the same line as the first array element.
                        ],
                        ^
marc_display/lib/marc_display/default_presenters.rb:203:27: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                        ],
                          ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:204:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :prefix_map => {
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:205:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "100" => marc_logic(:prefix_heading, :materials => nil),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:205:52: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
              "100" => marc_logic(:prefix_heading, :materials => nil),
                                                   ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:205:71: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              "100" => marc_logic(:prefix_heading, :materials => nil),
                                                                      ^
marc_display/lib/marc_display/default_presenters.rb:206:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "110" => marc_logic(:prefix_heading, :materials => nil),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:206:52: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
              "110" => marc_logic(:prefix_heading, :materials => nil),
                                                   ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:207:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "111" => marc_logic(:prefix_heading, :materials => nil, :uncontrolled_relator => "j"),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:207:52: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
              "111" => marc_logic(:prefix_heading, :materials => nil, :uncontrolled_relator => "j"),
                                                   ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:207:71: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
              "111" => marc_logic(:prefix_heading, :materials => nil, :uncontrolled_relator => "j"),
                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:207:96: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "111" => marc_logic(:prefix_heading, :materials => nil, :uncontrolled_relator => "j"),
                                                                                               ^^^
marc_display/lib/marc_display/default_presenters.rb:208:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "700" => marc_logic(:prefix_heading),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:209:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "710" => marc_logic(:prefix_heading),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:210:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "711" => marc_logic(:prefix_heading, :uncontrolled_relator => "j"),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:210:52: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
              "711" => marc_logic(:prefix_heading, :uncontrolled_relator => "j"),
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:210:77: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "711" => marc_logic(:prefix_heading, :uncontrolled_relator => "j"),
                                                                            ^^^
marc_display/lib/marc_display/default_presenters.rb:211:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "720" => marc_logic(:prefix_heading, :materials => nil)
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:211:52: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
              "720" => marc_logic(:prefix_heading, :materials => nil)
                                                   ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:211:70: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              "720" => marc_logic(:prefix_heading, :materials => nil)
                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:213:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :unique => true
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:214:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:215:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "Credits",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:215:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "Credits",
                      ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:216:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :credits,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:217:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => "508a"},
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:217:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => "508a"},
                       ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:217:30: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
            :source => "508a"},
                             ^
marc_display/lib/marc_display/default_presenters.rb:218:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "Performers",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:218:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "Performers",
                      ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:219:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => "511a",
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:219:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => "511a",
                       ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:220:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :prefix_map =>
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:220:27: C: Layout/TrailingWhitespace: Trailing whitespace detected.
            :prefix_map =>
                          ^
marc_display/lib/marc_display/default_presenters.rb:221:15: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
              {"511" =>
              ^
marc_display/lib/marc_display/default_presenters.rb:221:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              {"511" =>
               ^^^^^
marc_display/lib/marc_display/default_presenters.rb:222:17: C: Style/Lambda: Use the -> { ... } lambda literal syntax for single line lambdas.
                lambda { |field| (field.indicator1 == "1") ? "Cast" : nil }
                ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:222:34: C: Style/TernaryParentheses: Omit parentheses for ternary conditions.
                lambda { |field| (field.indicator1 == "1") ? "Cast" : nil }
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:222:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                lambda { |field| (field.indicator1 == "1") ? "Cast" : nil }
                                                      ^^^
marc_display/lib/marc_display/default_presenters.rb:222:62: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                lambda { |field| (field.indicator1 == "1") ? "Cast" : nil }
                                                             ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:223:15: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
              }
              ^
marc_display/lib/marc_display/default_presenters.rb:223:16: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              }
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:224:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:225:48: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          # Also need to take care of 973. 79x.
                                               ^^
marc_display/lib/marc_display/default_presenters.rb:226:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "Related titles",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:226:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "Related titles",
                      ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:227:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :related_titles,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:228:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => ["700abcdfjklmnoprstux", "710abcdfklmnoprstux", "711abcdfklmnopqrstux", "730adfghklmnoprstx",
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:228:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["700abcdfjklmnoprstux", "710abcdfklmnoprstux", "711abcdfklmnopqrstux", "730adfghklmnoprstx",
                        ^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:228:49: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["700abcdfjklmnoprstux", "710abcdfklmnoprstux", "711abcdfklmnopqrstux", "730adfghklmnoprstx",
                                                ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:228:72: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["700abcdfjklmnoprstux", "710abcdfklmnoprstux", "711abcdfklmnopqrstux", "730adfghklmnoprstx",
                                                                       ^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:228:96: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["700abcdfjklmnoprstux", "710abcdfklmnoprstux", "711abcdfklmnopqrstux", "730adfghklmnoprstx",
                                                                                               ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:228:117: C: Layout/TrailingWhitespace: Trailing whitespace detected.
            :source => ["700abcdfjklmnoprstux", "710abcdfklmnoprstux", "711abcdfklmnopqrstux", "730adfghklmnoprstx",
                                                                                                                    ^
marc_display/lib/marc_display/default_presenters.rb:229:13: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
            {:load_marc => "740ahnp", ...
            ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:229:13: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            {:load_marc => "740ahnp",
            ^
marc_display/lib/marc_display/default_presenters.rb:229:14: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            {:load_marc => "740ahnp",
             ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:229:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            {:load_marc => "740ahnp",
                           ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:231:15: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
              :delete_if_filter => lambda {|field| field.indicator2 == '0'}
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:231:15: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
              :delete_if_filter => lambda {|field| field.indicator2 == '0'}
              ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:231:36: C: Style/Lambda: Use the -> { ... } lambda literal syntax for single line lambdas.
              :delete_if_filter => lambda {|field| field.indicator2 == '0'}
                                   ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:231:43: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
              :delete_if_filter => lambda {|field| field.indicator2 == '0'}
                                          ^^
marc_display/lib/marc_display/default_presenters.rb:231:75: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
              :delete_if_filter => lambda {|field| field.indicator2 == '0'}
                                                                          ^
marc_display/lib/marc_display/default_presenters.rb:232:13: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
            }, "773abcdghikmnoqrstuxyz3", "774abcdghikmnoqrstuxyz3", "786abcdghijkmnoprstuvxyz", "765abcdghikmnorrstuwxyz" "767abcdghikmnorrstuwxyz",
            ^
marc_display/lib/marc_display/default_presenters.rb:232:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            }, "773abcdghikmnoqrstuxyz3", "774abcdghikmnoqrstuxyz3", "786abcdghijkmnoprstuvxyz", "765abcdghikmnorrstuwxyz" "767abcdghikmnorrstuwxyz",
               ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:232:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            }, "773abcdghikmnoqrstuxyz3", "774abcdghikmnoqrstuxyz3", "786abcdghijkmnoprstuvxyz", "765abcdghikmnorrstuwxyz" "767abcdghikmnorrstuwxyz",
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:232:70: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            }, "773abcdghikmnoqrstuxyz3", "774abcdghikmnoqrstuxyz3", "786abcdghijkmnoprstuvxyz", "765abcdghikmnorrstuwxyz" "767abcdghikmnorrstuwxyz",
                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:232:98: W: Lint/ImplicitStringConcatenation: Combine "765abcdghikmnorrstuwxyz" and "767abcdghikmnorrstuwxyz" into a single string literal, rather than using implicit string concatenation. Or, if they were intended to be separate array elements, separate them with a comma.
            }, "773abcdghikmnoqrstuxyz3", "774abcdghikmnoqrstuxyz3", "786abcdghijkmnoprstuvxyz", "765abcdghikmnorrstuwxyz" "767abcdghikmnorrstuwxyz",
                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:232:98: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            }, "773abcdghikmnoqrstuxyz3", "774abcdghikmnoqrstuxyz3", "786abcdghijkmnoprstuvxyz", "765abcdghikmnorrstuwxyz" "767abcdghikmnorrstuwxyz",
                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:232:121: C: Layout/LineLength: Line is too long. [149/120]
            }, "773abcdghikmnoqrstuxyz3", "774abcdghikmnoqrstuxyz3", "786abcdghijkmnoprstuvxyz", "765abcdghikmnorrstuwxyz" "767abcdghikmnorrstuwxyz",
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:232:124: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            }, "773abcdghikmnoqrstuxyz3", "774abcdghikmnoqrstuxyz3", "786abcdghijkmnoprstuvxyz", "765abcdghikmnorrstuwxyz" "767abcdghikmnorrstuwxyz",
                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:233:13: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
            "787abcdghikmnorstuxyz"],
            ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:233:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            "787abcdghikmnorstuxyz"],
            ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:234:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :delete_if_filter_map => {"700" => marc_logic(:delete_if_no_t), "710" => marc_logic(:delete_if_no_t), "711" => marc_logic(:delete_if_no_t)},
            ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:234:38: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :delete_if_filter_map => {"700" => marc_logic(:delete_if_no_t), "710" => marc_logic(:delete_if_no_t), "711" => marc_logic(:delete_if_no_t)},
                                     ^
marc_display/lib/marc_display/default_presenters.rb:234:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :delete_if_filter_map => {"700" => marc_logic(:delete_if_no_t), "710" => marc_logic(:delete_if_no_t), "711" => marc_logic(:delete_if_no_t)},
                                      ^^^^^
marc_display/lib/marc_display/default_presenters.rb:234:77: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :delete_if_filter_map => {"700" => marc_logic(:delete_if_no_t), "710" => marc_logic(:delete_if_no_t), "711" => marc_logic(:delete_if_no_t)},
                                                                            ^^^^^
marc_display/lib/marc_display/default_presenters.rb:234:115: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :delete_if_filter_map => {"700" => marc_logic(:delete_if_no_t), "710" => marc_logic(:delete_if_no_t), "711" => marc_logic(:delete_if_no_t)},
                                                                                                                  ^^^^^
marc_display/lib/marc_display/default_presenters.rb:234:121: C: Layout/LineLength: Line is too long. [152/120]
            :delete_if_filter_map => {"700" => marc_logic(:delete_if_no_t), "710" => marc_logic(:delete_if_no_t), "711" => marc_logic(:delete_if_no_t)},
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:234:151: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
            :delete_if_filter_map => {"700" => marc_logic(:delete_if_no_t), "710" => marc_logic(:delete_if_no_t), "711" => marc_logic(:delete_if_no_t)},
                                                                                                                                                      ^
marc_display/lib/marc_display/default_presenters.rb:235:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :link => {:custom => marc_logic(:link_7xx)},
            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:235:22: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :link => {:custom => marc_logic(:link_7xx)},
                     ^
marc_display/lib/marc_display/default_presenters.rb:235:23: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :link => {:custom => marc_logic(:link_7xx)},
                      ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:235:55: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
            :link => {:custom => marc_logic(:link_7xx)},
                                                      ^
marc_display/lib/marc_display/default_presenters.rb:235:57: C: Layout/TrailingWhitespace: Trailing whitespace detected.
            :link => {:custom => marc_logic(:link_7xx)},
                                                        ^
marc_display/lib/marc_display/default_presenters.rb:236:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :prefix_map => {"700x" => "ISSN", "710x" => "ISSN", "711x" => "ISSN",
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:236:28: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :prefix_map => {"700x" => "ISSN", "710x" => "ISSN", "711x" => "ISSN",
                           ^
marc_display/lib/marc_display/default_presenters.rb:236:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"700x" => "ISSN", "710x" => "ISSN", "711x" => "ISSN",
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:236:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"700x" => "ISSN", "710x" => "ISSN", "711x" => "ISSN",
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:236:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"700x" => "ISSN", "710x" => "ISSN", "711x" => "ISSN",
                                              ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:236:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"700x" => "ISSN", "710x" => "ISSN", "711x" => "ISSN",
                                                        ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:236:65: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"700x" => "ISSN", "710x" => "ISSN", "711x" => "ISSN",
                                                                ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:236:75: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"700x" => "ISSN", "710x" => "ISSN", "711x" => "ISSN",
                                                                          ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:237:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "773x" => "ISSN", "772z" => "ISBN", "774x" => "ISSN",
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:237:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "773x" => "ISSN", "772z" => "ISBN", "774x" => "ISSN",
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:237:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "773x" => "ISSN", "772z" => "ISBN", "774x" => "ISSN",
                                              ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:237:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "773x" => "ISSN", "772z" => "ISBN", "774x" => "ISSN",
                                                        ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:237:65: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "773x" => "ISSN", "772z" => "ISBN", "774x" => "ISSN",
                                                                ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:237:75: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "773x" => "ISSN", "772z" => "ISBN", "774x" => "ISSN",
                                                                          ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:238:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "774z" => "ISBN", "786x" => "ISSN", "786z" => "ISBN",
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:238:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "774z" => "ISBN", "786x" => "ISSN", "786z" => "ISBN",
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:238:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "774z" => "ISBN", "786x" => "ISSN", "786z" => "ISBN",
                                              ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:238:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "774z" => "ISBN", "786x" => "ISSN", "786z" => "ISBN",
                                                        ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:238:65: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "774z" => "ISBN", "786x" => "ISSN", "786z" => "ISBN",
                                                                ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:238:75: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "774z" => "ISBN", "786x" => "ISSN", "786z" => "ISBN",
                                                                          ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:239:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "786y" => "CODEN","767x" => "ISSN", "767z"=>"ISBN",
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:239:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "786y" => "CODEN","767x" => "ISSN", "767z"=>"ISBN",
                                      ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:239:46: C: Layout/SpaceAfterComma: Space missing after comma.
                            "786y" => "CODEN","767x" => "ISSN", "767z"=>"ISBN",
                                             ^
marc_display/lib/marc_display/default_presenters.rb:239:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "786y" => "CODEN","767x" => "ISSN", "767z"=>"ISBN",
                                              ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:239:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "786y" => "CODEN","767x" => "ISSN", "767z"=>"ISBN",
                                                        ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:239:65: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "786y" => "CODEN","767x" => "ISSN", "767z"=>"ISBN",
                                                                ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:239:71: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                            "786y" => "CODEN","767x" => "ISSN", "767z"=>"ISBN",
                                                                      ^^
marc_display/lib/marc_display/default_presenters.rb:239:73: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "786y" => "CODEN","767x" => "ISSN", "767z"=>"ISBN",
                                                                        ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:240:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "765x" => "ISSN", "765z" => "ISBN", "787x" => "ISSN", "787z" => "ISBN", "730x" => "ISSN",
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:240:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "765x" => "ISSN", "765z" => "ISBN", "787x" => "ISSN", "787z" => "ISBN", "730x" => "ISSN",
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:240:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "765x" => "ISSN", "765z" => "ISBN", "787x" => "ISSN", "787z" => "ISBN", "730x" => "ISSN",
                                              ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:240:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "765x" => "ISSN", "765z" => "ISBN", "787x" => "ISSN", "787z" => "ISBN", "730x" => "ISSN",
                                                        ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:240:65: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "765x" => "ISSN", "765z" => "ISBN", "787x" => "ISSN", "787z" => "ISBN", "730x" => "ISSN",
                                                                ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:240:75: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "765x" => "ISSN", "765z" => "ISBN", "787x" => "ISSN", "787z" => "ISBN", "730x" => "ISSN",
                                                                          ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:240:83: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "765x" => "ISSN", "765z" => "ISBN", "787x" => "ISSN", "787z" => "ISBN", "730x" => "ISSN",
                                                                                  ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:240:93: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "765x" => "ISSN", "765z" => "ISBN", "787x" => "ISSN", "787z" => "ISBN", "730x" => "ISSN",
                                                                                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:240:101: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "765x" => "ISSN", "765z" => "ISBN", "787x" => "ISSN", "787z" => "ISBN", "730x" => "ISSN",
                                                                                                    ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:240:111: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "765x" => "ISSN", "765z" => "ISBN", "787x" => "ISSN", "787z" => "ISBN", "730x" => "ISSN",
                                                                                                              ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:241:23: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                      "700" => lambda {|f| "Includes" if f.indicator2 =='2'},
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:241:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      "700" => lambda {|f| "Includes" if f.indicator2 =='2'},
                      ^^^^^
marc_display/lib/marc_display/default_presenters.rb:241:32: C: Style/Lambda: Use the -> { ... } lambda literal syntax for single line lambdas.
                      "700" => lambda {|f| "Includes" if f.indicator2 =='2'},
                               ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:241:39: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
                      "700" => lambda {|f| "Includes" if f.indicator2 =='2'},
                                      ^^
marc_display/lib/marc_display/default_presenters.rb:241:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      "700" => lambda {|f| "Includes" if f.indicator2 =='2'},
                                           ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:241:71: C: Layout/SpaceAroundOperators: Surrounding space missing for operator ==.
                      "700" => lambda {|f| "Includes" if f.indicator2 =='2'},
                                                                      ^^
marc_display/lib/marc_display/default_presenters.rb:241:76: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
                      "700" => lambda {|f| "Includes" if f.indicator2 =='2'},
                                                                           ^
marc_display/lib/marc_display/default_presenters.rb:242:23: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                      "710" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:242:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      "710" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                      ^^^^^
marc_display/lib/marc_display/default_presenters.rb:242:33: C: Style/Lambda: Use the -> { ... } lambda literal syntax for single line lambdas.
                      "710" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                                ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:242:40: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
                      "710" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                                       ^^
marc_display/lib/marc_display/default_presenters.rb:242:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      "710" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                                            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:242:72: C: Layout/SpaceAroundOperators: Surrounding space missing for operator ==.
                      "710" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                                                                       ^^
marc_display/lib/marc_display/default_presenters.rb:242:77: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
                      "710" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                                                                            ^
marc_display/lib/marc_display/default_presenters.rb:243:23: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                      "711" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:243:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      "711" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                      ^^^^^
marc_display/lib/marc_display/default_presenters.rb:243:33: C: Style/Lambda: Use the -> { ... } lambda literal syntax for single line lambdas.
                      "711" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                                ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:243:40: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
                      "711" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                                       ^^
marc_display/lib/marc_display/default_presenters.rb:243:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      "711" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                                            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:243:72: C: Layout/SpaceAroundOperators: Surrounding space missing for operator ==.
                      "711" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                                                                       ^^
marc_display/lib/marc_display/default_presenters.rb:243:77: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
                      "711" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                                                                            ^
marc_display/lib/marc_display/default_presenters.rb:244:23: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                      "740" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:244:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      "740" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                      ^^^^^
marc_display/lib/marc_display/default_presenters.rb:244:33: C: Style/Lambda: Use the -> { ... } lambda literal syntax for single line lambdas.
                      "740" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                                ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:244:40: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
                      "740" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                                       ^^
marc_display/lib/marc_display/default_presenters.rb:244:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      "740" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                                            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:244:72: C: Layout/SpaceAroundOperators: Surrounding space missing for operator ==.
                      "740" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                                                                       ^^
marc_display/lib/marc_display/default_presenters.rb:244:77: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
                      "740" =>  lambda {|f| "Includes" if f.indicator2 =='2'},
                                                                            ^
marc_display/lib/marc_display/default_presenters.rb:245:23: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                      "773" => "In",
                      ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:245:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      "773" => "In",
                      ^^^^^
marc_display/lib/marc_display/default_presenters.rb:245:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      "773" => "In",
                               ^^^^
marc_display/lib/marc_display/default_presenters.rb:246:23: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                      "774" => "Includes",
                      ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:246:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      "774" => "Includes",
                      ^^^^^
marc_display/lib/marc_display/default_presenters.rb:246:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      "774" => "Includes",
                               ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:247:23: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                      "786" => "Data source",
                      ^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:247:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      "786" => "Data source",
                      ^^^^^
marc_display/lib/marc_display/default_presenters.rb:247:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      "786" => "Data source",
                               ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:248:23: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                      "767" => "Translation",
                      ^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:248:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      "767" => "Translation",
                      ^^^^^
marc_display/lib/marc_display/default_presenters.rb:248:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      "767" => "Translation",
                               ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:249:23: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                      "765" => "Original language"}
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:249:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      "765" => "Original language"}
                      ^^^^^
marc_display/lib/marc_display/default_presenters.rb:249:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      "765" => "Original language"}
                               ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:249:51: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                      "765" => "Original language"}
                                                  ^
marc_display/lib/marc_display/default_presenters.rb:249:52: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                      "765" => "Original language"}
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:250:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:251:11: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
          {:label => "Former title",
          ^
marc_display/lib/marc_display/default_presenters.rb:251:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          {:label => "Former title",
           ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:251:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          {:label => "Former title",
                     ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:252:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
           :id => :former_title,
           ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:253:12: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
           :source=>"780abcdghikmnorstuxyz",
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:253:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
           :source=>"780abcdghikmnorstuxyz",
           ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:253:19: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
           :source=>"780abcdghikmnorstuxyz",
                  ^^
marc_display/lib/marc_display/default_presenters.rb:253:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
           :source=>"780abcdghikmnorstuxyz",
                    ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:254:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
           :prefix_map => {"780x" => "ISSN", "780z" => "ISBN",
           ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:254:27: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
           :prefix_map => {"780x" => "ISSN", "780z" => "ISBN",
                          ^
marc_display/lib/marc_display/default_presenters.rb:254:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
           :prefix_map => {"780x" => "ISSN", "780z" => "ISBN",
                           ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:254:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
           :prefix_map => {"780x" => "ISSN", "780z" => "ISBN",
                                     ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:254:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
           :prefix_map => {"780x" => "ISSN", "780z" => "ISBN",
                                             ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:254:56: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
           :prefix_map => {"780x" => "ISSN", "780z" => "ISBN",
                                                       ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:254:63: C: Layout/TrailingWhitespace: Trailing whitespace detected.
           :prefix_map => {"780x" => "ISSN", "780z" => "ISBN",
                                                              ^
marc_display/lib/marc_display/default_presenters.rb:255:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                           "780e" => "Language",
                           ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:255:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                           "780e" => "Language",
                                     ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:256:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                           "780" => marc_logic(:prefix_780)
                           ^^^^^
marc_display/lib/marc_display/default_presenters.rb:257:27: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                          },
                          ^
marc_display/lib/marc_display/default_presenters.rb:258:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
           :formatter_map => {"780e" => marc_logic(:format_marc_lang) },
           ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:258:30: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
           :formatter_map => {"780e" => marc_logic(:format_marc_lang) },
                             ^
marc_display/lib/marc_display/default_presenters.rb:258:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
           :formatter_map => {"780e" => marc_logic(:format_marc_lang) },
                              ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:259:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
           :link => {:custom =>marc_logic(:link_7xx)}
           ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:259:21: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
           :link => {:custom =>marc_logic(:link_7xx)}
                    ^
marc_display/lib/marc_display/default_presenters.rb:259:22: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
           :link => {:custom =>marc_logic(:link_7xx)}
                     ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:259:30: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
           :link => {:custom =>marc_logic(:link_7xx)}
                             ^^
marc_display/lib/marc_display/default_presenters.rb:259:53: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
           :link => {:custom =>marc_logic(:link_7xx)}
                                                    ^
marc_display/lib/marc_display/default_presenters.rb:260:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:260:13: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          },
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:261:11: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
          {:label => "Later title",
          ^
marc_display/lib/marc_display/default_presenters.rb:261:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          {:label => "Later title",
           ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:261:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          {:label => "Later title",
                     ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:262:13: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
            :id => :later_title,
            ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:262:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :later_title,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:263:13: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
            :source => ["785abcdghikmnorstuxyz"],
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:263:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => ["785abcdghikmnorstuxyz"],
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:263:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["785abcdghikmnorstuxyz"],
                        ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:264:13: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
            :prefix_map => {"785x" => "ISSN", "785z" => "ISBN", ...
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:264:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :prefix_map => {"785x" => "ISSN", "785z" => "ISBN",
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:264:28: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :prefix_map => {"785x" => "ISSN", "785z" => "ISBN",
                           ^
marc_display/lib/marc_display/default_presenters.rb:264:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"785x" => "ISSN", "785z" => "ISBN",
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:264:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"785x" => "ISSN", "785z" => "ISBN",
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:264:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"785x" => "ISSN", "785z" => "ISBN",
                                              ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:264:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"785x" => "ISSN", "785z" => "ISBN",
                                                        ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:265:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "785e" => "Language",
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:265:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "785e" => "Language",
                                      ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:266:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "785" => marc_logic(:prefix_785)
                            ^^^^^
marc_display/lib/marc_display/default_presenters.rb:267:29: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                            },
                            ^
marc_display/lib/marc_display/default_presenters.rb:268:13: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
            :formatter_map => {"785e" => marc_logic(:format_marc_lang) },
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:268:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :formatter_map => {"785e" => marc_logic(:format_marc_lang) },
            ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:268:31: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :formatter_map => {"785e" => marc_logic(:format_marc_lang) },
                              ^
marc_display/lib/marc_display/default_presenters.rb:268:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :formatter_map => {"785e" => marc_logic(:format_marc_lang) },
                               ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:269:13: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
            :link => {:custom =>marc_logic(:link_7xx)}
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:269:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :link => {:custom =>marc_logic(:link_7xx)}
            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:269:22: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :link => {:custom =>marc_logic(:link_7xx)}
                     ^
marc_display/lib/marc_display/default_presenters.rb:269:23: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :link => {:custom =>marc_logic(:link_7xx)}
                      ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:269:31: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
            :link => {:custom =>marc_logic(:link_7xx)}
                              ^^
marc_display/lib/marc_display/default_presenters.rb:269:54: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
            :link => {:custom =>marc_logic(:link_7xx)}
                                                     ^
marc_display/lib/marc_display/default_presenters.rb:270:12: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
           },
           ^
marc_display/lib/marc_display/default_presenters.rb:271:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "Subjects",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:271:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "Subjects",
                      ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:272:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :subjects,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:273:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => [
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:274:17: C: Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the start of the line where the left square bracket is.
                { :load_marc => "600-*0abcdefghjklmnopqrstuvxyz24", ...
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:274:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                { :load_marc => "600-*0abcdefghjklmnopqrstuvxyz24",
                  ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:274:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                { :load_marc => "600-*0abcdefghjklmnopqrstuvxyz24",
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:275:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                  ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:275:28: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                           ^
marc_display/lib/marc_display/default_presenters.rb:275:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                            ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:275:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:275:56: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                                       ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:275:94: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                                                                             ^
marc_display/lib/marc_display/default_presenters.rb:275:95: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                                                                              ^
marc_display/lib/marc_display/default_presenters.rb:276:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                { :load_marc => "610-*0abcdefghklmnoprstuvxyz24",
                  ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:276:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                { :load_marc => "610-*0abcdefghklmnoprstuvxyz24",
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:277:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                  ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:277:28: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                           ^
marc_display/lib/marc_display/default_presenters.rb:277:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                            ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:277:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:277:56: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                                       ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:277:94: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                                                                             ^
marc_display/lib/marc_display/default_presenters.rb:277:95: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                                                                              ^
marc_display/lib/marc_display/default_presenters.rb:278:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                { :load_marc => "611-*0abcdefghklnpqstuvxyz24",
                  ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:278:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                { :load_marc => "611-*0abcdefghklnpqstuvxyz24",
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:279:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                  ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:279:28: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                           ^
marc_display/lib/marc_display/default_presenters.rb:279:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                            ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:279:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:279:56: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                                       ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:279:94: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                                                                             ^
marc_display/lib/marc_display/default_presenters.rb:279:95: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                                                                              ^
marc_display/lib/marc_display/default_presenters.rb:280:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                { :load_marc => "630-*0adfghklmnoprstvxyz2",
                  ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:280:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                { :load_marc => "630-*0adfghklmnoprstvxyz2",
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:281:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                  ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:281:28: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                           ^
marc_display/lib/marc_display/default_presenters.rb:281:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                            ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:281:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:281:56: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                                       ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:281:94: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                                                                             ^
marc_display/lib/marc_display/default_presenters.rb:281:95: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                                                                              ^
marc_display/lib/marc_display/default_presenters.rb:282:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                { :load_marc => "650-*0abcdevxyz2",
                  ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:282:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                { :load_marc => "650-*0abcdevxyz2",
                                ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:283:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                  ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:283:28: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                           ^
marc_display/lib/marc_display/default_presenters.rb:283:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                            ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:283:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:283:56: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                                       ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:283:94: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                                                                             ^
marc_display/lib/marc_display/default_presenters.rb:283:95: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}},
                                                                                              ^
marc_display/lib/marc_display/default_presenters.rb:284:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                { :load_marc => "650-*7abcdevxyz",
                  ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:284:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                { :load_marc => "650-*7abcdevxyz",
                                ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:285:19: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                  :link=>{:subfields=>"abcdexyz", :phrase_search=>true, :query_field=>"subject"}},
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:285:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link=>{:subfields=>"abcdexyz", :phrase_search=>true, :query_field=>"subject"}},
                  ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:285:24: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                  :link=>{:subfields=>"abcdexyz", :phrase_search=>true, :query_field=>"subject"}},
                       ^^
marc_display/lib/marc_display/default_presenters.rb:285:26: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                  :link=>{:subfields=>"abcdexyz", :phrase_search=>true, :query_field=>"subject"}},
                         ^
marc_display/lib/marc_display/default_presenters.rb:285:27: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link=>{:subfields=>"abcdexyz", :phrase_search=>true, :query_field=>"subject"}},
                          ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:285:37: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                  :link=>{:subfields=>"abcdexyz", :phrase_search=>true, :query_field=>"subject"}},
                                    ^^
marc_display/lib/marc_display/default_presenters.rb:285:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  :link=>{:subfields=>"abcdexyz", :phrase_search=>true, :query_field=>"subject"}},
                                      ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:285:51: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link=>{:subfields=>"abcdexyz", :phrase_search=>true, :query_field=>"subject"}},
                                                  ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:285:65: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                  :link=>{:subfields=>"abcdexyz", :phrase_search=>true, :query_field=>"subject"}},
                                                                ^^
marc_display/lib/marc_display/default_presenters.rb:285:73: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link=>{:subfields=>"abcdexyz", :phrase_search=>true, :query_field=>"subject"}},
                                                                        ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:285:85: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                  :link=>{:subfields=>"abcdexyz", :phrase_search=>true, :query_field=>"subject"}},
                                                                                    ^^
marc_display/lib/marc_display/default_presenters.rb:285:87: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  :link=>{:subfields=>"abcdexyz", :phrase_search=>true, :query_field=>"subject"}},
                                                                                      ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:285:96: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                  :link=>{:subfields=>"abcdexyz", :phrase_search=>true, :query_field=>"subject"}},
                                                                                               ^
marc_display/lib/marc_display/default_presenters.rb:285:97: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                  :link=>{:subfields=>"abcdexyz", :phrase_search=>true, :query_field=>"subject"}},
                                                                                                ^
marc_display/lib/marc_display/default_presenters.rb:286:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                { :load_marc => "651-*0avxyz",
                  ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:286:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                { :load_marc => "651-*0avxyz",
                                ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:287:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}}
                  ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:287:28: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}}
                           ^
marc_display/lib/marc_display/default_presenters.rb:287:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}}
                            ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:287:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}}
                                            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:287:56: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}}
                                                       ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:287:94: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}}
                                                                                             ^
marc_display/lib/marc_display/default_presenters.rb:287:95: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                  :link => {:query_field => "subject", :custom => marc_logic(:link_lcsh_subd)}}
                                                                                              ^
marc_display/lib/marc_display/default_presenters.rb:289:13: C: Layout/LeadingCommentSpace: Missing space after #.
            #emdash for LCSH display, plus handle $3
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:290:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :raw_prefix_map => marc_logic_map(:map_prefix_lcsh).merge({
            ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:291:15: C: Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
              "600" => marc_logic(:prefix_with_3),
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:291:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "600" => marc_logic(:prefix_with_3),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:291:51: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              "600" => marc_logic(:prefix_with_3),
                                                  ^
marc_display/lib/marc_display/default_presenters.rb:292:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "610" => marc_logic(:prefix_with_3),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:292:51: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              "610" => marc_logic(:prefix_with_3),
                                                  ^
marc_display/lib/marc_display/default_presenters.rb:293:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "611" => marc_logic(:prefix_with_3),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:293:51: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              "611" => marc_logic(:prefix_with_3),
                                                  ^
marc_display/lib/marc_display/default_presenters.rb:294:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "630" => marc_logic(:prefix_with_3),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:294:51: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              "630" => marc_logic(:prefix_with_3),
                                                  ^
marc_display/lib/marc_display/default_presenters.rb:295:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "650" => marc_logic(:prefix_with_3),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:295:51: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              "650" => marc_logic(:prefix_with_3),
                                                  ^
marc_display/lib/marc_display/default_presenters.rb:296:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "651" => marc_logic(:prefix_heading, :default_relator_logic => false)}),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:296:52: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
              "651" => marc_logic(:prefix_heading, :default_relator_logic => false)}),
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:296:84: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the line after the last hash element when opening brace is on a separate line from the first hash element.
              "651" => marc_logic(:prefix_heading, :default_relator_logic => false)}),
                                                                                   ^
marc_display/lib/marc_display/default_presenters.rb:296:84: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
              "651" => marc_logic(:prefix_heading, :default_relator_logic => false)}),
                                                                                   ^
marc_display/lib/marc_display/default_presenters.rb:296:86: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
              "651" => marc_logic(:prefix_heading, :default_relator_logic => false)}),
                                                                                     ^
marc_display/lib/marc_display/default_presenters.rb:297:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:298:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "Medical Subjects",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:298:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "Medical Subjects",
                      ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:299:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :medical_subjects,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:300:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :link => {:query_field => :subject, :custom => marc_logic(:link_lcsh_subd)},
            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:300:22: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :link => {:query_field => :subject, :custom => marc_logic(:link_lcsh_subd)},
                     ^
marc_display/lib/marc_display/default_presenters.rb:300:23: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :link => {:query_field => :subject, :custom => marc_logic(:link_lcsh_subd)},
                      ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:300:49: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :link => {:query_field => :subject, :custom => marc_logic(:link_lcsh_subd)},
                                                ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:300:87: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
            :link => {:query_field => :subject, :custom => marc_logic(:link_lcsh_subd)},
                                                                                      ^
marc_display/lib/marc_display/default_presenters.rb:301:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => "650-*2abcdevxyz23",
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:301:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => "650-*2abcdevxyz23",
                       ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:302:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :raw_prefix_map => marc_logic_map(:map_prefix_lcsh)
            ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:303:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:304:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "Local Subjects",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:304:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "Local Subjects",
                      ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:305:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :local_subjects,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:306:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :link => {:query_field => :subject, :custom => marc_logic(:link_lcsh_subd)},
            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:306:22: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :link => {:query_field => :subject, :custom => marc_logic(:link_lcsh_subd)},
                     ^
marc_display/lib/marc_display/default_presenters.rb:306:23: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :link => {:query_field => :subject, :custom => marc_logic(:link_lcsh_subd)},
                      ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:306:49: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :link => {:query_field => :subject, :custom => marc_logic(:link_lcsh_subd)},
                                                ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:306:87: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
            :link => {:query_field => :subject, :custom => marc_logic(:link_lcsh_subd)},
                                                                                      ^
marc_display/lib/marc_display/default_presenters.rb:307:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => [
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:308:14: C: Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the start of the line where the left square bracket is.
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
             ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:308:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
             ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:308:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
                           ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:308:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
                                       ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:308:52: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
                                                   ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:308:64: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
                                                               ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:308:79: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
                                                                              ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:308:93: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
                                                                                            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:308:104: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
                                                                                                       ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:308:113: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
                                                                                                                ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:308:121: C: Layout/LineLength: Line is too long. [312/120]
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:308:128: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
                                                                                                                               ^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:308:141: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
                                                                                                                                            ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:308:162: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:308:198: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
                                                                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:308:235: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
                                                                                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:308:265: C: Layout/SpaceAfterComma: Space missing after comma.
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
                                                                                                                                                                                                                                                                        ^
marc_display/lib/marc_display/default_presenters.rb:308:266: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
                                                                                                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:308:296: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
                                                                                                                                                                                                                                                                                                       ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:308:312: C: Layout/TrailingWhitespace: Trailing whitespace detected.
             "690abcdxyz", "691abxyz", "692abxyz", "693abxyz", "656akvxyz23", "657avxyz23", "652axyz", "653a6", "654abcvyz23", "658abcd26", "650-*4abcdevxyz23", "610-*4abcdefghklmnopqrstuvxyz234", "600-*4abcdefghjklmnopqrstuvxyz234", "611-*4acdefghklnpqstuvxyz234","630-*4adfghklmnoprstvxyz23", "651-*4avxyz236"
                                                                                                                                                                                                                                                                                                                       ^
marc_display/lib/marc_display/default_presenters.rb:310:13: C: Layout/LeadingCommentSpace: Missing space after #.
            #emdash for LCSH-style display, plus handle $3
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:311:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :raw_prefix_map => marc_logic_map(:map_prefix_lcsh).merge({
            ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:312:15: C: Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
              "600" => marc_logic(:prefix_with_3),
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:312:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "600" => marc_logic(:prefix_with_3),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:312:51: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              "600" => marc_logic(:prefix_with_3),
                                                  ^
marc_display/lib/marc_display/default_presenters.rb:313:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "610" => marc_logic(:prefix_with_3),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:313:51: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              "610" => marc_logic(:prefix_with_3),
                                                  ^
marc_display/lib/marc_display/default_presenters.rb:314:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "611" => marc_logic(:prefix_with_3),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:314:51: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              "611" => marc_logic(:prefix_with_3),
                                                  ^
marc_display/lib/marc_display/default_presenters.rb:315:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "630" => marc_logic(:prefix_with_3),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:315:51: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              "630" => marc_logic(:prefix_with_3),
                                                  ^
marc_display/lib/marc_display/default_presenters.rb:316:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "650" => marc_logic(:prefix_with_3),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:316:51: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              "650" => marc_logic(:prefix_with_3),
                                                  ^
marc_display/lib/marc_display/default_presenters.rb:317:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "651" => marc_logic(:prefix_heading, :default_relator_logic => false),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:317:52: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
              "651" => marc_logic(:prefix_heading, :default_relator_logic => false),
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:318:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "654" => marc_logic(:prefix_heading, :default_relator_logic => false),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:318:52: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
              "654" => marc_logic(:prefix_heading, :default_relator_logic => false),
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:319:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "656" => marc_logic(:prefix_with_3),
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:320:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              "657" => marc_logic(:prefix_with_3)
              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:321:13: C: Layout/FirstHashElementIndentation: Indent the right brace the same as the first position after the preceding left parenthesis.
            })
            ^
marc_display/lib/marc_display/default_presenters.rb:322:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:324:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          # had it seperate.
                            ^
marc_display/lib/marc_display/default_presenters.rb:325:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "Genre",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:325:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "Genre",
                      ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:326:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :genre,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:327:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => "655abcvxyz",
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:327:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => "655abcvxyz",
                       ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:328:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :raw_prefix_map => marc_logic_map(:map_prefix_lcsh).merge({"655" => marc_logic(:prefix_with_3), "6552" => "Source of term"}) #emdash for LCSH display,
            ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:328:71: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :raw_prefix_map => marc_logic_map(:map_prefix_lcsh).merge({"655" => marc_logic(:prefix_with_3), "6552" => "Source of term"}) #emdash for LCSH display,
                                                                      ^
marc_display/lib/marc_display/default_presenters.rb:328:72: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :raw_prefix_map => marc_logic_map(:map_prefix_lcsh).merge({"655" => marc_logic(:prefix_with_3), "6552" => "Source of term"}) #emdash for LCSH display,
                                                                       ^^^^^
marc_display/lib/marc_display/default_presenters.rb:328:109: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :raw_prefix_map => marc_logic_map(:map_prefix_lcsh).merge({"655" => marc_logic(:prefix_with_3), "6552" => "Source of term"}) #emdash for LCSH display,
                                                                                                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:328:119: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :raw_prefix_map => marc_logic_map(:map_prefix_lcsh).merge({"655" => marc_logic(:prefix_with_3), "6552" => "Source of term"}) #emdash for LCSH display,
                                                                                                                      ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:328:121: C: Layout/LineLength: Line is too long. [162/120]
            :raw_prefix_map => marc_logic_map(:map_prefix_lcsh).merge({"655" => marc_logic(:prefix_with_3), "6552" => "Source of term"}) #emdash for LCSH display,
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:328:135: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
            :raw_prefix_map => marc_logic_map(:map_prefix_lcsh).merge({"655" => marc_logic(:prefix_with_3), "6552" => "Source of term"}) #emdash for LCSH display,
                                                                                                                                      ^
marc_display/lib/marc_display/default_presenters.rb:328:138: C: Layout/LeadingCommentSpace: Missing space after #.
            :raw_prefix_map => marc_logic_map(:map_prefix_lcsh).merge({"655" => marc_logic(:prefix_with_3), "6552" => "Source of term"}) #emdash for LCSH display,
                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:329:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/default_presenters.rb:330:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:333:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "Series",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:333:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "Series",
                      ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:334:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :series,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:335:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => [{ :load_marc => "440anpvx",
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:335:27: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => [{ :load_marc => "440anpvx",
                          ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:335:41: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => [{ :load_marc => "440anpvx",
                                        ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:335:52: C: Layout/TrailingWhitespace: Trailing whitespace detected.
            :source => [{ :load_marc => "440anpvx",
                                                   ^
marc_display/lib/marc_display/default_presenters.rb:336:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          :link=>{:subfields=>"a", :phrase_search=>true, :query_field=>"series"}},
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:336:27: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          :link=>{:subfields=>"a", :phrase_search=>true, :query_field=>"series"}},
                          ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:336:32: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                          :link=>{:subfields=>"a", :phrase_search=>true, :query_field=>"series"}},
                               ^^
marc_display/lib/marc_display/default_presenters.rb:336:34: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                          :link=>{:subfields=>"a", :phrase_search=>true, :query_field=>"series"}},
                                 ^
marc_display/lib/marc_display/default_presenters.rb:336:35: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          :link=>{:subfields=>"a", :phrase_search=>true, :query_field=>"series"}},
                                  ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:336:45: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                          :link=>{:subfields=>"a", :phrase_search=>true, :query_field=>"series"}},
                                            ^^
marc_display/lib/marc_display/default_presenters.rb:336:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          :link=>{:subfields=>"a", :phrase_search=>true, :query_field=>"series"}},
                                              ^^^
marc_display/lib/marc_display/default_presenters.rb:336:52: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          :link=>{:subfields=>"a", :phrase_search=>true, :query_field=>"series"}},
                                                   ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:336:66: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                          :link=>{:subfields=>"a", :phrase_search=>true, :query_field=>"series"}},
                                                                 ^^
marc_display/lib/marc_display/default_presenters.rb:336:74: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          :link=>{:subfields=>"a", :phrase_search=>true, :query_field=>"series"}},
                                                                         ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:336:86: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                          :link=>{:subfields=>"a", :phrase_search=>true, :query_field=>"series"}},
                                                                                     ^^
marc_display/lib/marc_display/default_presenters.rb:336:88: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          :link=>{:subfields=>"a", :phrase_search=>true, :query_field=>"series"}},
                                                                                       ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:336:96: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                          :link=>{:subfields=>"a", :phrase_search=>true, :query_field=>"series"}},
                                                                                               ^
marc_display/lib/marc_display/default_presenters.rb:336:97: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                          :link=>{:subfields=>"a", :phrase_search=>true, :query_field=>"series"}},
                                                                                                ^
marc_display/lib/marc_display/default_presenters.rb:336:99: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                          :link=>{:subfields=>"a", :phrase_search=>true, :query_field=>"series"}},
                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:336:121: C: Layout/LineLength: Line is too long. [122/120]
                          :link=>{:subfields=>"a", :phrase_search=>true, :query_field=>"series"}},
                                                                                                                        ^^
marc_display/lib/marc_display/default_presenters.rb:337:27: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
                          { :load_marc => "800abcdeghjklmnopqrstuvx", ...
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:337:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          { :load_marc => "800abcdeghjklmnopqrstuvx",
                            ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:337:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          { :load_marc => "800abcdeghjklmnopqrstuvx",
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:338:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:subfields => "abcdt", :query_field=>"series", :phrase_search => true, custom: marc_logic(:clean_up_8xx_d)}
                            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:338:38: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                            :link => {:subfields => "abcdt", :query_field=>"series", :phrase_search => true, custom: marc_logic(:clean_up_8xx_d)}
                                     ^
marc_display/lib/marc_display/default_presenters.rb:338:39: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:subfields => "abcdt", :query_field=>"series", :phrase_search => true, custom: marc_logic(:clean_up_8xx_d)}
                                      ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:338:53: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            :link => {:subfields => "abcdt", :query_field=>"series", :phrase_search => true, custom: marc_logic(:clean_up_8xx_d)}
                                                    ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:338:62: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:subfields => "abcdt", :query_field=>"series", :phrase_search => true, custom: marc_logic(:clean_up_8xx_d)}
                                                             ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:338:74: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                            :link => {:subfields => "abcdt", :query_field=>"series", :phrase_search => true, custom: marc_logic(:clean_up_8xx_d)}
                                                                         ^^
marc_display/lib/marc_display/default_presenters.rb:338:76: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            :link => {:subfields => "abcdt", :query_field=>"series", :phrase_search => true, custom: marc_logic(:clean_up_8xx_d)}
                                                                           ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:338:86: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:subfields => "abcdt", :query_field=>"series", :phrase_search => true, custom: marc_logic(:clean_up_8xx_d)}
                                                                                     ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:338:121: C: Layout/LineLength: Line is too long. [145/120]
                            :link => {:subfields => "abcdt", :query_field=>"series", :phrase_search => true, custom: marc_logic(:clean_up_8xx_d)}
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:338:145: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                            :link => {:subfields => "abcdt", :query_field=>"series", :phrase_search => true, custom: marc_logic(:clean_up_8xx_d)}
                                                                                                                                                ^
marc_display/lib/marc_display/default_presenters.rb:339:27: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                          },
                          ^
marc_display/lib/marc_display/default_presenters.rb:340:27: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
                          { :load_marc => "400abcdefgklnptuvx", ...
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:340:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          { :load_marc => "400abcdefgklnptuvx",
                            ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:340:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          { :load_marc => "400abcdefgklnptuvx",
                                          ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:341:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field=>"series", :subfields => "abcd"} }, # 400 is obsolete version of 800
                            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:341:38: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                            :link => {:query_field=>"series", :subfields => "abcd"} }, # 400 is obsolete version of 800
                                     ^
marc_display/lib/marc_display/default_presenters.rb:341:39: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field=>"series", :subfields => "abcd"} }, # 400 is obsolete version of 800
                                      ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:341:51: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                            :link => {:query_field=>"series", :subfields => "abcd"} }, # 400 is obsolete version of 800
                                                  ^^
marc_display/lib/marc_display/default_presenters.rb:341:53: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            :link => {:query_field=>"series", :subfields => "abcd"} }, # 400 is obsolete version of 800
                                                    ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:341:63: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field=>"series", :subfields => "abcd"} }, # 400 is obsolete version of 800
                                                              ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:341:77: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            :link => {:query_field=>"series", :subfields => "abcd"} }, # 400 is obsolete version of 800
                                                                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:341:83: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                            :link => {:query_field=>"series", :subfields => "abcd"} }, # 400 is obsolete version of 800
                                                                                  ^
marc_display/lib/marc_display/default_presenters.rb:342:27: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
                          { :load_marc => "810abcdeghklmnoprstuvx", ...
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:342:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          { :load_marc => "810abcdeghklmnoprstuvx",
                            ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:342:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          { :load_marc => "810abcdeghklmnoprstuvx",
                                          ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:343:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field=>"series", :subfields => "abcdt", :phrase_search => true} },
                            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:343:38: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                            :link => {:query_field=>"series", :subfields => "abcdt", :phrase_search => true} },
                                     ^
marc_display/lib/marc_display/default_presenters.rb:343:39: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field=>"series", :subfields => "abcdt", :phrase_search => true} },
                                      ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:343:51: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                            :link => {:query_field=>"series", :subfields => "abcdt", :phrase_search => true} },
                                                  ^^
marc_display/lib/marc_display/default_presenters.rb:343:53: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            :link => {:query_field=>"series", :subfields => "abcdt", :phrase_search => true} },
                                                    ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:343:63: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field=>"series", :subfields => "abcdt", :phrase_search => true} },
                                                              ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:343:77: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            :link => {:query_field=>"series", :subfields => "abcdt", :phrase_search => true} },
                                                                            ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:343:86: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field=>"series", :subfields => "abcdt", :phrase_search => true} },
                                                                                     ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:343:108: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                            :link => {:query_field=>"series", :subfields => "abcdt", :phrase_search => true} },
                                                                                                           ^
marc_display/lib/marc_display/default_presenters.rb:344:27: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
                          { :load_marc => "410abcdefghklmnoprstuvx", ...
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:344:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          { :load_marc => "410abcdefghklmnoprstuvx",
                            ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:344:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          { :load_marc => "410abcdefghklmnoprstuvx",
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:345:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          :link => {:phrase_search => true, :query_field=>"series", :subfields => "abcd"}}, # 410 is obsolete version of 810
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:345:27: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          :link => {:phrase_search => true, :query_field=>"series", :subfields => "abcd"}}, # 410 is obsolete version of 810
                          ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:345:36: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                          :link => {:phrase_search => true, :query_field=>"series", :subfields => "abcd"}}, # 410 is obsolete version of 810
                                   ^
marc_display/lib/marc_display/default_presenters.rb:345:37: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          :link => {:phrase_search => true, :query_field=>"series", :subfields => "abcd"}}, # 410 is obsolete version of 810
                                    ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:345:61: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          :link => {:phrase_search => true, :query_field=>"series", :subfields => "abcd"}}, # 410 is obsolete version of 810
                                                            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:345:73: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                          :link => {:phrase_search => true, :query_field=>"series", :subfields => "abcd"}}, # 410 is obsolete version of 810
                                                                        ^^
marc_display/lib/marc_display/default_presenters.rb:345:75: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          :link => {:phrase_search => true, :query_field=>"series", :subfields => "abcd"}}, # 410 is obsolete version of 810
                                                                          ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:345:85: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          :link => {:phrase_search => true, :query_field=>"series", :subfields => "abcd"}}, # 410 is obsolete version of 810
                                                                                    ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:345:99: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          :link => {:phrase_search => true, :query_field=>"series", :subfields => "abcd"}}, # 410 is obsolete version of 810
                                                                                                  ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:345:105: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                          :link => {:phrase_search => true, :query_field=>"series", :subfields => "abcd"}}, # 410 is obsolete version of 810
                                                                                                        ^
marc_display/lib/marc_display/default_presenters.rb:345:106: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                          :link => {:phrase_search => true, :query_field=>"series", :subfields => "abcd"}}, # 410 is obsolete version of 810
                                                                                                         ^
marc_display/lib/marc_display/default_presenters.rb:345:121: C: Layout/LineLength: Line is too long. [166/120]
                          :link => {:phrase_search => true, :query_field=>"series", :subfields => "abcd"}}, # 410 is obsolete version of 810
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:345:141: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                          :link => {:phrase_search => true, :query_field=>"series", :subfields => "abcd"}}, # 410 is obsolete version of 810
                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:346:27: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
                          { :load_marc => "811abcdeghklnpqstuvx", ...
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:346:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          { :load_marc => "811abcdeghklnpqstuvx",
                            ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:346:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          { :load_marc => "811abcdeghklnpqstuvx",
                                          ^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:347:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field=>"series", :subfields => "acdeft", :phrase_search => true} },
                            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:347:38: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                            :link => {:query_field=>"series", :subfields => "acdeft", :phrase_search => true} },
                                     ^
marc_display/lib/marc_display/default_presenters.rb:347:39: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field=>"series", :subfields => "acdeft", :phrase_search => true} },
                                      ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:347:51: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                            :link => {:query_field=>"series", :subfields => "acdeft", :phrase_search => true} },
                                                  ^^
marc_display/lib/marc_display/default_presenters.rb:347:53: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            :link => {:query_field=>"series", :subfields => "acdeft", :phrase_search => true} },
                                                    ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:347:63: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field=>"series", :subfields => "acdeft", :phrase_search => true} },
                                                              ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:347:77: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            :link => {:query_field=>"series", :subfields => "acdeft", :phrase_search => true} },
                                                                            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:347:87: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field=>"series", :subfields => "acdeft", :phrase_search => true} },
                                                                                      ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:347:109: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                            :link => {:query_field=>"series", :subfields => "acdeft", :phrase_search => true} },
                                                                                                            ^
marc_display/lib/marc_display/default_presenters.rb:348:27: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
                          { :load_marc => "411abcdefghklnpqstuvx", ...
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:348:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          { :load_marc => "411abcdefghklnpqstuvx",
                            ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:348:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          { :load_marc => "411abcdefghklnpqstuvx",
                                          ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:349:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field=>"series", :subfields => "acdef"} }, # 411 is obsolete version of 811
                            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:349:38: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                            :link => {:query_field=>"series", :subfields => "acdef"} }, # 411 is obsolete version of 811
                                     ^
marc_display/lib/marc_display/default_presenters.rb:349:39: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field=>"series", :subfields => "acdef"} }, # 411 is obsolete version of 811
                                      ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:349:51: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                            :link => {:query_field=>"series", :subfields => "acdef"} }, # 411 is obsolete version of 811
                                                  ^^
marc_display/lib/marc_display/default_presenters.rb:349:53: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            :link => {:query_field=>"series", :subfields => "acdef"} }, # 411 is obsolete version of 811
                                                    ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:349:63: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => {:query_field=>"series", :subfields => "acdef"} }, # 411 is obsolete version of 811
                                                              ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:349:77: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            :link => {:query_field=>"series", :subfields => "acdef"} }, # 411 is obsolete version of 811
                                                                            ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:349:84: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                            :link => {:query_field=>"series", :subfields => "acdef"} }, # 411 is obsolete version of 811
                                                                                   ^
marc_display/lib/marc_display/default_presenters.rb:350:27: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
                          { :load_marc => "830adfghklmnoprstvx",  ...
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:350:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          { :load_marc => "830adfghklmnoprstvx",
                            ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:350:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          { :load_marc => "830adfghklmnoprstvx",
                                          ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:350:65: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                          { :load_marc => "830adfghklmnoprstvx",
                                                                ^
marc_display/lib/marc_display/default_presenters.rb:351:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          :link=>{:subfields => "adfgklmnoprst", :phrase_search => true, :query_field=>"series"}},
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:351:27: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          :link=>{:subfields => "adfgklmnoprst", :phrase_search => true, :query_field=>"series"}},
                          ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:351:32: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                          :link=>{:subfields => "adfgklmnoprst", :phrase_search => true, :query_field=>"series"}},
                               ^^
marc_display/lib/marc_display/default_presenters.rb:351:34: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                          :link=>{:subfields => "adfgklmnoprst", :phrase_search => true, :query_field=>"series"}},
                                 ^
marc_display/lib/marc_display/default_presenters.rb:351:35: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          :link=>{:subfields => "adfgklmnoprst", :phrase_search => true, :query_field=>"series"}},
                                  ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:351:49: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          :link=>{:subfields => "adfgklmnoprst", :phrase_search => true, :query_field=>"series"}},
                                                ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:351:66: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          :link=>{:subfields => "adfgklmnoprst", :phrase_search => true, :query_field=>"series"}},
                                                                 ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:351:90: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          :link=>{:subfields => "adfgklmnoprst", :phrase_search => true, :query_field=>"series"}},
                                                                                         ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:351:102: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                          :link=>{:subfields => "adfgklmnoprst", :phrase_search => true, :query_field=>"series"}},
                                                                                                     ^^
marc_display/lib/marc_display/default_presenters.rb:351:104: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          :link=>{:subfields => "adfgklmnoprst", :phrase_search => true, :query_field=>"series"}},
                                                                                                       ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:351:112: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                          :link=>{:subfields => "adfgklmnoprst", :phrase_search => true, :query_field=>"series"}},
                                                                                                               ^
marc_display/lib/marc_display/default_presenters.rb:351:113: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                          :link=>{:subfields => "adfgklmnoprst", :phrase_search => true, :query_field=>"series"}},
                                                                                                                ^
marc_display/lib/marc_display/default_presenters.rb:352:27: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
                          "490-0*alvx", # no link on non-controlled field
                          ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:352:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "490-0*alvx", # no link on non-controlled field
                          ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:353:27: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
                          { :load_marc => "760abcdghimnoqstxy", ...
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:353:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          { :load_marc => "760abcdghimnoqstxy",
                            ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:353:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          { :load_marc => "760abcdghimnoqstxy",
                                          ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:354:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => true  },
                            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:355:27: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
                          { :load_marc => "762abcdghimnoqstxy", ...
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:355:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                          { :load_marc => "762abcdghimnoqstxy",
                            ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:355:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          { :load_marc => "762abcdghimnoqstxy",
                                          ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:356:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                            :link => true  }
                            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:357:27: C: Layout/MultilineArrayBraceLayout: The closing array brace must be on the same line as the last array element when the opening brace is on the same line as the first array element.
                          ],
                          ^
marc_display/lib/marc_display/default_presenters.rb:358:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :prefix_map => {"760" => marc_logic(:prefix_760),
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:358:28: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :prefix_map => {"760" => marc_logic(:prefix_760),
                           ^
marc_display/lib/marc_display/default_presenters.rb:358:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"760" => marc_logic(:prefix_760),
                            ^^^^^
marc_display/lib/marc_display/default_presenters.rb:359:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "762" => marc_logic(:prefix_762),
                            ^^^^^
marc_display/lib/marc_display/default_presenters.rb:360:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "800x" => "ISSN",
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:360:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "800x" => "ISSN",
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:361:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "400x" => "ISSN",
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:361:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "400x" => "ISSN",
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:362:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "810x" => "ISSN",
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:362:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "810x" => "ISSN",
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:363:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "410x" => "ISSN",
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:363:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "410x" => "ISSN",
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:364:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "811x" => "ISSN",
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:364:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "811x" => "ISSN",
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:365:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "411x" => "ISSN",
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:365:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "411x" => "ISSN",
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:366:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "830x" => "ISSN"
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:366:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "830x" => "ISSN"
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:367:19: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                  }
                  ^
marc_display/lib/marc_display/default_presenters.rb:368:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:369:54: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          # TODO. Use indicator of summary for label?
                                                     ^^
marc_display/lib/marc_display/default_presenters.rb:370:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "Summary",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:370:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "Summary",
                      ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:371:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :summary,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:372:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => ["520ab"],
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:372:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["520ab"],
                        ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:373:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :prefix_map => {"520" => marc_logic(:prefix_with_3)}
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:373:28: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :prefix_map => {"520" => marc_logic(:prefix_with_3)}
                           ^
marc_display/lib/marc_display/default_presenters.rb:373:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"520" => marc_logic(:prefix_with_3)}
                            ^^^^^
marc_display/lib/marc_display/default_presenters.rb:373:64: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
            :prefix_map => {"520" => marc_logic(:prefix_with_3)}
                                                               ^
marc_display/lib/marc_display/default_presenters.rb:374:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:375:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "Contents",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:375:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "Contents",
                      ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:376:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :contents,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:377:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => ["505agrtu"],
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:377:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["505agrtu"],
                        ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:378:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :partial => "marc_display/marc_contents"
            ^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:378:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :partial => "marc_display/marc_contents"
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:379:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:380:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "Instrumentation",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:380:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "Instrumentation",
                      ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:381:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :instrumentation,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:382:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :css_classes => ["ordered_list"],
            ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:382:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :css_classes => ["ordered_list"],
                             ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:383:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => "048ab",
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:383:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => "048ab",
                       ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:384:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :prefix_map => {"048b" => "Soloist"},
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:384:28: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :prefix_map => {"048b" => "Soloist"},
                           ^
marc_display/lib/marc_display/default_presenters.rb:384:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"048b" => "Soloist"},
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:384:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"048b" => "Soloist"},
                                      ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:384:48: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
            :prefix_map => {"048b" => "Soloist"},
                                               ^
marc_display/lib/marc_display/default_presenters.rb:385:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :formatter_map => {"048a" => marc_logic(:format_instr_048),
            ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:385:31: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :formatter_map => {"048a" => marc_logic(:format_instr_048),
                              ^
marc_display/lib/marc_display/default_presenters.rb:385:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :formatter_map => {"048a" => marc_logic(:format_instr_048),
                               ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:385:72: C: Layout/TrailingWhitespace: Trailing whitespace detected.
            :formatter_map => {"048a" => marc_logic(:format_instr_048),
                                                                       ^
marc_display/lib/marc_display/default_presenters.rb:386:28: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                           "048b" => marc_logic(:format_instr_048)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:386:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                           "048b" => marc_logic(:format_instr_048)
                           ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:387:28: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                           }
                           ^
marc_display/lib/marc_display/default_presenters.rb:388:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:391:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "Other information",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:391:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "Other information",
                      ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:392:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :notes,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:393:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :css_classes => ["wider_spaced"],
            ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:393:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :css_classes => ["wider_spaced"],
                             ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                        ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                  ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                           ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:50: C: Layout/SpaceAfterComma: Space missing after comma.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                 ^
marc_display/lib/marc_display/default_presenters.rb:394:51: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                  ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:60: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                           ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:72: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                       ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:81: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:102: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                     ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:110: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                             ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:121: C: Layout/LineLength: Line is too long. [408/120]
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:122: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                         ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:132: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                   ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:140: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                           ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:149: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                    ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:157: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                            ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:171: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                          ^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:184: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                       ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:194: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                 ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:202: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                         ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:210: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                 ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:221: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                            ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:230: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                     ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:239: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                              ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:246: C: Layout/SpaceAfterComma: Space missing after comma.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                     ^
marc_display/lib/marc_display/default_presenters.rb:394:247: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                      ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:261: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                                    ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:269: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                                            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:279: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                                                      ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:289: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                                                                ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:298: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                                                                         ^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:311: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                                                                                      ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:323: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                                                                                                  ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:331: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                                                                                                          ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:340: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                                                                                                                   ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:348: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                                                                                                                           ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:357: C: Layout/SpaceAfterComma: Space missing after comma.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                                                                                                                                    ^
marc_display/lib/marc_display/default_presenters.rb:394:358: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                                                                                                                                     ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:370: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                                                                                                                                                 ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:380: C: Layout/SpaceAfterComma: Space missing after comma.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                                                                                                                                                           ^
marc_display/lib/marc_display/default_presenters.rb:394:381: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                                                                                                                                                            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:391: C: Layout/SpaceAfterComma: Space missing after comma.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                                                                                                                                                                      ^
marc_display/lib/marc_display/default_presenters.rb:394:392: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                                                                                                                                                                       ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:394:400: C: Layout/SpaceAfterComma: Space missing after comma.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                                                                                                                                                                               ^
marc_display/lib/marc_display/default_presenters.rb:394:401: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["500a35", "501a5", "502a","504ab", "506abcde", "513ab", "514abcdefghijkmuz", "515a", "518aodp3", "521ab3", "522a", "524a2", "525a", "526abcdixz", "535abcdg3", "546ab3", "547a", "550a", "552abcd", "555au", "507ab", "561a3","255abcdefg", "580a", "581az3", "585a35", "586a3", "530abcdu3", "540abcd5", "567a", "556az", "563a", "541ca3d","754acdz2", "510abcux","565abcde","545abu","584ab",
                                                                                                                                                                                                                                                                                                                                                                                                                ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:395:13: C: Layout/LeadingCommentSpace: Missing space after #.
            #JH local notes
            ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:396:13: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
            "590a", "591a", "592a",
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:396:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            "590a", "591a", "592a",
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:396:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            "590a", "591a", "592a",
                    ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:396:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            "590a", "591a", "592a",
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:397:13: C: Layout/LeadingCommentSpace: Missing space after #.
            #JH Archives data
            ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:398:13: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
            "3513ab"
            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:398:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            "3513ab"
            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:399:13: C: Layout/MultilineArrayBraceLayout: The closing array brace must be on the same line as the last array element when the opening brace is on the same line as the first array element.
            ],
            ^
marc_display/lib/marc_display/default_presenters.rb:399:15: C: Layout/TrailingWhitespace: Trailing whitespace detected.
            ],
              ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:400:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :prefix_map => {"502a" => "Dissertation",
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:400:28: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :prefix_map => {"502a" => "Dissertation",
                           ^
marc_display/lib/marc_display/default_presenters.rb:400:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"502a" => "Dissertation",
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:400:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"502a" => "Dissertation",
                                      ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:401:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "514" => "Data quality",
                          ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:401:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "514" => "Data quality",
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:401:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "514" => "Data quality",
                                   ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:402:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "510" => marc_logic(:prefix_with_3, ...
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:402:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "510" => marc_logic(:prefix_with_3,
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:403:33: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
                                :prefix => "Indexed by",  ...
                                ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:403:33: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                :prefix => "Indexed by",
                                ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:403:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                                :prefix => "Indexed by",
                                           ^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:403:57: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                                :prefix => "Indexed by",
                                                        ^
marc_display/lib/marc_display/default_presenters.rb:404:33: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                                :force_prefix=>true),
                                ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:404:33: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                :force_prefix=>true),
                                ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:404:46: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
                                :force_prefix=>true),
                                             ^^
marc_display/lib/marc_display/default_presenters.rb:405:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "510x" => "ISSN",
                          ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:405:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "510x" => "ISSN",
                          ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:405:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "510x" => "ISSN",
                                    ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:406:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "506" => marc_logic(:prefix_with_3,  ...
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:406:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "506" => marc_logic(:prefix_with_3,
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:406:62: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                          "506" => marc_logic(:prefix_with_3,
                                                             ^
marc_display/lib/marc_display/default_presenters.rb:407:37: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
                                    :prefix => "Restrictions",  ...
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:407:37: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                    :prefix => "Restrictions",
                                    ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:407:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                                    :prefix => "Restrictions",
                                               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:407:63: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                                    :prefix => "Restrictions",
                                                              ^
marc_display/lib/marc_display/default_presenters.rb:408:37: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                    :force_prefix => true,
                                    ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:408:59: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                                    :force_prefix => true,
                                                          ^
marc_display/lib/marc_display/default_presenters.rb:409:37: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                    :linking_text => 'to'),
                                    ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:410:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "540" => marc_logic(:prefix_with_3,  ...
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:410:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "540" => marc_logic(:prefix_with_3,
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:410:62: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                          "540" => marc_logic(:prefix_with_3,
                                                             ^
marc_display/lib/marc_display/default_presenters.rb:411:37: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
                                    :prefix => "Restrictions",  ...
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:411:37: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                    :prefix => "Restrictions",
                                    ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:411:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                                    :prefix => "Restrictions",
                                               ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:411:63: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                                    :prefix => "Restrictions",
                                                              ^
marc_display/lib/marc_display/default_presenters.rb:412:37: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                    :force_prefix => true,
                                    ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:412:59: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                                    :force_prefix => true,
                                                          ^
marc_display/lib/marc_display/default_presenters.rb:413:37: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                    :linking_text => 'to'),
                                    ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:414:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "545" => marc_logic(:prefix_545),
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:414:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "545" => marc_logic(:prefix_545),
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:415:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "521" => marc_logic(:prefix_521),
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:415:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "521" => marc_logic(:prefix_521),
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:415:60: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                          "521" => marc_logic(:prefix_521),
                                                           ^
marc_display/lib/marc_display/default_presenters.rb:416:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "524"  => marc_logic(:prefix_with_3),
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:416:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "524"  => marc_logic(:prefix_with_3),
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:416:64: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                          "524"  => marc_logic(:prefix_with_3),
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:417:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "524a" => "Cite as",
                          ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:417:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "524a" => "Cite as",
                          ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:417:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "524a" => "Cite as",
                                    ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:418:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "5242" => "Citation from",
                          ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:418:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "5242" => "Citation from",
                          ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:418:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "5242" => "Citation from",
                                    ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:419:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "525" => "Supplements",
                          ^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:419:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "525" => "Supplements",
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:419:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "525" => "Supplements",
                                   ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:420:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "535" => "Custodian",
                          ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:420:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "535" => "Custodian",
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:420:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "535" => "Custodian",
                                   ^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:421:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "561" => "Ownership history",
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:421:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "561" => "Ownership history",
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:421:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "561" => "Ownership history",
                                   ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:422:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "565" => marc_logic(:prefix_with_3, ...
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:422:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "565" => marc_logic(:prefix_with_3,
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:423:31: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
                              :prefix => "Case file characteristics", :force_prefix => true),
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:423:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                              :prefix => "Case file characteristics", :force_prefix => true),
                              ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:423:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                              :prefix => "Case file characteristics", :force_prefix => true),
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:423:71: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                              :prefix => "Case file characteristics", :force_prefix => true),
                                                                      ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:424:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "546" => "Language",
                          ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:424:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "546" => "Language",
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:424:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "546" => "Language",
                                   ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:425:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "550" => "Issued by",
                          ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:425:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "550" => "Issued by",
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:425:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "550" => "Issued by",
                                   ^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:426:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "552" => "Data",
                          ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:426:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "552" => "Data",
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:426:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "552" => "Data",
                                   ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:427:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "555" => "Finding aids note",
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:427:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "555" => "Finding aids note",
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:427:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "555" => "Finding aids note",
                                   ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:428:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "586" => "Awards",
                          ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:428:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "586" => "Awards",
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:428:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "586" => "Awards",
                                   ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:429:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "563" => marc_logic(:prefix_with_3, ...
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:429:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "563" => marc_logic(:prefix_with_3,
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:430:39: C: Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
                                      :prefix => "Binding",  ...
                                      ^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:430:39: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                      :prefix => "Binding",
                                      ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:430:50: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                                      :prefix => "Binding",
                                                 ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:430:60: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                                      :prefix => "Binding",
                                                           ^
marc_display/lib/marc_display/default_presenters.rb:431:39: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                      :force_prefix => true,
                                      ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:431:61: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                                      :force_prefix => true,
                                                            ^
marc_display/lib/marc_display/default_presenters.rb:432:39: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                      :linking_text => "of"),
                                      ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:432:56: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                                      :linking_text => "of"),
                                                       ^^^^
marc_display/lib/marc_display/default_presenters.rb:433:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "567" => "Methodology",
                          ^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:433:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "567" => "Methodology",
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:433:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "567" => "Methodology",
                                   ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:434:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "556" => "Documentation",
                          ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:434:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "556" => "Documentation",
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:434:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "556" => "Documentation",
                                   ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:435:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "522" => "Geographic coverage",
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:435:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "522" => "Geographic coverage",
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:435:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "522" => "Geographic coverage",
                                   ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:436:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "255" => "Cartographic data",
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:436:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "255" => "Cartographic data",
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:436:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "255" => "Cartographic data",
                                   ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:437:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "507" => "Scale",
                          ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:437:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "507" => "Scale",
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:437:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "507" => "Scale",
                                   ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:438:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "754" => "Taxonomic Identification",
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:438:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "754" => "Taxonomic Identification",
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:438:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "754" => "Taxonomic Identification",
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:439:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "7542" => "Source taxonomy",
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:439:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "7542" => "Source taxonomy",
                          ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:439:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "7542" => "Source taxonomy",
                                    ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:440:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "351" => "Organization and arrangement of materials",
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:440:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "351" => "Organization and arrangement of materials",
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:440:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "351" => "Organization and arrangement of materials",
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:441:27: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          "584" => marc_logic(:prefix_with_3)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:441:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          "584" => marc_logic(:prefix_with_3)
                          ^^^^^
marc_display/lib/marc_display/default_presenters.rb:442:13: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
            },
            ^
marc_display/lib/marc_display/default_presenters.rb:443:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :formatter_map => {
            ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:444:17: C: Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
                '555u' => marc_logic(:format_url_to_anchor),
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:447:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:448:11: C: Layout/LeadingCommentSpace: Missing space after #.
          #JH local, not sure what it means
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:449:11: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
          {:label => "Source",
          ^
marc_display/lib/marc_display/default_presenters.rb:449:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          {:label => "Source",
           ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:449:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          {:label => "Source",
                     ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:450:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
           :source => ["593a"]},
           ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:450:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
           :source => ["593a"]},
                       ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:450:31: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
           :source => ["593a"]},
                              ^
marc_display/lib/marc_display/default_presenters.rb:451:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/default_presenters.rb:452:12: C: Layout/LeadingCommentSpace: Missing space after #.
           #TODO: Needs to be cleaned up. Grouped with related works.
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:452:70: C: Layout/TrailingWhitespace: Trailing whitespace detected.
           #TODO: Needs to be cleaned up. Grouped with related works.
                                                                     ^
marc_display/lib/marc_display/default_presenters.rb:453:12: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
           {:label => "Has supplement", ...
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:453:12: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
           {:label => "Has supplement",
           ^
marc_display/lib/marc_display/default_presenters.rb:453:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
           {:label => "Has supplement",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:453:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
           {:label => "Has supplement",
                      ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:454:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :supplement,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:455:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => "770abcdghikmnoqrstuxyz",
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:455:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => "770abcdghikmnoqrstuxyz",
                       ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:456:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :prefix_map => {"770" => marc_logic(:prefix_with_3),
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:456:28: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :prefix_map => {"770" => marc_logic(:prefix_with_3),
                           ^
marc_display/lib/marc_display/default_presenters.rb:456:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"770" => marc_logic(:prefix_with_3),
                            ^^^^^
marc_display/lib/marc_display/default_presenters.rb:457:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "770x" => "ISSN",
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:457:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "770x" => "ISSN",
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:458:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "770z" => "ISBN"},
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:458:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "770z" => "ISBN"},
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:458:45: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                            "770z" => "ISBN"},
                                            ^
marc_display/lib/marc_display/default_presenters.rb:459:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :link => {:custom => marc_logic(:link_7xx)}
            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:459:22: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :link => {:custom => marc_logic(:link_7xx)}
                     ^
marc_display/lib/marc_display/default_presenters.rb:459:23: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :link => {:custom => marc_logic(:link_7xx)}
                      ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:459:55: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
            :link => {:custom => marc_logic(:link_7xx)}
                                                      ^
marc_display/lib/marc_display/default_presenters.rb:460:12: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
           },
           ^
marc_display/lib/marc_display/default_presenters.rb:461:12: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
           {:label => "Supplement to", ...
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:461:12: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
           {:label => "Supplement to",
           ^
marc_display/lib/marc_display/default_presenters.rb:461:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
           {:label => "Supplement to",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:461:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
           {:label => "Supplement to",
                      ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:462:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :supplement_to,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:463:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => "772abcdghikmnoqrstuxyz",
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:463:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => "772abcdghikmnoqrstuxyz",
                       ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:464:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :prefix_map => {"772" => marc_logic(:prefix_with_3),
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:464:28: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :prefix_map => {"772" => marc_logic(:prefix_with_3),
                           ^
marc_display/lib/marc_display/default_presenters.rb:464:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"772" => marc_logic(:prefix_with_3),
                            ^^^^^
marc_display/lib/marc_display/default_presenters.rb:465:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "772x" => "ISSN",
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:465:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "772x" => "ISSN",
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:466:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "772z" => "ISBN"},
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:466:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "772z" => "ISBN"},
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:466:45: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                            "772z" => "ISBN"},
                                            ^
marc_display/lib/marc_display/default_presenters.rb:467:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :link => {:custom => marc_logic(:link_7xx)}
            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:467:22: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :link => {:custom => marc_logic(:link_7xx)}
                     ^
marc_display/lib/marc_display/default_presenters.rb:467:23: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :link => {:custom => marc_logic(:link_7xx)}
                      ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:467:55: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
            :link => {:custom => marc_logic(:link_7xx)}
                                                      ^
marc_display/lib/marc_display/default_presenters.rb:468:12: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
           },
           ^
marc_display/lib/marc_display/default_presenters.rb:469:12: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
           {:label => "Additional form", ...
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:469:12: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
           {:label => "Additional form",
           ^
marc_display/lib/marc_display/default_presenters.rb:469:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
           {:label => "Additional form",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:469:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
           {:label => "Additional form",
                      ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:470:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :additional_form,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:471:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => "776abcdghikmnoqrstuxwyz",
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:471:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => "776abcdghikmnoqrstuxwyz",
                       ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:472:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :prefix_map => {"776" => marc_logic(:prefix_with_3),
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:472:28: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :prefix_map => {"776" => marc_logic(:prefix_with_3),
                           ^
marc_display/lib/marc_display/default_presenters.rb:472:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"776" => marc_logic(:prefix_with_3),
                            ^^^^^
marc_display/lib/marc_display/default_presenters.rb:473:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "776x" => "ISSN",
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:473:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "776x" => "ISSN",
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:474:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "776z" => "ISBN"},
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:474:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                            "776z" => "ISBN"},
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:474:45: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
                            "776z" => "ISBN"},
                                            ^
marc_display/lib/marc_display/default_presenters.rb:475:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :link => {:custom => marc_logic(:link_7xx)}
            ^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:475:22: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :link => {:custom => marc_logic(:link_7xx)}
                     ^
marc_display/lib/marc_display/default_presenters.rb:475:23: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :link => {:custom => marc_logic(:link_7xx)}
                      ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:475:55: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
            :link => {:custom => marc_logic(:link_7xx)}
                                                      ^
marc_display/lib/marc_display/default_presenters.rb:476:12: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
           },
           ^
marc_display/lib/marc_display/default_presenters.rb:477:12: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
           {:label => "Related archival materials", ...
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:477:12: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
           {:label => "Related archival materials",
           ^
marc_display/lib/marc_display/default_presenters.rb:477:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
           {:label => "Related archival materials",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:477:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
           {:label => "Related archival materials",
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:478:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :related_archival,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:479:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => "544abcde",
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:479:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => "544abcde",
                       ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:480:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :prefix_map => {"544" => marc_logic(:prefix_with_3)}
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:480:28: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :prefix_map => {"544" => marc_logic(:prefix_with_3)}
                           ^
marc_display/lib/marc_display/default_presenters.rb:480:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"544" => marc_logic(:prefix_with_3)}
                            ^^^^^
marc_display/lib/marc_display/default_presenters.rb:480:64: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
            :prefix_map => {"544" => marc_logic(:prefix_with_3)}
                                                               ^
marc_display/lib/marc_display/default_presenters.rb:481:12: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
           },
           ^
marc_display/lib/marc_display/default_presenters.rb:482:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "Publisher's number",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:483:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :pub_num,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:484:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => ["028ba"]
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:484:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["028ba"]
                        ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:485:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:486:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "ISBN",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:486:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "ISBN",
                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:487:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :isbn,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:488:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => ["020ab","776z", "534z"], #776z is questionable but in orig OPAC
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:488:24: C: Style/WordArray: Use %w or %W for an array of words.
            :source => ["020ab","776z", "534z"], #776z is questionable but in orig OPAC
                       ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:488:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["020ab","776z", "534z"], #776z is questionable but in orig OPAC
                        ^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:488:32: C: Layout/SpaceAfterComma: Space missing after comma.
            :source => ["020ab","776z", "534z"], #776z is questionable but in orig OPAC
                               ^
marc_display/lib/marc_display/default_presenters.rb:488:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["020ab","776z", "534z"], #776z is questionable but in orig OPAC
                                ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:488:41: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["020ab","776z", "534z"], #776z is questionable but in orig OPAC
                                        ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:488:50: C: Layout/LeadingCommentSpace: Missing space after #.
            :source => ["020ab","776z", "534z"], #776z is questionable but in orig OPAC
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:489:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :prefix_map => {"534z" => "Original version", "776z" => "Alternate version"},
            ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:489:28: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
            :prefix_map => {"534z" => "Original version", "776z" => "Alternate version"},
                           ^
marc_display/lib/marc_display/default_presenters.rb:489:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"534z" => "Original version", "776z" => "Alternate version"},
                            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:489:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"534z" => "Original version", "776z" => "Alternate version"},
                                      ^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:489:59: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"534z" => "Original version", "776z" => "Alternate version"},
                                                          ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:489:69: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :prefix_map => {"534z" => "Original version", "776z" => "Alternate version"},
                                                                    ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:489:88: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
            :prefix_map => {"534z" => "Original version", "776z" => "Alternate version"},
                                                                                       ^
marc_display/lib/marc_display/default_presenters.rb:490:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :formatter => marc_logic(:format_strip_edge_punctuation)
            ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:491:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:492:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "ISSN",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:492:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "ISSN",
                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:493:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :issn,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:494:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => ["022a","022y", "022l", "776x","490x","440x"] #776x is questionable but in orig OPAC mapping. 022y is "incorrect" ISSN, but apparently sometimes used for alternate manifestation ISSNs?
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:494:24: C: Style/WordArray: Use %w or %W for an array of words.
            :source => ["022a","022y", "022l", "776x","490x","440x"] #776x is questionable but in orig OPAC mapping. 022y is "incorrect" ISSN, but apparently sometimes used for alternate manifestation ISSNs?
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:494:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["022a","022y", "022l", "776x","490x","440x"] #776x is questionable but in orig OPAC mapping. 022y is "incorrect" ISSN, but apparently sometimes used for alternate manifestation ISSNs?
                        ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:494:31: C: Layout/SpaceAfterComma: Space missing after comma.
            :source => ["022a","022y", "022l", "776x","490x","440x"] #776x is questionable but in orig OPAC mapping. 022y is "incorrect" ISSN, but apparently sometimes used for alternate manifestation ISSNs?
                              ^
marc_display/lib/marc_display/default_presenters.rb:494:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["022a","022y", "022l", "776x","490x","440x"] #776x is questionable but in orig OPAC mapping. 022y is "incorrect" ISSN, but apparently sometimes used for alternate manifestation ISSNs?
                               ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:494:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["022a","022y", "022l", "776x","490x","440x"] #776x is questionable but in orig OPAC mapping. 022y is "incorrect" ISSN, but apparently sometimes used for alternate manifestation ISSNs?
                                       ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:494:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["022a","022y", "022l", "776x","490x","440x"] #776x is questionable but in orig OPAC mapping. 022y is "incorrect" ISSN, but apparently sometimes used for alternate manifestation ISSNs?
                                               ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:494:54: C: Layout/SpaceAfterComma: Space missing after comma.
            :source => ["022a","022y", "022l", "776x","490x","440x"] #776x is questionable but in orig OPAC mapping. 022y is "incorrect" ISSN, but apparently sometimes used for alternate manifestation ISSNs?
                                                     ^
marc_display/lib/marc_display/default_presenters.rb:494:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["022a","022y", "022l", "776x","490x","440x"] #776x is questionable but in orig OPAC mapping. 022y is "incorrect" ISSN, but apparently sometimes used for alternate manifestation ISSNs?
                                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:494:61: C: Layout/SpaceAfterComma: Space missing after comma.
            :source => ["022a","022y", "022l", "776x","490x","440x"] #776x is questionable but in orig OPAC mapping. 022y is "incorrect" ISSN, but apparently sometimes used for alternate manifestation ISSNs?
                                                            ^
marc_display/lib/marc_display/default_presenters.rb:494:62: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["022a","022y", "022l", "776x","490x","440x"] #776x is questionable but in orig OPAC mapping. 022y is "incorrect" ISSN, but apparently sometimes used for alternate manifestation ISSNs?
                                                             ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:494:70: C: Layout/LeadingCommentSpace: Missing space after #.
            :source => ["022a","022y", "022l", "776x","490x","440x"] #776x is questionable but in orig OPAC mapping. 022y is "incorrect" ISSN, but apparently sometimes used for alternate manifestation ISSNs?
                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:494:121: C: Layout/LineLength: Line is too long. [207/120]
            :source => ["022a","022y", "022l", "776x","490x","440x"] #776x is questionable but in orig OPAC mapping. 022y is "incorrect" ISSN, but apparently sometimes used for alternate manifestation ISSNs?
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:495:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:496:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "GPO Item Number",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:496:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "GPO Item Number",
                      ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:497:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :gpo_item,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:498:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => "079a"
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:498:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => "079a"
                       ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:499:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:500:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          { :label => "SuDoc Call Number",
            ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:500:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          { :label => "SuDoc Call Number",
                      ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:501:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :sudoc_call,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:502:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => "086-*1a"
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:502:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => "086-*1a"
                       ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:503:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          },
          ^
marc_display/lib/marc_display/default_presenters.rb:503:13: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          },
            ^
marc_display/lib/marc_display/default_presenters.rb:504:12: C: Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.
           { :label => "Identifying numbers", ...
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:504:14: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
           { :label => "Identifying numbers",
             ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:504:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
           { :label => "Identifying numbers",
                       ^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:505:13: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
            :id => :numbers,
            ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:505:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :id => :numbers,
            ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:506:13: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
            :source => ["024a", "010a", "010b",  ...
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:506:13: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
            :source => ["024a", "010a", "010b",
            ^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:506:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["024a", "010a", "010b",
                        ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:506:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["024a", "010a", "010b",
                                ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:506:41: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
            :source => ["024a", "010a", "010b",
                                        ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:506:48: C: Layout/TrailingWhitespace: Trailing whitespace detected.
            :source => ["024a", "010a", "010b",
                                               ^
marc_display/lib/marc_display/default_presenters.rb:507:25: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
                        {:load_marc => "035a",
                        ^
marc_display/lib/marc_display/default_presenters.rb:507:26: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                        {:load_marc => "035a",
                         ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:507:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                        {:load_marc => "035a",
                                       ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:507:47: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                        {:load_marc => "035a",
                                              ^
marc_display/lib/marc_display/default_presenters.rb:508:25: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                        :delete_if_filter => lambda do |field|                                 ...
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:508:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                        :delete_if_filter => lambda do |field|
                        ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:508:63: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                        :delete_if_filter => lambda do |field|
                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:509:27: C: Layout/SpaceAfterNot: Do not leave space between ! and its argument.
                          ! (field['a'][0..6] == "(OCoLC)" || ...
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:509:50: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          ! (field['a'][0..6] == "(OCoLC)" ||
                                                 ^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:510:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          field['a'][0..2] == "ocm" ||
                                              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:511:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          field['a'][0..2] == "ocn" ||
                                              ^^^^^
marc_display/lib/marc_display/default_presenters.rb:512:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                          field['a'][0..1] == "on")
                                              ^^^^
marc_display/lib/marc_display/default_presenters.rb:512:52: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                          field['a'][0..1] == "on")
                                                   ^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:514:25: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                        :formatter => lambda {|value| value.sub(/^(ocm)|(ocn)|(on)|(\(OCoLC\))/,'')}
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:514:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                        :formatter => lambda {|value| value.sub(/^(ocm)|(ocn)|(on)|(\(OCoLC\))/,'')}
                        ^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:514:39: C: Style/Lambda: Use the -> { ... } lambda literal syntax for single line lambdas.
                        :formatter => lambda {|value| value.sub(/^(ocm)|(ocn)|(on)|(\(OCoLC\))/,'')}
                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:514:46: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
                        :formatter => lambda {|value| value.sub(/^(ocm)|(ocn)|(on)|(\(OCoLC\))/,'')}
                                             ^^
marc_display/lib/marc_display/default_presenters.rb:514:96: C: Layout/SpaceAfterComma: Space missing after comma.
                        :formatter => lambda {|value| value.sub(/^(ocm)|(ocn)|(on)|(\(OCoLC\))/,'')}
                                                                                               ^
marc_display/lib/marc_display/default_presenters.rb:514:100: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
                        :formatter => lambda {|value| value.sub(/^(ocm)|(ocn)|(on)|(\(OCoLC\))/,'')}
                                                                                                   ^
marc_display/lib/marc_display/default_presenters.rb:515:25: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
                        }
                        ^
marc_display/lib/marc_display/default_presenters.rb:516:24: C: Layout/MultilineArrayBraceLayout: The closing array brace must be on the same line as the last array element when the opening brace is on the same line as the first array element.
                       ],
                       ^
marc_display/lib/marc_display/default_presenters.rb:517:12: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
           :prefix_map => {"010a" => "LCCN", "035" => "OCLC", "010b" => "NUCMUC number", "024" => marc_logic(:prefix_024)}
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:517:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
           :prefix_map => {"010a" => "LCCN", "035" => "OCLC", "010b" => "NUCMUC number", "024" => marc_logic(:prefix_024)}
           ^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:517:27: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
           :prefix_map => {"010a" => "LCCN", "035" => "OCLC", "010b" => "NUCMUC number", "024" => marc_logic(:prefix_024)}
                          ^
marc_display/lib/marc_display/default_presenters.rb:517:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
           :prefix_map => {"010a" => "LCCN", "035" => "OCLC", "010b" => "NUCMUC number", "024" => marc_logic(:prefix_024)}
                           ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:517:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
           :prefix_map => {"010a" => "LCCN", "035" => "OCLC", "010b" => "NUCMUC number", "024" => marc_logic(:prefix_024)}
                                     ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:517:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
           :prefix_map => {"010a" => "LCCN", "035" => "OCLC", "010b" => "NUCMUC number", "024" => marc_logic(:prefix_024)}
                                             ^^^^^
marc_display/lib/marc_display/default_presenters.rb:517:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
           :prefix_map => {"010a" => "LCCN", "035" => "OCLC", "010b" => "NUCMUC number", "024" => marc_logic(:prefix_024)}
                                                      ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:517:63: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
           :prefix_map => {"010a" => "LCCN", "035" => "OCLC", "010b" => "NUCMUC number", "024" => marc_logic(:prefix_024)}
                                                              ^^^^^^
marc_display/lib/marc_display/default_presenters.rb:517:73: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
           :prefix_map => {"010a" => "LCCN", "035" => "OCLC", "010b" => "NUCMUC number", "024" => marc_logic(:prefix_024)}
                                                                        ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/default_presenters.rb:517:90: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
           :prefix_map => {"010a" => "LCCN", "035" => "OCLC", "010b" => "NUCMUC number", "024" => marc_logic(:prefix_024)}
                                                                                         ^^^^^
marc_display/lib/marc_display/default_presenters.rb:517:121: C: Layout/LineLength: Line is too long. [122/120]
           :prefix_map => {"010a" => "LCCN", "035" => "OCLC", "010b" => "NUCMUC number", "024" => marc_logic(:prefix_024)}
                                                                                                                        ^^
marc_display/lib/marc_display/default_presenters.rb:517:122: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
           :prefix_map => {"010a" => "LCCN", "035" => "OCLC", "010b" => "NUCMUC number", "024" => marc_logic(:prefix_024)}
                                                                                                                         ^
marc_display/lib/marc_display/default_presenters.rb:518:11: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
          }
          ^
marc_display/lib/marc_display/default_presenters.rb:519:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/default_presenters.rb:520:8: C: Layout/FirstArrayElementIndentation: Indent the right bracket the same as the start of the line where the left bracket is.
       ]
       ^
marc_display/lib/marc_display/default_presenters.rb:521:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/default_presenters.rb:522:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/default_presenters.rb:523:6: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  end
     ^^
marc_display/lib/marc_display/marc_to_open_url.rb:6:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # formats will be called "book".
                                  ^
marc_display/lib/marc_display/marc_to_open_url.rb:11:17: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # accordingly.
                ^
marc_display/lib/marc_display/marc_to_open_url.rb:14:49: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # * ISBN and ISSN are recognized and included.
                                                ^
marc_display/lib/marc_display/marc_to_open_url.rb:15:72: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # * OCLCnum, LCCN, and DOI are found and included as URI's in rfr_id.
                                                                       ^
marc_display/lib/marc_display/marc_to_open_url.rb:17:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  class MarcToOpenUrl
                     ^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:20:1: C: Layout/EmptyLines: Extra blank line detected.
marc_display/lib/marc_display/marc_to_open_url.rb:21:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    attr_accessor :marc, :mappings
                                  ^^
marc_display/lib/marc_display/marc_to_open_url.rb:22:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/marc_to_open_url.rb:23:20: C: Naming/MethodParameterName: Only use lowercase characters for method parameter.
    def initialize(aMarc = nil, a_mappings = nil)
                   ^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:23:20: C: Naming/VariableName: Use snake_case for variable names.
    def initialize(aMarc = nil, a_mappings = nil)
                   ^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:24:19: C: Naming/VariableName: Use snake_case for variable names.
      self.marc = aMarc
                  ^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:25:68: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      self.mappings = a_mappings || OpenUrlDefaultMappings.produce!
                                                                   ^
marc_display/lib/marc_display/marc_to_open_url.rb:27:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/marc_to_open_url.rb:28:5: C: Metrics/AbcSize: Assignment Branch Condition size for build_openurl is too high. [<4, 53, 11> 54.28/15]
    def build_openurl ...
    ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:28:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for build_openurl is too high. [8/7]
    def build_openurl ...
    ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:28:5: C: Metrics/MethodLength: Method has too many lines. [31/10]
    def build_openurl ...
    ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:28:5: C: Metrics/PerceivedComplexity: Perceived complexity for build_openurl is too high. [9/7]
    def build_openurl ...
    ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:30:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/marc_to_open_url.rb:31:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/marc_to_open_url.rb:33:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/marc_to_open_url.rb:34:31: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      ctx.referent.set_format( self.openurl_format )
                              ^
marc_display/lib/marc_display/marc_to_open_url.rb:34:32: C: Style/RedundantSelf: Redundant self detected.
      ctx.referent.set_format( self.openurl_format )
                               ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:34:51: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      ctx.referent.set_format( self.openurl_format )
                                                  ^
marc_display/lib/marc_display/marc_to_open_url.rb:35:55: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      ctx.referent.set_metadata('genre', openurl_genre  )
                                                      ^
marc_display/lib/marc_display/marc_to_open_url.rb:35:55: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      ctx.referent.set_metadata('genre', openurl_genre  )
                                                      ^^
marc_display/lib/marc_display/marc_to_open_url.rb:36:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/marc_to_open_url.rb:38:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # will be lame.
                     ^
marc_display/lib/marc_display/marc_to_open_url.rb:39:67: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      au_first_choice = build_presenter_from_key(:au_first_choice)
                                                                  ^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:40:10: C: Style/NumericPredicate: Use au_first_choice.lines.length.positive? instead of au_first_choice.lines.length > 0.
      if au_first_choice.lines.length > 0
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:40:10: C: Style/ZeroLengthPredicate: Use !empty? instead of length > 0.
      if au_first_choice.lines.length > 0
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:41:70: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        ctx.referent.set_metadata('au', au_first_choice.lines[0].join )
                                                                     ^
marc_display/lib/marc_display/marc_to_open_url.rb:41:72: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        ctx.referent.set_metadata('au', au_first_choice.lines[0].join )
                                                                       ^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:46:7: C: Style/SymbolArray: Use %i or %I for an array of symbols.
      [:doi_uri, :oclcnum_uri, :lccn_uri].each do |key|
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:47:13: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        if ( uri = build_and_get_first_line(key))
            ^
marc_display/lib/marc_display/marc_to_open_url.rb:48:39: C: Layout/SpaceInsideParens: Space inside parentheses detected.
          ctx.referent.add_identifier( uri )
                                      ^
marc_display/lib/marc_display/marc_to_open_url.rb:48:43: C: Layout/SpaceInsideParens: Space inside parentheses detected.
          ctx.referent.add_identifier( uri )
                                          ^
marc_display/lib/marc_display/marc_to_open_url.rb:50:10: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      end
         ^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:52:72: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # including date for what's really a journal messes up resolvers,
                                                                       ^
marc_display/lib/marc_display/marc_to_open_url.rb:54:7: C: Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      unless (openurl_genre == "journal")
      ^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:54:14: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an unless.
      unless (openurl_genre == "journal")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:54:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      unless (openurl_genre == "journal")
                               ^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:54:42: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      unless (openurl_genre == "journal")
                                         ^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:60:53: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      title_text = build_and_get_first_line(:title, ": ")
                                                    ^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:61:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/marc_to_open_url.rb:62:10: C: Style/RedundantSelf: Redundant self detected.
      if self.openurl_format == "book"
         ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:62:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      if self.openurl_format == "book"
                                ^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:65:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/marc_to_open_url.rb:70:13: C: Style/RedundantSelf: Redundant self detected.
      elsif self.openurl_format == "journal"
            ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:70:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      elsif self.openurl_format == "journal"
                                   ^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:71:9: C: Layout/LeadingCommentSpace: Missing space after #.
        #journal only
        ^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:72:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        ctx.referent.set_metadata("jtitle", title_text)
                                  ^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:74:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/marc_to_open_url.rb:77:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/marc_to_open_url.rb:82:29: C: Layout/SpaceAfterComma: Space missing after comma.
      if marc.leader.slice(7,1) == 's'
                            ^
marc_display/lib/marc_display/marc_to_open_url.rb:82:39: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      if marc.leader.slice(7,1) == 's'
                                      ^
marc_display/lib/marc_display/marc_to_open_url.rb:83:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "journal"
        ^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:85:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "book"
        ^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:88:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/marc_to_open_url.rb:89:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/marc_to_open_url.rb:90:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/marc_to_open_url.rb:96:30: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # tunings can come later.
                             ^
marc_display/lib/marc_display/marc_to_open_url.rb:100:23: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # book or journal.
                      ^
marc_display/lib/marc_display/marc_to_open_url.rb:101:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def openurl_genre
    ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:101:5: C: Metrics/MethodLength: Method has too many lines. [13/10]
    def openurl_genre ...
    ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:102:10: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
      if (openurl_format == "journal" && ...
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:102:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      if (openurl_format == "journal" &&
                            ^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:103:11: C: Style/WordArray: Use %w or %W for an array of words.
          ["a", "t"].include?(marc.leader.slice(6,1))
          ^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:103:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          ["a", "t"].include?(marc.leader.slice(6,1))
           ^^^
marc_display/lib/marc_display/marc_to_open_url.rb:103:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          ["a", "t"].include?(marc.leader.slice(6,1))
                ^^^
marc_display/lib/marc_display/marc_to_open_url.rb:103:50: C: Layout/SpaceAfterComma: Space missing after comma.
          ["a", "t"].include?(marc.leader.slice(6,1))
                                                 ^
marc_display/lib/marc_display/marc_to_open_url.rb:105:11: C: Layout/LeadingCommentSpace: Missing space after #.
          #language material or manuscript language material
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:106:7: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
          return "journal"
      ^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:106:11: C: Style/RedundantReturn: Redundant return detected.
          return "journal"
          ^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:106:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          return "journal"
                 ^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:106:27: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          return "journal"
                          ^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:107:13: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an elsif.
      elsif (openurl_format == "book" && ...
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:107:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      elsif (openurl_format == "book" &&
                               ^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:108:14: C: Style/WordArray: Use %w or %W for an array of words.
             ["a", "t"].include?(marc.leader.slice(6,1))
             ^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:108:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
             ["a", "t"].include?(marc.leader.slice(6,1))
              ^^^
marc_display/lib/marc_display/marc_to_open_url.rb:108:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
             ["a", "t"].include?(marc.leader.slice(6,1))
                   ^^^
marc_display/lib/marc_display/marc_to_open_url.rb:108:53: C: Layout/SpaceAfterComma: Space missing after comma.
             ["a", "t"].include?(marc.leader.slice(6,1))
                                                    ^
marc_display/lib/marc_display/marc_to_open_url.rb:110:7: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
          return "book"
      ^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:110:11: C: Style/RedundantReturn: Redundant return detected.
          return "book"
          ^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:110:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          return "book"
                 ^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:111:13: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an elsif.
      elsif (["journal", "book"].include? openurl_format  )
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:111:14: C: Style/WordArray: Use %w or %W for an array of words.
      elsif (["journal", "book"].include? openurl_format  )
             ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:111:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      elsif (["journal", "book"].include? openurl_format  )
              ^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:111:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      elsif (["journal", "book"].include? openurl_format  )
                         ^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:111:57: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      elsif (["journal", "book"].include? openurl_format  )
                                                        ^
marc_display/lib/marc_display/marc_to_open_url.rb:111:57: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      elsif (["journal", "book"].include? openurl_format  )
                                                        ^^
marc_display/lib/marc_display/marc_to_open_url.rb:113:9: C: Style/RedundantReturn: Redundant return detected.
        return "unknown"
        ^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:113:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        return "unknown"
               ^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:113:25: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        return "unknown"
                        ^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:115:72: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        # it's not book or journal format at all? genre does not apply.
                                                                       ^
marc_display/lib/marc_display/marc_to_open_url.rb:116:9: C: Style/RedundantReturn: Redundant return detected.
        return nil
        ^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:117:10: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      end
         ^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:119:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/marc_to_open_url.rb:120:3: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
     def build_and_get_first_line(key, seperator = " ")
  ^^^
marc_display/lib/marc_display/marc_to_open_url.rb:120:6: C: Layout/IndentationConsistency: Inconsistent indentation detected.
     def build_and_get_first_line(key, seperator = " ") ...
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:120:52: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
     def build_and_get_first_line(key, seperator = " ")
                                                   ^^^
marc_display/lib/marc_display/marc_to_open_url.rb:121:19: C: Layout/SpaceInsideParens: Space inside parentheses detected.
       first_line( build_presenter_from_key( key ) , seperator )
                  ^
marc_display/lib/marc_display/marc_to_open_url.rb:121:45: C: Layout/SpaceInsideParens: Space inside parentheses detected.
       first_line( build_presenter_from_key( key ) , seperator )
                                            ^
marc_display/lib/marc_display/marc_to_open_url.rb:121:49: C: Layout/SpaceInsideParens: Space inside parentheses detected.
       first_line( build_presenter_from_key( key ) , seperator )
                                                ^
marc_display/lib/marc_display/marc_to_open_url.rb:121:51: C: Layout/SpaceBeforeComma: Space found before comma.
       first_line( build_presenter_from_key( key ) , seperator )
                                                  ^
marc_display/lib/marc_display/marc_to_open_url.rb:121:63: C: Layout/SpaceInsideParens: Space inside parentheses detected.
       first_line( build_presenter_from_key( key ) , seperator )
                                                              ^
marc_display/lib/marc_display/marc_to_open_url.rb:123:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/marc_to_open_url.rb:124:3: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
     def build_presenter_from_key(key)
  ^^^
marc_display/lib/marc_display/marc_to_open_url.rb:124:6: C: Layout/IndentationConsistency: Inconsistent indentation detected.
     def build_presenter_from_key(key) ...
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:127:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/marc_to_open_url.rb:129:3: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
     def first_line(presenter, seperator = " ")
  ^^^
marc_display/lib/marc_display/marc_to_open_url.rb:129:6: C: Layout/IndentationConsistency: Inconsistent indentation detected.
     def first_line(presenter, seperator = " ") ...
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:129:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
     def first_line(presenter, seperator = " ")
                                           ^^^
marc_display/lib/marc_display/marc_to_open_url.rb:130:22: C: Style/NumericPredicate: Use presenter.lines.length.zero? instead of presenter.lines.length == 0.
       return nil if presenter.lines.length == 0
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:130:22: C: Style/ZeroLengthPredicate: Use empty? instead of length == 0.
       return nil if presenter.lines.length == 0
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:131:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/marc_to_open_url.rb:132:8: C: Style/RedundantReturn: Redundant return detected.
       return presenter.lines[0].join(seperator)
       ^^^^^^
marc_display/lib/marc_display/marc_to_open_url.rb:134:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/lib/marc_display/marc_to_open_url.rb:135:4: W: Layout/EndAlignment: end at 135, 3 is not aligned with class at 17, 2.
   end
   ^^^
marc_display/lib/marc_display/marc_to_open_url.rb:137:1: C: Layout/TrailingEmptyLines: 1 trailing blank lines detected.
marc_display/lib/marc_display/open_url_default_mappings.rb:2:3: C: Metrics/ModuleLength: Module has too many lines. [103/100]
  module OpenUrlDefaultMappings ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:5:1: C: Layout/EmptyLines: Extra blank line detected.
marc_display/lib/marc_display/open_url_default_mappings.rb:6:1: C: Layout/EmptyLines: Extra blank line detected.
marc_display/lib/marc_display/open_url_default_mappings.rb:7:5: C: Metrics/AbcSize: Assignment Branch Condition size for produce! is too high. [<20, 49, 14> 54.74/15]
    def self.produce! ...
    ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:7:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for produce! is too high. [9/7]
    def self.produce! ...
    ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:7:5: C: Metrics/MethodLength: Method has too many lines. [100/10]
    def self.produce! ...
    ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:7:5: C: Metrics/PerceivedComplexity: Perceived complexity for produce! is too high. [9/7]
    def self.produce! ...
    ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:10:1: C: Layout/EmptyLines: Extra blank line detected.
marc_display/lib/marc_display/open_url_default_mappings.rb:13:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :source => ["100abcdfgjklmnopqrstu", "110abcdfgjklmnopqrstu", "111acdefgklnpqstu"],
        ^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:13:20: C: Style/WordArray: Use %w or %W for an array of words.
        :source => ["100abcdfgjklmnopqrstu", "110abcdfgjklmnopqrstu", "111acdefgklnpqstu"],
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:13:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :source => ["100abcdfgjklmnopqrstu", "110abcdfgjklmnopqrstu", "111acdefgklnpqstu"],
                    ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:13:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :source => ["100abcdfgjklmnopqrstu", "110abcdfgjklmnopqrstu", "111acdefgklnpqstu"],
                                             ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:13:71: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :source => ["100abcdfgjklmnopqrstu", "110abcdfgjklmnopqrstu", "111acdefgklnpqstu"],
                                                                      ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:14:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :formatter => marc_logic(:format_strip_edge_punctuation)
        ^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:17:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :source => { :load_marc => "245c",
        ^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:17:22: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :source => { :load_marc => "245c",
                     ^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:17:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :source => { :load_marc => "245c",
                                   ^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:18:11: C: Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
          :formatter => lambda do |value| ...
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:18:11: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          :formatter => lambda do |value|
          ^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:23:13: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
            if value.split(/\s/).length > 8 # more than 8 words?
            ^^
marc_display/lib/marc_display/open_url_default_mappings.rb:24:42: C: Layout/SpaceAfterComma: Space missing after comma.
              value = value.split(/\s/)[0,8].join(" ")
                                         ^
marc_display/lib/marc_display/open_url_default_mappings.rb:24:51: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
              value = value.split(/\s/)[0,8].join(" ")
                                                  ^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:28:9: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the same line as the last hash element when opening brace is on the same line as the first hash element.
        }
        ^
marc_display/lib/marc_display/open_url_default_mappings.rb:32:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :source => ["245afgbk"],
        ^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:32:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :source => ["245afgbk"],
                    ^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:33:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :formatter => marc_logic(:format_strip_edge_punctuation)
        ^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:37:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :source => ["260c"],
        ^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:37:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :source => ["260c"],
                    ^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:38:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :formatter => lambda do |value|
        ^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:41:11: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
          if value =~ /(\d\d\d\d)/
          ^^
marc_display/lib/marc_display/open_url_default_mappings.rb:42:13: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
            $1
            ^^
marc_display/lib/marc_display/open_url_default_mappings.rb:47:10: C: Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
         :source => ["022a","022y", "022l","490x","440x"],
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:47:10: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
         :source => ["022a","022y", "022l","490x","440x"],
         ^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:47:21: C: Style/WordArray: Use %w or %W for an array of words.
         :source => ["022a","022y", "022l","490x","440x"],
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:47:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
         :source => ["022a","022y", "022l","490x","440x"],
                     ^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:47:28: C: Layout/SpaceAfterComma: Space missing after comma.
         :source => ["022a","022y", "022l","490x","440x"],
                           ^
marc_display/lib/marc_display/open_url_default_mappings.rb:47:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
         :source => ["022a","022y", "022l","490x","440x"],
                            ^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:47:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
         :source => ["022a","022y", "022l","490x","440x"],
                                    ^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:47:43: C: Layout/SpaceAfterComma: Space missing after comma.
         :source => ["022a","022y", "022l","490x","440x"],
                                          ^
marc_display/lib/marc_display/open_url_default_mappings.rb:47:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
         :source => ["022a","022y", "022l","490x","440x"],
                                           ^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:47:50: C: Layout/SpaceAfterComma: Space missing after comma.
         :source => ["022a","022y", "022l","490x","440x"],
                                                 ^
marc_display/lib/marc_display/open_url_default_mappings.rb:47:51: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
         :source => ["022a","022y", "022l","490x","440x"],
                                                  ^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:48:10: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
         :formatter => lambda do |value|
         ^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:49:12: C: Layout/LeadingCommentSpace: Missing space after #.
           #remove all non-digit/X please
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:54:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :source => ["020ab", "534z"],
        ^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:54:20: C: Style/WordArray: Use %w or %W for an array of words.
        :source => ["020ab", "534z"],
                   ^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:54:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :source => ["020ab", "534z"],
                    ^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:54:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :source => ["020ab", "534z"],
                             ^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:55:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :formatter => lambda do |value|
        ^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:56:11: C: Layout/LeadingCommentSpace: Missing space after #.
          #remove all non-digit/X
          ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:62:14: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
          if (value =~ /^ *([\d X\-]+)/)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:63:13: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
            $1.gsub(/[^\dX]/, '')
            ^^
marc_display/lib/marc_display/open_url_default_mappings.rb:70:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :source => ["010a"],
        ^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:70:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :source => ["010a"],
                    ^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:71:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :formatter => lambda do |value|
        ^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:72:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          "info:lccn/" + MarcDisplayLogic.instance.format_lccn_normalize(value)
          ^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:76:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :source => ["035a"],
        ^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:76:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :source => ["035a"],
                    ^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:77:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :delete_if_filter => lambda do |field|
        ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:78:11: C: Layout/SpaceAfterNot: Do not leave space between ! and its argument.
          ! (field['a'][0..6] == "(OCoLC)" || ...
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:78:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          ! (field['a'][0..6] == "(OCoLC)" ||
                                 ^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:79:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          field['a'][0..2] == "ocm" ||
                              ^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:80:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          field['a'][0..2] == "ocn" ||
                              ^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:81:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          field['a'][0..1] == "on")
                              ^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:83:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :formatter => lambda do |value|
        ^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:84:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          "info:oclcnum/" + value.sub(/^(ocm)|(ocn)|(on)|(\(OCoLC\))/,'').gsub(/[^\d]/, '')
          ^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:84:70: C: Layout/SpaceAfterComma: Space missing after comma.
          "info:oclcnum/" + value.sub(/^(ocm)|(ocn)|(on)|(\(OCoLC\))/,'').gsub(/[^\d]/, '')
                                                                     ^
marc_display/lib/marc_display/open_url_default_mappings.rb:88:7: C: Layout/LeadingCommentSpace: Missing space after #.
      #book-only mappings
      ^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:90:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :source => ["260a"],
        ^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:90:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :source => ["260a"],
                    ^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:91:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :formatter => marc_logic(:format_strip_edge_punctuation)
        ^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:94:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :source => ["260b"],
        ^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:94:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :source => ["260b"],
                    ^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:95:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :formatter => marc_logic(:format_strip_edge_punctuation)
        ^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:98:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :source => ["250ab"],
        ^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:98:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :source => ["250ab"],
                    ^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:99:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :formatter => marc_logic(:format_strip_edge_punctuation)
        ^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:102:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :source => ["300a"],
        ^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:102:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :source => ["300a"],
                    ^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:103:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :formatter => lambda do |value|
        ^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:105:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          parts = value.split(",")
                              ^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:106:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          found_pages = ""
                        ^^
marc_display/lib/marc_display/open_url_default_mappings.rb:109:29: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
              found_pages = $1
                            ^^
marc_display/lib/marc_display/open_url_default_mappings.rb:117:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :source => "024-7*a",
        ^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:117:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :source => "024-7*a",
                   ^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:118:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :delete_if_filter => lambda do |marc_line|
        ^^^^^^^^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:119:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          marc_line["2"] != "doi"
                    ^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:119:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          marc_line["2"] != "doi"
                            ^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:121:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :formatter => lambda do |value|
        ^^^^^^^^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:128:7: C: Style/RedundantReturn: Redundant return detected.
      return mappings
      ^^^^^^
marc_display/lib/marc_display/open_url_default_mappings.rb:132:1: C: Layout/TrailingEmptyLines: 1 trailing blank lines detected.
marc_display/lib/marc_display/util.rb:5:53: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # would need to over-ride to use something else.
                                                    ^
marc_display/lib/marc_display/util.rb:12:7: C: Style/Alias: Use alias instead of alias_method in a class body.
      alias_method :h_esc, :html_escape
      ^^^^^^^^^^^^
marc_display/marc_display.gemspec:6:67: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# and I think I'd rewrite it with what I know now to be different.
                                                                  ^
marc_display/marc_display.gemspec:10:17: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# catalyst repo.
                ^
marc_display/marc_display.gemspec:12:1: C: Style/SpecialGlobalVars: Prefer $LOAD_PATH over $:.
$:.push File.expand_path("../lib", __FILE__)
^^
marc_display/marc_display.gemspec:12:14: C: Style/ExpandPathArguments: Use expand_path('lib', __dir__) instead of expand_path('../lib', __FILE__).
$:.push File.expand_path("../lib", __FILE__)
             ^^^^^^^^^^^
marc_display/marc_display.gemspec:12:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
$:.push File.expand_path("../lib", __FILE__)
                         ^^^^^^^^
marc_display/marc_display.gemspec:18:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  s.name        = "marc_display"
                  ^^^^^^^^^^^^^^
marc_display/marc_display.gemspec:19:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  s.version     = "0.1.0"
                  ^^^^^^^
marc_display/marc_display.gemspec:20:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  s.authors     = ["Jonathan Rochkind"]
                   ^^^^^^^^^^^^^^^^^^^
marc_display/marc_display.gemspec:21:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  s.email       = ["rochkind@jhu.edu"]
                   ^^^^^^^^^^^^^^^^^^
marc_display/marc_display.gemspec:21:39: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  s.email       = ["rochkind@jhu.edu"]
                                      ^^
marc_display/marc_display.gemspec:22:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  s.summary     = "marc mapping for display"
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/marc_display.gemspec:24:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  s.files = Dir["{app,config,db,lib}/**/*"]
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/marc_display.gemspec:25:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  s.test_files = Dir["spec/**/*"]
                     ^^^^^^^^^^^
marc_display/marc_display.gemspec:25:34: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  s.test_files = Dir["spec/**/*"]
                                 ^^
marc_display/marc_display.gemspec:26:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/spec/app_root/config/boot.rb:2:116: C: Style/IfUnlessModifier: Modifier form of unless makes the line too long.
RAILS_FRAMEWORK_ROOT = (ENV['RAILS_FRAMEWORK_ROOT'] || "#{File.dirname(__FILE__)}/../../../../../../vendor/rails") unless defined?(RAILS_FRAMEWORK_ROOT)
                                                                                                                   ^^^^^^
marc_display/spec/app_root/config/boot.rb:2:121: C: Layout/LineLength: Line is too long. [153/120]
RAILS_FRAMEWORK_ROOT = (ENV['RAILS_FRAMEWORK_ROOT'] || "#{File.dirname(__FILE__)}/../../../../../../vendor/rails") unless defined?(RAILS_FRAMEWORK_ROOT)
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/app_root/config/boot.rb:2:153: C: Layout/TrailingWhitespace: Trailing whitespace detected.
RAILS_FRAMEWORK_ROOT = (ENV['RAILS_FRAMEWORK_ROOT'] || "#{File.dirname(__FILE__)}/../../../../../../vendor/rails") unless defined?(RAILS_FRAMEWORK_ROOT)
                                                                                                                                                        ^
marc_display/spec/app_root/config/boot.rb:7:14: C: Style/MutableConstant: Freeze mutable objects assigned to constants.
RAILS_ROOT = "#{File.dirname(__FILE__)}/.." unless defined?(RAILS_ROOT)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/app_root/config/boot.rb:12:7: C: Style/GuardClause: Use a guard clause (return if booted?) instead of wrapping the code inside a conditional expression.
      unless booted?
      ^^^^^^
marc_display/spec/app_root/config/boot.rb:62:18: W: Lint/AssignmentInCondition: Use == if you meant to do a comparison or wrap the expression in parentheses to indicate you meant to assign in a condition.
      if version = self.class.gem_version
                 ^
marc_display/spec/app_root/config/boot.rb:67:30: W: Lint/UselessAssignment: Useless assignment to variable - load_error.
    rescue Gem::LoadError => load_error
                             ^^^^^^^^^^
marc_display/spec/app_root/config/boot.rb:67:30: C: Naming/RescuedExceptionsVariableName: Use e instead of load_error.
    rescue Gem::LoadError => load_error
                             ^^^^^^^^^^
marc_display/spec/app_root/config/boot.rb:68:7: C: Style/StderrPuts: Use warn instead of $stderr.puts to allow such output to be disabled.
      $stderr.puts %(Missing the Rails #{version} gem. Please `gem install -v=#{version} rails`, update your RAILS_GEM_VERSION setting in config/environment.rb for the Rails version you do have installed, or comment out RAILS_GEM_VERSION to use the latest version installed.)
      ^^^^^^^^^^^^
marc_display/spec/app_root/config/boot.rb:68:121: C: Layout/LineLength: Line is too long. [275/120]
      $stderr.puts %(Missing the Rails #{version} gem. Please `gem install -v=#{version} rails`, update your RAILS_GEM_VERSION setting in config/environment.rb for the Rails version you do have installed, or comment out RAILS_GEM_VERSION to use the latest version installed.)
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/app_root/config/boot.rb:74:9: C: Style/RescueModifier: Avoid using rescue in its modifier form.
        Gem::RubyGemsVersion rescue nil
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/app_root/config/boot.rb:91:11: C: Style/StderrPuts: Use warn instead of $stderr.puts to allow such output to be disabled.
          $stderr.puts %Q(Rails requires RubyGems >= #{min_version} (you have #{rubygems_version}). Please `gem update --system` and try again.)
          ^^^^^^^^^^^^
marc_display/spec/app_root/config/boot.rb:91:24: C: Style/BarePercentLiterals: Use % instead of %Q.
          $stderr.puts %Q(Rails requires RubyGems >= #{min_version} (you have #{rubygems_version}). Please `gem update --system` and try again.)
                       ^^^
marc_display/spec/app_root/config/boot.rb:91:24: C: Style/RedundantPercentQ: Use %Q only for strings that contain both single quotes and double quotes, or for dynamic strings that contain double quotes.
          $stderr.puts %Q(Rails requires RubyGems >= #{min_version} (you have #{rubygems_version}). Please `gem update --system` and try again.)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/app_root/config/boot.rb:91:121: C: Layout/LineLength: Line is too long. [144/120]
          $stderr.puts %Q(Rails requires RubyGems >= #{min_version} (you have #{rubygems_version}). Please `gem update --system` and try again.)
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/app_root/config/boot.rb:94:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/spec/app_root/config/boot.rb:96:9: C: Style/StderrPuts: Use warn instead of $stderr.puts to allow such output to be disabled.
        $stderr.puts %Q(Rails requires RubyGems >= #{min_version}. Please install RubyGems and try again: http://rubygems.rubyforge.org)
        ^^^^^^^^^^^^
marc_display/spec/app_root/config/boot.rb:96:22: C: Style/BarePercentLiterals: Use % instead of %Q.
        $stderr.puts %Q(Rails requires RubyGems >= #{min_version}. Please install RubyGems and try again: http://rubygems.rubyforge.org)
                     ^^^
marc_display/spec/app_root/config/boot.rb:96:22: C: Style/RedundantPercentQ: Use %Q only for strings that contain both single quotes and double quotes, or for dynamic strings that contain double quotes.
        $stderr.puts %Q(Rails requires RubyGems >= #{min_version}. Please install RubyGems and try again: http://rubygems.rubyforge.org)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/app_root/config/boot.rb:101:9: C: Style/PerlBackrefs: Avoid the use of Perl-style backrefs.
        $1 if text =~ /^[^#]*RAILS_GEM_VERSION\s*=\s*["']([!~<>=]*\s*[\d.]+)["']/
        ^^
marc_display/spec/app_root/config/boot.rb:104:7: C: Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
      private
      ^^^^^^^
marc_display/spec/app_root/config/boot.rb:105:5: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        def read_environment_rb
    ^^^^
marc_display/spec/app_root/config/boot.rb:105:9: C: Layout/IndentationConsistency: Inconsistent indentation detected.
        def read_environment_rb ...
        ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/app_root/config/boot.rb:107:85: W: Lint/DeprecatedClassMethods: File.exists? is deprecated in favor of File.exist?.
          environment_rb = "#{HELPER_RAILS_ROOT}/config/environment.rb" unless File.exists?(environment_rb)
                                                                                    ^^^^^^^
marc_display/spec/app_root/config/environment.rb:4:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
marc_display/spec/app_root/config/environment.rb:7:38: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  config.action_controller.session = {:key => 'rails_session', :secret => 'd229e4d22437432705ab3985d4d246'}
                                     ^
marc_display/spec/app_root/config/environment.rb:7:39: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  config.action_controller.session = {:key => 'rails_session', :secret => 'd229e4d22437432705ab3985d4d246'}
                                      ^^^^^^^
marc_display/spec/app_root/config/environment.rb:7:64: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  config.action_controller.session = {:key => 'rails_session', :secret => 'd229e4d22437432705ab3985d4d246'}
                                                               ^^^^^^^^^^
marc_display/spec/app_root/config/environment.rb:7:107: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  config.action_controller.session = {:key => 'rails_session', :secret => 'd229e4d22437432705ab3985d4d246'}
                                                                                                          ^
marc_display/spec/app_root/config/environment.rb:8:3: C: Style/MultilineIfModifier: Favor a normal unless-statement over a modifier clause in a multiline statement.
  config.plugin_locators.unshift( ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/app_root/config/environment.rb:16:67: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # jrochkind addition to plugin_test_helper generated rails stub.
                                                                  ^
marc_display/spec/app_root/config/environment.rb:20:63: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
  config.load_paths << File.expand_path(File.dirname(__FILE__)+ "../../../../lib")
                                                              ^
marc_display/spec/app_root/config/environment.rb:20:65: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  config.load_paths << File.expand_path(File.dirname(__FILE__)+ "../../../../lib")
                                                                ^^^^^^^^^^^^^^^^^
marc_display/spec/app_root/config/environment.rb:21:63: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
  config.load_paths << File.expand_path(File.dirname(__FILE__)+ "../../../../app/helpers")
                                                              ^
marc_display/spec/app_root/config/environment.rb:21:65: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  config.load_paths << File.expand_path(File.dirname(__FILE__)+ "../../../../app/helpers")
                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/app_root/config/environment.rb:22:63: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
  config.load_paths << File.expand_path(File.dirname(__FILE__)+ "../../../../app/models")
                                                              ^
marc_display/spec/app_root/config/environment.rb:22:65: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  config.load_paths << File.expand_path(File.dirname(__FILE__)+ "../../../../app/models")
                                                                ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/app_root/config/environment.rb:24:1: C: Layout/EmptyLines: Extra blank line detected.
marc_display/spec/app_root/config/environment.rb:26:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  config.gem "openurl", :version => ">= 0.1.0"
             ^^^^^^^^^
marc_display/spec/app_root/config/environment.rb:26:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  config.gem "openurl", :version => ">= 0.1.0"
                        ^^^^^^^^^^^
marc_display/spec/app_root/config/environment.rb:26:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  config.gem "openurl", :version => ">= 0.1.0"
                                    ^^^^^^^^^^
marc_display/spec/app_root/config/environment.rb:27:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/spec/app_root/lib/console_with_fixtures.rb:2:58: C: Rails/FilePath: Please use Rails.root.join('path/to') instead.
(ENV['FIXTURES'] ? ENV['FIXTURES'].split(/,/) : Dir.glob(File.join(Rails.root, '../fixtures/*.{yml,csv}'))).each do |fixture_file|
                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/app_root/lib/console_with_fixtures.rb:2:121: C: Layout/LineLength: Line is too long. [130/120]
(ENV['FIXTURES'] ? ENV['FIXTURES'].split(/,/) : Dir.glob(File.join(Rails.root, '../fixtures/*.{yml,csv}'))).each do |fixture_file|
                                                                                                                        ^^^^^^^^^^
marc_display/spec/app_root/lib/console_with_fixtures.rb:3:28: C: Rails/FilePath: Please use Rails.root.join('path/to') instead.
  Fixtures.create_fixtures(File.join(Rails.root, '../fixtures'), File.basename(fixture_file, '.*'))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:4:1: C: Metrics/BlockLength: Block has too many lines. [87/25]
describe MarcDisplay::MarcToOpenUrl do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:5:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
marc_display/spec/lib/marc_to_open_url_spec.rb:6:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "for nil marc record" do
           ^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:7:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should return nil" do
       ^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:8:7: C: Naming/VariableName: Use snake_case for variable names.
      marcToOpenUrl = MarcDisplay::MarcToOpenUrl.new(nil)
      ^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:9:7: C: Naming/VariableName: Use snake_case for variable names.
      marcToOpenUrl.build_openurl.should be_nil
      ^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:12:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/spec/lib/marc_to_open_url_spec.rb:13:3: C: Metrics/BlockLength: Block has too many lines. [39/25]
  describe "for a book marc record" do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:13:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "for a book marc record" do
           ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:15:7: C: Naming/VariableName: Use snake_case for variable names.
      @marcToOpenUrl = MarcDisplay::MarcToOpenUrl.new(chomsky_book_marc)
      ^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:15:73: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      @marcToOpenUrl = MarcDisplay::MarcToOpenUrl.new(chomsky_book_marc)
                                                                        ^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:17:32: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      @co_kev_hash = CGI.parse( @context_object.kev)
                               ^
marc_display/spec/lib/marc_to_open_url_spec.rb:20:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should be book OpenURL format" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:21:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft_val_fmt"].should == ["info:ofi/fmt:kev:mtx:book"]
                   ^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:21:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft_val_fmt"].should == ["info:ofi/fmt:kev:mtx:book"]
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:24:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should have rft.genre of book" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:25:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.genre"].should == ["book"]
                   ^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:25:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.genre"].should == ["book"]
                                           ^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:27:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/spec/lib/marc_to_open_url_spec.rb:28:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should create author" do
       ^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:28:33: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    it "should create author" do
                                ^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:29:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.au"].should == ["Chomsky, Noam"]
                   ^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:29:41: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.au"].should == ["Chomsky, Noam"]
                                        ^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:31:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should create title as btitle" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:31:42: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    it "should create title as btitle" do
                                         ^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:32:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.btitle"].should ==["Perilous power: the Middle East & U.S. foreign policy : dialogues on terror, democracy, war, and justice"]
                   ^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:32:41: C: Layout/SpaceAroundOperators: Surrounding space missing for operator ==.
      @co_kev_hash["rft.btitle"].should ==["Perilous power: the Middle East & U.S. foreign policy : dialogues on terror, democracy, war, and justice"]
                                        ^^
marc_display/spec/lib/marc_to_open_url_spec.rb:32:41: W: Lint/Void: Operator == used in void context.
      @co_kev_hash["rft.btitle"].should ==["Perilous power: the Middle East & U.S. foreign policy : dialogues on terror, democracy, war, and justice"]
                                        ^^
marc_display/spec/lib/marc_to_open_url_spec.rb:32:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.btitle"].should ==["Perilous power: the Middle East & U.S. foreign policy : dialogues on terror, democracy, war, and justice"]
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:32:121: C: Layout/LineLength: Line is too long. [150/120]
      @co_kev_hash["rft.btitle"].should ==["Perilous power: the Middle East & U.S. foreign policy : dialogues on terror, democracy, war, and justice"]
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:33:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash.keys.should_not include("rft.title")
                                           ^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:35:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should have date" do
       ^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:36:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.date"].should == ["2007"]
                   ^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:36:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.date"].should == ["2007"]
                                          ^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:38:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should have isbn" do
       ^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:38:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    it "should have isbn" do
                            ^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:39:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.isbn"].should == ["1594513120"]
                   ^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:39:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.isbn"].should == ["1594513120"]
                                          ^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:41:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should include oclcnum rft_id" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:42:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft_id"].should include("info:oclcnum/70630340")
                   ^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:42:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft_id"].should include("info:oclcnum/70630340")
                                            ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:44:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should include lccn rft_id" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:45:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft_id"].should include("info:lccn/2006021980")
                   ^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:45:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft_id"].should include("info:lccn/2006021980")
                                            ^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:47:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should include place" do
       ^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:47:33: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    it "should include place" do
                                ^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:48:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.place"].should == ["Boulder"]
                   ^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:48:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.place"].should == ["Boulder"]
                                           ^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:50:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should include publisher" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:50:37: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    it "should include publisher" do
                                    ^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:51:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.pub"].should == ["Paradigm Publishers"]
                   ^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:51:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.pub"].should == ["Paradigm Publishers"]
                                         ^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:53:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should have total pages" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:54:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.tpages"].should == ["276"]
                   ^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:54:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.tpages"].should == ["276"]
                                            ^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:58:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "for a journal marc record" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:60:7: C: Naming/VariableName: Use snake_case for variable names.
      @marcToOpenUrl = MarcDisplay::MarcToOpenUrl.new(social_journal_marc)
      ^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:60:75: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      @marcToOpenUrl = MarcDisplay::MarcToOpenUrl.new(social_journal_marc)
                                                                          ^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:62:32: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      @co_kev_hash = CGI.parse( @context_object.kev)
                               ^
marc_display/spec/lib/marc_to_open_url_spec.rb:64:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should be journal OpenURL format" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:65:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft_val_fmt"].should == ["info:ofi/fmt:kev:mtx:journal"]
                   ^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:65:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft_val_fmt"].should == ["info:ofi/fmt:kev:mtx:journal"]
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:68:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should have rft.genre of journal" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:69:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.genre"].should == ["journal"]
                   ^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:69:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.genre"].should == ["journal"]
                                           ^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:72:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should have no author" do
       ^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:73:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash.keys.should_not include("rft.au")
                                           ^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:76:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should have ISSN" do
       ^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:77:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.issn"].should == ["17512395"]
                   ^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:77:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.issn"].should == ["17512395"]
                                          ^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:80:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should have title as jtitle" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:81:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.jtitle"].should == ["Social issues and policy review"]
                   ^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:81:41: W: Lint/Void: Operator == used in void context.
      @co_kev_hash["rft.jtitle"].should == ["Social issues and policy review"]
                                        ^^
marc_display/spec/lib/marc_to_open_url_spec.rb:81:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft.jtitle"].should == ["Social issues and policy review"]
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:82:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash.keys.should_not include("rft.title")
                                           ^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:85:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should have OCLCnum in rft_id" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:86:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft_id"].should include("info:oclcnum/190564913")
                   ^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:86:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @co_kev_hash["rft_id"].should include("info:oclcnum/190564913")
                                            ^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:88:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/spec/lib/marc_to_open_url_spec.rb:90:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/spec/lib/marc_to_open_url_spec.rb:96:5: C: Style/RedundantReturn: Redundant return detected.
    return nil
    ^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:104:5: C: Style/RedundantReturn: Redundant return detected.
    return nil
    ^^^^^^
marc_display/spec/lib/marc_to_open_url_spec.rb:106:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
marc_display/spec/lib/marc_to_open_url_spec.rb:108:1: C: Layout/TrailingEmptyLines: 1 trailing blank lines detected.
marc_display/spec/spec_helper.rb:1:1: C: Layout/LeadingCommentSpace: Missing space after #.
#RAILS_ROOT = "#{File.dirname(__FILE__)}/.."
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/spec_helper.rb:9:25: C: Layout/TrailingWhitespace: Trailing whitespace detected.
# instead of Test::Unit.
                        ^
marc_display/spec/spec_helper.rb:11:1: C: Layout/LeadingCommentSpace: Missing space after #.
#require 'test_help'
^^^^^^^^^^^^^^^^^^^^
marc_display/spec/spec_helper.rb:15:1: C: Layout/EmptyLines: Extra blank line detected.
marc_display/spec/spec_helper.rb:18:1: W: Lint/NonDeterministicRequireOrder: Sort files before requiring them.
Dir["#{File.dirname(__FILE__)}/support/**/*.rb"].each {|f| require f}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/spec_helper.rb:18:55: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
Dir["#{File.dirname(__FILE__)}/support/**/*.rb"].each {|f| require f}
                                                      ^^
marc_display/spec/spec_helper.rb:18:69: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
Dir["#{File.dirname(__FILE__)}/support/**/*.rb"].each {|f| require f}
                                                                    ^
marc_display/spec/spec_helper.rb:20:18: C: Style/MutableConstant: Freeze mutable objects assigned to constants.
MARC_DATA_PATH = "#{File.dirname(__FILE__)}/marc_data"
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/spec_helper.rb:23:19: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
silence_warnings {RAILS_ENV = ENV['RAILS_ENV']}
                  ^
marc_display/spec/spec_helper.rb:23:47: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
silence_warnings {RAILS_ENV = ENV['RAILS_ENV']}
                                              ^
marc_display/spec/spec_helper.rb:26:32: C: Rails/FilePath: Please use Rails.root.join('path/to') instead.
ActiveRecord::Migrator.migrate("#{Rails.root}/db/migrate")
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^
marc_display/spec/spec_helper.rb:33:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/spec/spec_helper.rb:65:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
marc_display/spec/spec_helper.rb:67:1: C: Layout/TrailingEmptyLines: 1 trailing blank lines detected.
script/rails:2:121: C: Layout/LineLength: Line is too long. [124/120]
# This command will automatically be run when you run "rails" with Rails 3 gems installed from the root of your application.
                                                                                                                        ^^^^
script/rails:4:17: C: Style/ExpandPathArguments: Use expand_path('../config/application', __dir__) instead of expand_path('../../config/application', __FILE__).
APP_PATH = File.expand_path('../../config/application',  __FILE__)
                ^^^^^^^^^^^
script/rails:4:56: C: Layout/ExtraSpacing: Unnecessary spacing detected.
APP_PATH = File.expand_path('../../config/application',  __FILE__)
                                                       ^
script/rails:5:14: C: Style/ExpandPathArguments: Use expand_path('../config/boot', __dir__) instead of expand_path('../../config/boot', __FILE__).
require File.expand_path('../../config/boot',  __FILE__)
             ^^^^^^^^^^^
script/rails:5:46: C: Layout/ExtraSpacing: Unnecessary spacing detected.
require File.expand_path('../../config/boot',  __FILE__)
                                             ^
spec/requests/advanced_search_spec.rb:1:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "spec_helper"
        ^^^^^^^^^^^^^
spec/requests/advanced_search_spec.rb:3:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
describe "Advanced Search" do
         ^^^^^^^^^^^^^^^^^
spec/requests/advanced_search_spec.rb:4:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "basically works" do
     ^^^^^^^^^^^^^^^^^
spec/requests/advanced_search_spec.rb:6:33: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # echo back our constraints.
                                ^
spec/requests/advanced_search_spec.rb:7:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    visit "/advanced"
          ^^^^^^^^^^^
spec/requests/advanced_search_spec.rb:7:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    visit "/advanced"
                     ^^^^^
spec/requests/advanced_search_spec.rb:8:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/advanced_search_spec.rb:9:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    page.should have_selector("input[name=all_fields]")
                              ^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/advanced_search_spec.rb:10:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/advanced_search_spec.rb:11:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "all_fields", :with => "books"
            ^^^^^^^^^^^^
spec/requests/advanced_search_spec.rb:11:27: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in "all_fields", :with => "books"
                          ^^^^^^^^
spec/requests/advanced_search_spec.rb:11:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "all_fields", :with => "books"
                                   ^^^^^^^
spec/requests/advanced_search_spec.rb:12:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "title", :with => "smith"
            ^^^^^^^
spec/requests/advanced_search_spec.rb:12:22: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in "title", :with => "smith"
                     ^^^^^^^^
spec/requests/advanced_search_spec.rb:12:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "title", :with => "smith"
                              ^^^^^^^
spec/requests/advanced_search_spec.rb:13:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "range_pub_date_sort_begin", :with => "1700"
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/advanced_search_spec.rb:13:42: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in "range_pub_date_sort_begin", :with => "1700"
                                         ^^^^^^^^
spec/requests/advanced_search_spec.rb:13:51: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "range_pub_date_sort_begin", :with => "1700"
                                                  ^^^^^^
spec/requests/advanced_search_spec.rb:14:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "range_pub_date_sort_end", :with => "2050"
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/advanced_search_spec.rb:14:40: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in "range_pub_date_sort_end", :with => "2050"
                                       ^^^^^^^^
spec/requests/advanced_search_spec.rb:14:49: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "range_pub_date_sort_end", :with => "2050"
                                                ^^^^^^
spec/requests/advanced_search_spec.rb:15:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/advanced_search_spec.rb:16:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    check "unstemmed_search"
          ^^^^^^^^^^^^^^^^^^
spec/requests/advanced_search_spec.rb:17:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/advanced_search_spec.rb:18:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    check "f_inclusive_language_facet_English"
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/advanced_search_spec.rb:19:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    check "f_inclusive_language_facet_Spanish"
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/advanced_search_spec.rb:19:47: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    check "f_inclusive_language_facet_Spanish"
                                              ^^^^
spec/requests/advanced_search_spec.rb:20:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/advanced_search_spec.rb:21:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select "year", :from => "sort"
           ^^^^^^
spec/requests/advanced_search_spec.rb:21:20: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    select "year", :from => "sort"
                   ^^^^^^^^
spec/requests/advanced_search_spec.rb:21:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select "year", :from => "sort"
                            ^^^^^^
spec/requests/advanced_search_spec.rb:22:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/advanced_search_spec.rb:23:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_button "Search"
                 ^^^^^^^^
spec/requests/advanced_search_spec.rb:24:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/advanced_search_spec.rb:25:36: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # Ugh, these are a mess, sorry.
                                   ^
spec/requests/advanced_search_spec.rb:26:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/advanced_search_spec.rb:29:47: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    page.should have_selector('.filterValue', :text => "Stemming disabled")
                                              ^^^^^^^^
spec/requests/advanced_search_spec.rb:29:56: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    page.should have_selector('.filterValue', :text => "Stemming disabled")
                                                       ^^^^^^^^^^^^^^^^^^^
spec/requests/advanced_search_spec.rb:29:76: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    page.should have_selector('.filterValue', :text => "Stemming disabled")
                                                                           ^^^^^^
spec/requests/advanced_search_spec.rb:30:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/advanced_search_spec.rb:31:101: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    page.find('span.filterName[text()="Publication Year"] ~ span.filterValue').should have_selector(".from", :text=>'1700')
                                                                                                    ^^^^^^^
spec/requests/advanced_search_spec.rb:31:110: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    page.find('span.filterName[text()="Publication Year"] ~ span.filterValue').should have_selector(".from", :text=>'1700')
                                                                                                             ^^^^^^^
spec/requests/advanced_search_spec.rb:31:115: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
    page.find('span.filterName[text()="Publication Year"] ~ span.filterValue').should have_selector(".from", :text=>'1700')
                                                                                                                  ^^
spec/requests/advanced_search_spec.rb:31:121: C: Layout/LineLength: Line is too long. [123/120]
    page.find('span.filterName[text()="Publication Year"] ~ span.filterValue').should have_selector(".from", :text=>'1700')
                                                                                                                        ^^^
spec/requests/advanced_search_spec.rb:32:101: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    page.find('span.filterName[text()="Publication Year"] ~ span.filterValue').should have_selector(".to", :text=>'2050')
                                                                                                    ^^^^^
spec/requests/advanced_search_spec.rb:32:108: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    page.find('span.filterName[text()="Publication Year"] ~ span.filterValue').should have_selector(".to", :text=>'2050')
                                                                                                           ^^^^^^^
spec/requests/advanced_search_spec.rb:32:113: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
    page.find('span.filterName[text()="Publication Year"] ~ span.filterValue').should have_selector(".to", :text=>'2050')
                                                                                                                ^^
spec/requests/advanced_search_spec.rb:32:121: C: Layout/LineLength: Line is too long. [121/120]
    page.find('span.filterName[text()="Publication Year"] ~ span.filterValue').should have_selector(".to", :text=>'2050')
                                                                                                                        ^
spec/requests/advanced_search_spec.rb:34:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/advanced_search_spec.rb:36:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/advanced_search_spec.rb:37:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/advanced_search_spec.rb:38:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    page.should have_selector("select[name=sort] option[selected]", :text => "year")
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/advanced_search_spec.rb:38:69: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    page.should have_selector("select[name=sort] option[selected]", :text => "year")
                                                                    ^^^^^^^^
spec/requests/advanced_search_spec.rb:38:78: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    page.should have_selector("select[name=sort] option[selected]", :text => "year")
                                                                             ^^^^^^
spec/requests/advanced_search_spec.rb:39:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/advanced_search_spec.rb:40:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    page.should have_content("Displaying 1 -")
                             ^^^^^^^^^^^^^^^^
spec/requests/advanced_search_spec.rb:41:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/spec_helper.rb:14:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= 'test'
    ^^^^^^^^^^^
spec/spec_helper.rb:15:14: C: Style/ExpandPathArguments: Use expand_path('../config/environment', __dir__) instead of expand_path('../../config/environment', __FILE__).
require File.expand_path("../../config/environment", __FILE__)
             ^^^^^^^^^^^
spec/spec_helper.rb:15:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require File.expand_path("../../config/environment", __FILE__)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/spec_helper.rb:20:1: W: Lint/NonDeterministicRequireOrder: Sort files before requiring them.
Dir[Rails.root.join("spec/support/**/*.rb")].each {|f| require f}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/spec_helper.rb:20:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Dir[Rails.root.join("spec/support/**/*.rb")].each {|f| require f}
                    ^^^^^^^^^^^^^^^^^^^^^^
spec/spec_helper.rb:20:51: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
Dir[Rails.root.join("spec/support/**/*.rb")].each {|f| require f}
                                                  ^^
spec/spec_helper.rb:20:65: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
Dir[Rails.root.join("spec/support/**/*.rb")].each {|f| require f}
                                                                ^
test/application_system_test_case.rb:1:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/application_system_test_case.rb:8:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "headless",
    ^^^^^^^^^^
test/application_system_test_case.rb:9:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "window-size=1280x1280",
    ^^^^^^^^^^^^^^^^^^^^^^^
test/application_system_test_case.rb:10:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "disable-gpu"
    ^^^^^^^^^^^^^
test/application_system_test_case.rb:16:22: C: Rails/FilePath: Please use Rails.root.join('path/to') instead.
Capybara.save_path = "#{Rails.root}/tmp/screenshots"
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/catalogs_test.rb:1:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "application_system_test_case"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/homepage_test.rb:1:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "application_system_test_case"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/homepage_test.rb:5:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    visit("/")
          ^^^
test/system/homepage_test.rb:9:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert page.has_selector?("div#jhu-main-nav") # JHU Library Links
                              ^^^^^^^^^^^^^^^^^^
test/test_helper.rb:5:7: C: Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class ActiveSupport::TestCase
      ^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:9:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  provide "solr.url", "http://localhost:8983/solr/blacklight-core"
          ^^^^^^^^^^
traject/simple_marc_import.rb:9:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  provide "solr.url", "http://localhost:8983/solr/blacklight-core"
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:14:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  provide "solr.version", "6.6.3"
          ^^^^^^^^^^^^^^
traject/simple_marc_import.rb:14:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  provide "solr.version", "6.6.3"
                          ^^^^^^^
traject/simple_marc_import.rb:21:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  provide "solr_writer.commit_on_close", "true"
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:21:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  provide "solr_writer.commit_on_close", "true"
                                         ^^^^^^
traject/simple_marc_import.rb:29:1: C: Style/MixinUsage: extend is used at the top level. Use inside class or module.
extend  Traject::Macros::Marc21Semantics
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:32:1: C: Style/MixinUsage: extend is used at the top level. Use inside class or module.
extend Traject::Macros::MarcFormats
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:37:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "id", extract_marc("001", :first => true) do |marc_record, accumulator, context|
         ^^^^
traject/simple_marc_import.rb:37:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "id", extract_marc("001", :first => true) do |marc_record, accumulator, context|
                            ^^^^^
traject/simple_marc_import.rb:37:36: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
to_field "id", extract_marc("001", :first => true) do |marc_record, accumulator, context|
                                   ^^^^^^^^^
traject/simple_marc_import.rb:37:56: W: Lint/UnusedBlockArgument: Unused block argument - marc_record. If it's necessary, use _ or _marc_record as an argument name to indicate that it won't be used.
to_field "id", extract_marc("001", :first => true) do |marc_record, accumulator, context|
                                                       ^^^^^^^^^^^
traject/simple_marc_import.rb:37:82: W: Lint/UnusedBlockArgument: Unused block argument - context. If it's necessary, use _ or _context as an argument name to indicate that it won't be used.
to_field "id", extract_marc("001", :first => true) do |marc_record, accumulator, context|
                                                                                 ^^^^^^^
traject/simple_marc_import.rb:40:24: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
  accumulator.collect! {|s| "bib_#{s}"}
                       ^^
traject/simple_marc_import.rb:40:39: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  accumulator.collect! {|s| "bib_#{s}"}
                                      ^
traject/simple_marc_import.rb:43:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "source",              literal("horizon")
         ^^^^^^^^
traject/simple_marc_import.rb:43:41: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "source",              literal("horizon")
                                        ^^^^^^^^^
traject/simple_marc_import.rb:45:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "marc_display",        serialized_marc(:format => "binary", :binary_escape => false, :allow_oversized => true)
         ^^^^^^^^^^^^^^
traject/simple_marc_import.rb:45:49: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
to_field "marc_display",        serialized_marc(:format => "binary", :binary_escape => false, :allow_oversized => true)
                                                ^^^^^^^^^^
traject/simple_marc_import.rb:45:60: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "marc_display",        serialized_marc(:format => "binary", :binary_escape => false, :allow_oversized => true)
                                                           ^^^^^^^^
traject/simple_marc_import.rb:45:70: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
to_field "marc_display",        serialized_marc(:format => "binary", :binary_escape => false, :allow_oversized => true)
                                                                     ^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:45:95: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
to_field "marc_display",        serialized_marc(:format => "binary", :binary_escape => false, :allow_oversized => true)
                                                                                              ^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:47:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "text",                  extract_all_marc_values
         ^^^^^^
traject/simple_marc_import.rb:48:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "text_extra_boost_t",    extract_marc("505art")
         ^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:48:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "text_extra_boost_t",    extract_marc("505art")
                                               ^^^^^^^^
traject/simple_marc_import.rb:49:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "publisher_t",           extract_marc("260abef:261abef:262ab:264ab")
         ^^^^^^^^^^^^^
traject/simple_marc_import.rb:49:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "publisher_t",           extract_marc("260abef:261abef:262ab:264ab")
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:50:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "language_facet",        marc_languages
         ^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:52:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "format"                 do |record, accumulator|
         ^^^^^^^^
traject/simple_marc_import.rb:54:80: C: Layout/SpaceInsideParens: Space inside parentheses detected.
  accumulator.concat Traject::Macros::MarcFormatClassifier.new(record).formats( :default => nil  )
                                                                               ^
traject/simple_marc_import.rb:54:81: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  accumulator.concat Traject::Macros::MarcFormatClassifier.new(record).formats( :default => nil  )
                                                                                ^^^^^^^^^^^
traject/simple_marc_import.rb:54:96: C: Layout/ExtraSpacing: Unnecessary spacing detected.
  accumulator.concat Traject::Macros::MarcFormatClassifier.new(record).formats( :default => nil  )
                                                                                               ^
traject/simple_marc_import.rb:54:96: C: Layout/SpaceInsideParens: Space inside parentheses detected.
  accumulator.concat Traject::Macros::MarcFormatClassifier.new(record).formats( :default => nil  )
                                                                                               ^^
traject/simple_marc_import.rb:66:3: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "RC" => "CD",
  ^^^^
traject/simple_marc_import.rb:66:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "RC" => "CD",
          ^^^^
traject/simple_marc_import.rb:67:3: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "RL" => "LP",
  ^^^^
traject/simple_marc_import.rb:67:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "RL" => "LP",
          ^^^^
traject/simple_marc_import.rb:68:3: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "VB" => "Blu-ray",
  ^^^^
traject/simple_marc_import.rb:68:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "VB" => "Blu-ray",
          ^^^^^^^^^
traject/simple_marc_import.rb:69:3: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "VD" => "DVD",
  ^^^^
traject/simple_marc_import.rb:69:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "VD" => "DVD",
          ^^^^^
traject/simple_marc_import.rb:70:3: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "VH" => "VHS",
  ^^^^
traject/simple_marc_import.rb:70:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "VH" => "VHS",
          ^^^^^
traject/simple_marc_import.rb:70:16: C: Style/TrailingCommaInArguments: Avoid comma after the last parameter of a method call.
  "VH" => "VHS",
               ^
traject/simple_marc_import.rb:73:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "format" do |record, accumulator|
         ^^^^^^^^
traject/simple_marc_import.rb:77:3: C: Style/SelfAssignment: Use self-assignment shorthand &=.
  types = types & %w{RC RL VB VD VH}
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:77:19: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
  types = types & %w{RC RL VB VD VH}
                  ^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:82:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "isbn_t",                extract_marc("020a:773z:776z:534z:556z")
         ^^^^^^^^
traject/simple_marc_import.rb:82:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "isbn_t",                extract_marc("020a:773z:776z:534z:556z")
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:83:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "lccn",                  extract_marc("010a") do |record, accumulator|
         ^^^^^^
traject/simple_marc_import.rb:83:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "lccn",                  extract_marc("010a") do |record, accumulator|
                                               ^^^^^^
traject/simple_marc_import.rb:83:60: W: Lint/UnusedBlockArgument: Unused block argument - record. If it's necessary, use _ or _record as an argument name to indicate that it won't be used.
to_field "lccn",                  extract_marc("010a") do |record, accumulator|
                                                           ^^^^^^
traject/simple_marc_import.rb:84:20: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
  accumulator.each {|s| s.strip!}
                   ^^
traject/simple_marc_import.rb:84:20: C: Style/SymbolProc: Pass &:strip! as an argument to each instead of a block.
  accumulator.each {|s| s.strip!}
                   ^^^^^^^^^^^^^^
traject/simple_marc_import.rb:84:33: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  accumulator.each {|s| s.strip!}
                                ^
traject/simple_marc_import.rb:86:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "material_type_display", extract_marc("300a", :separator => nil, :trim_punctuation => true)
         ^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:86:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "material_type_display", extract_marc("300a", :separator => nil, :trim_punctuation => true)
                                               ^^^^^^
traject/simple_marc_import.rb:86:56: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
to_field "material_type_display", extract_marc("300a", :separator => nil, :trim_punctuation => true)
                                                       ^^^^^^^^^^^^^
traject/simple_marc_import.rb:86:75: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
to_field "material_type_display", extract_marc("300a", :separator => nil, :trim_punctuation => true)
                                                                          ^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:87:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "title_t",               extract_marc("245ak")
         ^^^^^^^^^
traject/simple_marc_import.rb:87:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "title_t",               extract_marc("245ak")
                                               ^^^^^^^
traject/simple_marc_import.rb:88:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "title1_t",              extract_marc("245abk")
         ^^^^^^^^^^
traject/simple_marc_import.rb:88:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "title1_t",              extract_marc("245abk")
                                               ^^^^^^^^
traject/simple_marc_import.rb:89:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "title2_t",              extract_marc("245nps:130:240abcdefgklmnopqrs:210ab:222ab:242abcehnp:243abcdefgklmnopqrs:246abcdefgnp:247abcdefgnp")
         ^^^^^^^^^^
traject/simple_marc_import.rb:89:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "title2_t",              extract_marc("245nps:130:240abcdefgklmnopqrs:210ab:222ab:242abcehnp:243abcdefgklmnopqrs:246abcdefgnp:247abcdefgnp")
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:89:121: C: Layout/LineLength: Line is too long. [149/120]
to_field "title2_t",              extract_marc("245nps:130:240abcdefgklmnopqrs:210ab:222ab:242abcehnp:243abcdefgklmnopqrs:246abcdefgnp:247abcdefgnp")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:90:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "title3_t",              extract_marc("700gklmnoprst:710fgklmnopqrst:711fgklnpst:730abdefgklmnopqrst:740anp:780abcrst:785abcrst:773abrst")
         ^^^^^^^^^^
traject/simple_marc_import.rb:90:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "title3_t",              extract_marc("700gklmnoprst:710fgklmnopqrst:711fgklnpst:730abdefgklmnopqrst:740anp:780abcrst:785abcrst:773abrst")
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:90:121: C: Layout/LineLength: Line is too long. [147/120]
to_field "title3_t",              extract_marc("700gklmnoprst:710fgklmnopqrst:711fgklnpst:730abdefgklmnopqrst:740anp:780abcrst:785abcrst:773abrst")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:92:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "title3_t" do |record, accumulator|
         ^^^^^^^^^^
traject/simple_marc_import.rb:97:50: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
      accumulator.concat field.subfields.collect {|sf| sf.value if sf.code == 't'}.compact
                                                 ^^
traject/simple_marc_import.rb:97:82: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      accumulator.concat field.subfields.collect {|sf| sf.value if sf.code == 't'}.compact
                                                                                 ^
traject/simple_marc_import.rb:110:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "title_exactmatch" do |record, accumulator|
         ^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:111:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  field = record["245"]
                 ^^^^^
traject/simple_marc_import.rb:114:15: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    base_title        = field['a'] || field['k']
              ^^^^^^^
traject/simple_marc_import.rb:114:23: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
    base_title        = field['a'] || field['k']
                      ^
traject/simple_marc_import.rb:120:22: C: Style/NumericPredicate: Use non_filing_count.positive? instead of non_filing_count > 0.
    if base_title && non_filing_count > 0
                     ^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:128:50: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      accumulator << [base_title, subtitle].join(" ") if base_title
                                                 ^^^
traject/simple_marc_import.rb:129:57: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      accumulator << [filing_base_title, subtitle].join(" ") if filing_base_title
                                                        ^^^
traject/simple_marc_import.rb:135:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "title_display",       extract_marc("245abk", :trim_punctuation => true, :first => true)
         ^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:135:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "title_display",       extract_marc("245abk", :trim_punctuation => true, :first => true)
                                             ^^^^^^^^
traject/simple_marc_import.rb:135:56: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
to_field "title_display",       extract_marc("245abk", :trim_punctuation => true, :first => true)
                                                       ^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:135:83: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
to_field "title_display",       extract_marc("245abk", :trim_punctuation => true, :first => true)
                                                                                  ^^^^^^^^^
traject/simple_marc_import.rb:136:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "title_sort",          marc_sortable_title
         ^^^^^^^^^^^^
traject/simple_marc_import.rb:138:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "title_series_t",      extract_marc("440a:490a:800abcdt:400abcd:810abcdt:410abcd:811acdeft:411acdef:830adfgklmnoprst:760ast:762ast")
         ^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:138:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "title_series_t",      extract_marc("440a:490a:800abcdt:400abcd:810abcdt:410abcd:811acdeft:411acdef:830adfgklmnoprst:760ast:762ast")
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:138:121: C: Layout/LineLength: Line is too long. [141/120]
to_field "title_series_t",      extract_marc("440a:490a:800abcdt:400abcd:810abcdt:410abcd:811acdeft:411acdef:830adfgklmnoprst:760ast:762ast")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:139:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "series_facet",        marc_series_facet
         ^^^^^^^^^^^^^^
traject/simple_marc_import.rb:141:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "author_unstem",       extract_marc("100abcdgqu:110abcdgnu:111acdegjnqu")
         ^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:141:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "author_unstem",       extract_marc("100abcdgqu:110abcdgnu:111acdegjnqu")
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:142:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "author2_unstem",      extract_marc("700abcdegqu:710abcdegnu:711acdegjnqu:720a:505r:245c:191abcdegqu")
         ^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:142:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "author2_unstem",      extract_marc("700abcdegqu:710abcdegnu:711acdegjnqu:720a:505r:245c:191abcdegqu")
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:143:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "author_display",      extract_marc("100abcdq:110:111")
         ^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:143:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "author_display",      extract_marc("100abcdq:110:111")
                                             ^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:144:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "author_sort",         marc_sortable_author
         ^^^^^^^^^^^^^
traject/simple_marc_import.rb:146:1: C: Layout/EmptyLines: Extra blank line detected.
traject/simple_marc_import.rb:147:1: C: Layout/LeadingCommentSpace: Missing space after #.
#to_field "author_facet",        extract_marc("100abcdq:110abcdgnu:111acdenqu:700abcdq:710abcdgnu:711acdenqu", :trim_punctuation => true)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:147:121: C: Layout/LineLength: Line is too long. [137/120]
#to_field "author_facet",        extract_marc("100abcdq:110abcdgnu:111acdenqu:700abcdq:710abcdgnu:711acdenqu", :trim_punctuation => true)
                                                                                                                        ^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:149:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "author_facet",        extract_marc("100abcdq:700abcdq", :trim_punctuation => true)
         ^^^^^^^^^^^^^^
traject/simple_marc_import.rb:149:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "author_facet",        extract_marc("100abcdq:700abcdq", :trim_punctuation => true)
                                             ^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:149:67: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
to_field "author_facet",        extract_marc("100abcdq:700abcdq", :trim_punctuation => true)
                                                                  ^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:150:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "organization_facet",  extract_marc("110abcdgnu:111acdenqu:710abcdgnu:711acdenqu", :trim_punctuation => true)
         ^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:150:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "organization_facet",  extract_marc("110abcdgnu:111acdenqu:710abcdgnu:711acdenqu", :trim_punctuation => true)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:150:93: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
to_field "organization_facet",  extract_marc("110abcdgnu:111acdenqu:710abcdgnu:711acdenqu", :trim_punctuation => true)
                                                                                            ^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:152:1: C: Layout/EmptyLines: Extra blank line detected.
traject/simple_marc_import.rb:153:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "subject_t",           extract_marc("600:610:611:630:650:651avxyz:653aa:654abcvyz:655abcvxyz:690abcdxyz:691abxyz:692abxyz:693abxyz:656akvxyz:657avxyz:652axyz:658abcd")
         ^^^^^^^^^^^
traject/simple_marc_import.rb:153:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "subject_t",           extract_marc("600:610:611:630:650:651avxyz:653aa:654abcvyz:655abcvxyz:690abcdxyz:691abxyz:692abxyz:693abxyz:656akvxyz:657avxyz:652axyz:658abcd")
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:153:121: C: Layout/LineLength: Line is too long. [176/120]
to_field "subject_t",           extract_marc("600:610:611:630:650:651avxyz:653aa:654abcvyz:655abcvxyz:690abcdxyz:691abxyz:692abxyz:693abxyz:656akvxyz:657avxyz:652axyz:658abcd")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:154:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "subject_topic_facet"  do |record, accumulator|
         ^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:156:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  accumulator.concat  MarcExtractor.cached("610x:611x:630x:648a:648x:650x:651a:651x:691a:691x:690a:690x", :separator => nil).extract(record)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:156:107: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  accumulator.concat  MarcExtractor.cached("610x:611x:630x:648a:648x:650x:651a:651x:691a:691x:690a:690x", :separator => nil).extract(record)
                                                                                                          ^^^^^^^^^^^^^
traject/simple_marc_import.rb:156:121: C: Layout/LineLength: Line is too long. [140/120]
  accumulator.concat  MarcExtractor.cached("610x:611x:630x:648a:648x:650x:651a:651x:691a:691x:690a:690x", :separator => nil).extract(record)
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:157:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  accumulator.concat  MarcExtractor.cached("600abcdtq:610abt:611abt:630aa:650aa:653aa:654ab:656aa").extract(record)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:160:24: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
  accumulator.collect! {|v| Traject::Macros::Marc21.trim_punctuation v}
                       ^^
traject/simple_marc_import.rb:160:71: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  accumulator.collect! {|v| Traject::Macros::Marc21.trim_punctuation v}
                                                                      ^
traject/simple_marc_import.rb:162:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #upcase first letter if needed, in MeSH sometimes inconsistently downcased
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:164:27: C: Style/SymbolProc: Pass &:upcase as an argument to gsub instead of a block.
    value.gsub(/\A[a-z]/) do |m| ...
                          ^^^^^^
traject/simple_marc_import.rb:170:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #accumulator << "Unspecified" if accumulator.empty?
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:173:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "subject_geo_facet",   marc_geo_facet
         ^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:174:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "subject_era_facet",   marc_era_facet
         ^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:178:1: C: Layout/LeadingCommentSpace: Missing space after #.
#to_field "subject_facet",     extract_marc("600:610:611:630:650:651:655:690", :seperator => "--")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:180:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "published_display", extract_marc("260a", :trim_punctuation => true)
         ^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:180:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "published_display", extract_marc("260a", :trim_punctuation => true)
                                           ^^^^^^
traject/simple_marc_import.rb:180:52: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
to_field "published_display", extract_marc("260a", :trim_punctuation => true)
                                                   ^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:181:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "pub_date",          marc_publication_date
         ^^^^^^^^^^
traject/simple_marc_import.rb:228:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "local_call_number_t" do |record, accumulator|
         ^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:229:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  MarcExtractor.cached("991:937").each_matching_line(record) do |field|
                       ^^^^^^^^^
traject/simple_marc_import.rb:244:56: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
instrumentation_map_hash = Traject::TranslationMap.new("marc_instruments").merge("sc" => "Cello").to_hash
                                                       ^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:244:82: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
instrumentation_map_hash = Traject::TranslationMap.new("marc_instruments").merge("sc" => "Cello").to_hash
                                                                                 ^^^^
traject/simple_marc_import.rb:244:90: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
instrumentation_map_hash = Traject::TranslationMap.new("marc_instruments").merge("sc" => "Cello").to_hash
                                                                                         ^^^^^^^
traject/simple_marc_import.rb:245:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "instrumentation_facet",       marc_instrumentation_humanized("048ab", :translation_map => instrumentation_map_hash)
         ^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:245:72: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "instrumentation_facet",       marc_instrumentation_humanized("048ab", :translation_map => instrumentation_map_hash)
                                                                       ^^^^^^^
traject/simple_marc_import.rb:245:81: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
to_field "instrumentation_facet",       marc_instrumentation_humanized("048ab", :translation_map => instrumentation_map_hash)
                                                                                ^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:245:121: C: Layout/LineLength: Line is too long. [125/120]
to_field "instrumentation_facet",       marc_instrumentation_humanized("048ab", :translation_map => instrumentation_map_hash)
                                                                                                                        ^^^^^
traject/simple_marc_import.rb:246:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "instrumentation_code_unstem", marc_instrument_codes_normalized
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:248:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "issn",                extract_marc("022a:022l:022y:773x:774x:776x", :separator => nil)
         ^^^^^^
traject/simple_marc_import.rb:248:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "issn",                extract_marc("022a:022l:022y:773x:774x:776x", :separator => nil)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:248:79: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
to_field "issn",                extract_marc("022a:022l:022y:773x:774x:776x", :separator => nil)
                                                                              ^^^^^^^^^^^^^
traject/simple_marc_import.rb:249:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "issn_related",        extract_marc("490x:440x:800x:400x:410x:411x:810x:811x:830x:700x:710x:711x:730x:780x:785x:777x:543x:760x:762x:765x:767x:770x:772x:775x:786x:787x", :separator => nil)
         ^^^^^^^^^^^^^^
traject/simple_marc_import.rb:249:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "issn_related",        extract_marc("490x:440x:800x:400x:410x:411x:810x:811x:830x:700x:710x:711x:730x:780x:785x:777x:543x:760x:762x:765x:767x:770x:772x:775x:786x:787x", :separator => nil)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:249:121: C: Layout/LineLength: Line is too long. [196/120]
to_field "issn_related",        extract_marc("490x:440x:800x:400x:410x:411x:810x:811x:830x:700x:710x:711x:730x:780x:785x:777x:543x:760x:762x:765x:767x:770x:772x:775x:786x:787x", :separator => nil)
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:249:179: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
to_field "issn_related",        extract_marc("490x:440x:800x:400x:410x:411x:810x:811x:830x:700x:710x:711x:730x:780x:785x:777x:543x:760x:762x:765x:767x:770x:772x:775x:786x:787x", :separator => nil)
                                                                                                                                                                                  ^^^^^^^^^^^^^
traject/simple_marc_import.rb:251:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "oclcnum_t",           oclcnum
         ^^^^^^^^^^^
traject/simple_marc_import.rb:253:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "other_number_unstem", extract_marc("024a:028a")
         ^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:253:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "other_number_unstem", extract_marc("024a:028a")
                                             ^^^^^^^^^^^
traject/simple_marc_import.rb:255:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
to_field "location_facet" do |record, accumulator|
         ^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:258:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  location_codes   = MarcExtractor.cached("991m:937m", :separator => nil).extract(record).collect {|c| c.downcase}
                                          ^^^^^^^^^^^
traject/simple_marc_import.rb:258:56: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  location_codes   = MarcExtractor.cached("991m:937m", :separator => nil).extract(record).collect {|c| c.downcase}
                                                       ^^^^^^^^^^^^^
traject/simple_marc_import.rb:258:99: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
  location_codes   = MarcExtractor.cached("991m:937m", :separator => nil).extract(record).collect {|c| c.downcase}
                                                                                                  ^^
traject/simple_marc_import.rb:258:99: C: Style/SymbolProc: Pass &:downcase as an argument to collect instead of a block.
  location_codes   = MarcExtractor.cached("991m:937m", :separator => nil).extract(record).collect {|c| c.downcase}
                                                                                                  ^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:258:114: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  location_codes   = MarcExtractor.cached("991m:937m", :separator => nil).extract(record).collect {|c| c.downcase}
                                                                                                                 ^
traject/simple_marc_import.rb:259:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  collection_codes = MarcExtractor.cached("991l:937l", :separator => nil).extract(record).collect {|c| c.downcase}
                                          ^^^^^^^^^^^
traject/simple_marc_import.rb:259:56: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  collection_codes = MarcExtractor.cached("991l:937l", :separator => nil).extract(record).collect {|c| c.downcase}
                                                       ^^^^^^^^^^^^^
traject/simple_marc_import.rb:259:99: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
  collection_codes = MarcExtractor.cached("991l:937l", :separator => nil).extract(record).collect {|c| c.downcase}
                                                                                                  ^^
traject/simple_marc_import.rb:259:99: C: Style/SymbolProc: Pass &:downcase as an argument to collect instead of a block.
  collection_codes = MarcExtractor.cached("991l:937l", :separator => nil).extract(record).collect {|c| c.downcase}
                                                                                                  ^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:259:114: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  collection_codes = MarcExtractor.cached("991l:937l", :separator => nil).extract(record).collect {|c| c.downcase}
                                                                                                                 ^
traject/simple_marc_import.rb:261:50: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  accumulator.concat Traject::TranslationMap.new("jh_locations").translate_array(location_codes)
                                                 ^^^^^^^^^^^^^^
traject/simple_marc_import.rb:262:50: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  accumulator.concat Traject::TranslationMap.new("jh_collections").translate_array(collection_codes)
                                                 ^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:265:25: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
  accumulator.delete_if {|a| a.nil? || a.empty?}
                        ^^
traject/simple_marc_import.rb:265:30: C: Rails/Blank: Use a.blank? instead of a.nil? || a.empty?.
  accumulator.delete_if {|a| a.nil? || a.empty?}
                             ^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:265:48: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  accumulator.delete_if {|a| a.nil? || a.empty?}
                                               ^
traject/simple_marc_import.rb:270:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #accumulator << "Unknown" if accumulator.empty?
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:275:52: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
all_location_values = (Traject::TranslationMap.new("jh_locations").to_hash.values.flatten +
                                                   ^^^^^^^^^^^^^^
traject/simple_marc_import.rb:276:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  Traject::TranslationMap.new("jh_collections").to_hash.values.flatten).uniq
                              ^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:277:31: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
all_location_values.delete_if {|a| a.nil? || a.empty?}
                              ^^
traject/simple_marc_import.rb:277:36: C: Rails/Blank: Use a.blank? instead of a.nil? || a.empty?.
all_location_values.delete_if {|a| a.nil? || a.empty?}
                                   ^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:277:54: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
all_location_values.delete_if {|a| a.nil? || a.empty?}
                                                     ^
traject/simple_marc_import.rb:278:17: W: Lint/UnusedBlockArgument: Unused block argument - record. If it's necessary, use _ or _record as an argument name to indicate that it won't be used.
each_record do |record, context|
                ^^^^^^
traject/simple_marc_import.rb:279:3: C: Style/Next: Use next to skip iteration.
  if (context.output_hash["format"] || []).include? "Online"
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:279:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  if (context.output_hash["format"] || []).include? "Online"
                          ^^^^^^^^
traject/simple_marc_import.rb:279:53: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  if (context.output_hash["format"] || []).include? "Online"
                                                    ^^^^^^^^
traject/simple_marc_import.rb:280:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      context.output_hash["location_facet"] ||= []
  ^^^^
traject/simple_marc_import.rb:280:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      context.output_hash["location_facet"] ||= []
                          ^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:281:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      context.output_hash["location_facet"].concat all_location_values
                          ^^^^^^^^^^^^^^^^
traject/simple_marc_import.rb:282:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      context.output_hash["location_facet"].uniq!
                          ^^^^^^^^^^^^^^^^

132 files inspected, 8385 offenses detected

######################################################################################################
#                                                                                                    #
#                                        RAILS_BEST_PRACTICES                                        #
#                                                                                                    #
######################################################################################################

/Users/ewlarson/Rails/jhu-blacklight-rails/db/schema.rb:16 - always add db index (bookmarks => [user_id, user_type])
/Users/ewlarson/Rails/jhu-blacklight-rails/db/schema.rb:16 - always add db index (bookmarks => [document_id, document_type])
/Users/ewlarson/Rails/jhu-blacklight-rails/db/schema.rb:51 - always add db index (searches => [user_id, user_type])
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/catalog/_holding_expandable.html.erb:100 - move code into model (holding use_count > 2)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/application_controller.rb:178 - move model logic into model (exception use_count > 4)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/application_controller.rb:178 - move model logic into model (request use_count > 4)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/application_controller.rb:199 - move model logic into model (referer use_count > 4)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/application_controller.rb:199 - move model logic into model (request use_count > 4)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/borrow_direct_controller.rb:37 - move model logic into model (current_user use_count > 4)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/multi_search_controller.rb:143 - move model logic into model (hash use_count > 4)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/multi_search_controller.rb:176 - move model logic into model (r use_count > 4)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/users_controller.rb:88 - move model logic into model (item_list use_count > 4)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/users_controller.rb:88 - move model logic into model (renewed use_count > 4)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/users_controller.rb:88 - move model logic into model ( use_count > 4)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/reserves_controller.rb:17 - move model logic into model (@courses use_count > 4)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/user_sessions_controller.rb:16 - move model logic into model (user use_count > 4)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/user_sessions_controller.rb:66 - move model logic into model (jhed_lid use_count > 4)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/user_sessions_controller.rb:66 - move model logic into model (user use_count > 4)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/requests_helper.rb:44 - Don't rescue Exception
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/application_helper.rb:109 - Don't rescue Exception
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/hip_pilot.rb:417 - Don't rescue Exception
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/hip_pilot.rb:484 - Don't rescue Exception
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/hip_pilot.rb:502 - Don't rescue Exception
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/dlf_expanded_passthrough/to_holdings_extension.rb:42 - Don't rescue Exception
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/dlf_expanded_passthrough/to_holdings_extension.rb:116 - Don't rescue Exception
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/dlf_expanded_passthrough/document_extension.rb:160 - Don't rescue Exception
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/dlf_expanded_passthrough/document_extension.rb:247 - Don't rescue Exception
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/horizon_borrower_lookup.rb:31 - Don't rescue Exception
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/application_controller.rb:64 - remove unused methods (ApplicationController#current_or_guest_user)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/multi_search_controller.rb:157 - remove unused methods (MultiSearchController#encrypt_record_id)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/info_controller.rb:7 - remove unused methods (InfoController#unstemmed_desc)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/info_controller.rb:11 - remove unused methods (InfoController#links)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/info_controller.rb:19 - remove unused methods (InfoController#research_links)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/info_controller.rb:23 - remove unused methods (InfoController#useful_links)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/info_controller.rb:26 - remove unused methods (InfoController#credits)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/catalog_controller.rb:487 - remove unused methods (CatalogController#facet_list_limit)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/catalog_controller.rb:495 - remove unused methods (CatalogController#add_facet_params)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/catalog_controller.rb:501 - remove unused methods (CatalogController#remove_facet_params)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/multi_search_helper.rb:22 - remove unused methods (MultiSearchHelper#bento_pagination_info)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/marc_heading_helper.rb:187 - remove unused methods (MarcHeadingHelper#marc_index_title)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/marc_heading_helper.rb:201 - remove unused methods (MarcHeadingHelper#all_subject_lines)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/marc_heading_helper.rb:210 - remove unused methods (MarcHeadingHelper#shortened_summary)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/marc_heading_helper.rb:231 - remove unused methods (MarcHeadingHelper#shortened_contents)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/application_helper.rb:38 - remove unused methods (ApplicationHelper#render_kaminari_info)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/application_helper.rb:69 - remove unused methods (ApplicationHelper#with_format)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/application_helper.rb:105 - remove unused methods (ApplicationHelper#document_to_marc)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/application_helper.rb:133 - remove unused methods (ApplicationHelper#current_search_area)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/application_helper.rb:155 - remove unused methods (ApplicationHelper#render_search_button)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/application_helper.rb:163 - remove unused methods (ApplicationHelper#search_url_context)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/local_catalog_helper.rb:13 - remove unused methods (LocalCatalogHelper#render_document_heading)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:33 - remove unused methods (MarcDisplayLogic#format_260c)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:51 - remove unused methods (MarcDisplayLogic#format_instr_048)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:65 - remove unused methods (MarcDisplayLogic#format_aacr2_abbrev)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:82 - remove unused methods (MarcDisplayLogic#format_marc_lang)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:90 - remove unused methods (MarcDisplayLogic#format_245h)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:94 - remove unused methods (MarcDisplayLogic#format_url_to_anchor)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:100 - remove unused methods (MarcDisplayLogic#format_lccn_normalize)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:124 - remove unused methods (MarcDisplayLogic#prefix_heading)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:155 - remove unused methods (MarcDisplayLogic#prefix_760)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:159 - remove unused methods (MarcDisplayLogic#prefix_762)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:165 - remove unused methods (MarcDisplayLogic#prefix_246)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:172 - remove unused methods (MarcDisplayLogic#prefix_024)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:192 - remove unused methods (MarcDisplayLogic#prefix_with_3)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:212 - remove unused methods (MarcDisplayLogic#prefix_785)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:227 - remove unused methods (MarcDisplayLogic#prefix_780)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:241 - remove unused methods (MarcDisplayLogic#prefix_521)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:248 - remove unused methods (MarcDisplayLogic#prefix_545)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:256 - remove unused methods (MarcDisplayLogic#delete_if_no_t)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:262 - remove unused methods (MarcDisplayLogic#map_prefix_lcsh)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:283 - remove unused methods (MarcDisplayLogic#link_lcsh_subd)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:314 - remove unused methods (MarcDisplayLogic#link_add_main_entry)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:396 - remove unused methods (MarcDisplayLogic#link_7xx)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:434 - remove unused methods (MarcDisplayLogic#link_cql_7xx)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:485 - remove unused methods (MarcDisplayLogic#clean_up_8xx_d)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:528 - remove unused methods (MarcDisplayLogic::MarcLogicProcs#marc_logic_map)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/models/solr_document.rb:22 - remove unused methods (SolrDocument#load_marc)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/models/bento_article_decorator.rb:16 - remove unused methods (BentoArticleDecorator#other_links)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/models/bento_article_decorator.rb:42 - remove unused methods (BentoArticleDecorator#display_format)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/models/bento_article_decorator.rb:57 - remove unused methods (BentoArticleDecorator#render_authors_list)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/models/bento_article_decorator.rb:99 - remove unused methods (BentoArticleDecorator#render_source_info)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/models/search_builder.rb:24 - remove unused methods (SearchBuilder#jh_reserves_default_sorting_paging)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/models/user.rb:17 - remove unused methods (User#is_real?)
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/models/marc_display/field_presenter.rb:228 - remove unused methods (MarcDisplay::FieldPresenter#find_linked_field)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/user_sessions_controller.rb:66 - replace complex creation with factory method (user attribute_assignment_count > 2)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/user_sessions/_login_form.html.erb:30 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/catalog/_citation.html.erb:1 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/catalog/_show_sidebar.html.erb:7 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/catalog/_show_sidebar.html.erb:11 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/catalog/_show_sidebar.html.erb:18 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/_head_notes.html.erb:4 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/_head_notes.html.erb:4 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/_head_notes.html.erb:7 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/_head_notes.html.erb:11 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/_foot_notes.html.erb:2 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/_foot_notes.html.erb:3 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/_foot_notes.html.erb:5 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/_foot_notes.html.erb:6 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/_foot_notes.html.erb:8 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/_foot_notes.html.erb:9 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/bookmarks/_refworks.html.erb:15 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/multi_search/_ebscohost_sidebar.html.erb:1 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/multi_search/_ebscohost_sidebar.html.erb:1 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/multi_search/_search_form.html.erb:4 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/multi_search/_search_form.html.erb:12 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/application/_spell_suggestion.html.erb:1 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/application/_spell_suggestion.html.erb:4 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/application/_spell_suggestion.html.erb:4 - replace instance variable with local variable
/Users/ewlarson/Rails/jhu-blacklight-rails/config/routes.rb:21 - restrict auto-generated routes catalog (only: [])
/Users/ewlarson/Rails/jhu-blacklight-rails/config/routes.rb:25 - restrict auto-generated routes solr_documents (only: [])
/Users/ewlarson/Rails/jhu-blacklight-rails/config/routes.rb:83 - restrict auto-generated routes reserves (only: [:show, :index])
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/disclaimer_controller.rb:11 - simplify render in controllers
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/requests_controller.rb:50 - simplify render in controllers
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/application_controller.rb:112 - simplify render in controllers
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/borrow_direct_controller.rb:49 - simplify render in controllers
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/user_sessions_controller.rb:32 - simplify render in controllers
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/user_sessions_controller.rb:57 - simplify render in controllers
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/user_sessions/index.html.erb:20 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/catalog/copy.html.erb:7 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/catalog/_show_sidebar.html.erb:5 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/request_failure.html.erb:26 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/create.html.erb:8 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/create.html.erb:14 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/new.html.erb:17 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/new.html.erb:66 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/info/useful_links.html.erb:4 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/info/useful_links.html.erb:8 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/layouts/application.html.erb:37 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/layouts/application.html.erb:71 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/multi_search/index.html.erb:65 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/multi_search/_ebscohost_sidebar.html.erb:73 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/multi_search/search.html.erb:5 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/multi_search/search.html.erb:15 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/multi_search/_search_form.html.erb:31 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/users/requests.html.erb:20 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/users/requests.html.erb:68 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/reserves/index.html.erb:44 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/reserves/index.html.erb:49 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/reserves/show.html.erb:12 - simplify render in views
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/user_sessions_controller.rb:66 - use model association (for user)
/Users/ewlarson/Rails/jhu-blacklight-rails/app/models/reserves_course.rb:3 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/models/solr_document.rb:5 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/models/stackmap_fetcher.rb:5 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/models/bento_article_decorator.rb:1 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/models/yboss_spell.rb:13 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/models/holding.rb:5 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/models/search_builder.rb:6 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/models/user.rb:8 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/models/marc_display/line.rb:4 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/models/marc_display/line_part.rb:3 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/models/marc_display/field_presenter.rb:1 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/models/marc_display/link.rb:8 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/multi_search_helper.rb:4 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/holdings_helper.rb:3 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/reserves_helper.rb:2 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/users_helper.rb:4 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/marc_heading_helper.rb:12 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/requests_helper.rb:3 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/helpers/application_helper.rb:4 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_helper.rb:4 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/helpers/marc_display_logic.rb:7 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/search_builder_filters/unstem_solr_params.rb:2 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/search_builder_filters/journal_title_apply_limit.rb:4 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/search_builder_filters/home_page_solr_params_logic.rb:4 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/map_controller.rb:8 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/multi_search_controller.rb:4 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/info_controller.rb:10 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/spellcheck_behavior.rb:31 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/reserves_controller.rb:4 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/user_sessions_controller.rb:45 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/controllers/catalog_controller.rb:26 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/advanced/_advanced_search_submit_btns.html.erb:3 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/advanced/_advanced_search_help.html.erb:8 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/advanced/_advanced_search_form.html.erb:22 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/user_sessions/_login_form.html.erb:4 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/catalog/_show_marc_heading.html.erb:9 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/catalog/_show_marc.html.erb:6 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/catalog/_holding_expandable.html.erb:12 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/catalog/_index_marc.html.erb:25 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/catalog/_show_sidebar.html.erb:1 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/catalog/_search_form.html.erb:5 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/_user_util_links.html.erb:23 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/request_failure.html.erb:4 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/_head_notes.html.erb:15 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/request_login_failure.html.erb:9 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/create.html.erb:6 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/requests/new.html.erb:4 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/info/unstemmed_desc.html.erb:8 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/info/_research_links.html.erb:6 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/info/_libraries.html.erb:9 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/info/partial_wrapper.html.erb:1 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/map/index.html.erb:34 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/bookmarks/_refworks.html.erb:7 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/multi_search/_articles_more_options.html.erb:5 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/multi_search/index.html.erb:2 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/multi_search/_articles_error.html.erb:9 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/multi_search/_ebscohost_sidebar.html.erb:24 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/multi_search/_gbs_error.html.erb:8 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/multi_search/search.html.erb:14 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/multi_search/_search_form.html.erb:13 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/multi_search/_combo_search_form.html.erb:1 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/users/show.html.erb:5 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/users/itemsout.html.erb:6 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/application/_spell_suggestion.html.erb:3 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/application/message.html.erb:4 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/application/_borrow_direct.html.erb:3 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/application/_search_bar.html.erb:2 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/reserves/index.html.erb:12 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/reserves/show.html.erb:11 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/reserves/_electronic_note.html.erb:1 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/app/views/reserves/_course.html.erb:4 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/bin/update_bookmarks.rb:6 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/config/routes.rb:2 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/config/environments/development.rb:9 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/config/environments/test.rb:16 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/config/application.rb:7 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/config/ebsco_dbs.rb:3 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/config/initializers/marc_display_localize.rb:3 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/config/initializers/mime_types.rb:5 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/config/initializers/google_scholar.rb:3 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/config/initializers/bento_search.rb:6 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/config/initializers/load_config.rb:3 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/config/initializers/yboss_auth.rb:1 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/config/initializers/disable_hip.rb:8 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/config/initializers/blacklight_advanced_search.rb:2 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/config/initializers/logging.rb:7 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/views/marc_display/_marc_line.html.erb:17 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/views/marc_display/_presenter_content.html.erb:2 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/views/marc_display/_marc_heading_sample.html.erb:7 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/views/marc_display/_marc_856.html.erb:2 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/views/marc_display/_marc_display.html.erb:4 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/app/views/marc_display/_marc_contents.html.erb:4 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/spec/spec_helper.rb:9 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/spec/app_root/config/environment.rb:16 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/spec/app_root/config/boot.rb:2 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/spec/lib/marc_to_open_url_spec.rb:12 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/lib/marc_display/blacklight/marc_to_open_url_extension.rb:6 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/lib/marc_display/default_presenters.rb:5 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/lib/marc_display/marc_to_open_url.rb:6 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/lib/marc_display/code_maps.rb:3 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/lib/marc_display/util.rb:5 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/marc_display/lib/marc_display.rb:2 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/lcc_to_extra_label.rb:16 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/custom_log_formatter.rb:1 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/tasks/marc_codes.rake:17 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/tasks/horizon_alphag.rake:13 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/tasks/nightly_cleanup.rake:13 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/hip_pilot.rb:27 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/dlf_expanded_passthrough/to_holdings_extension.rb:3 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/dlf_expanded_passthrough/document_extension.rb:6 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/render_unstemmed_constraint_helper.rb:4 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/jh_config.rb:1 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/horizon_borrower_lookup.rb:4 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/lib/ils_status.rb:10 - remove trailing whitespace
/Users/ewlarson/Rails/jhu-blacklight-rails/horizon-servlet/deploy/ws.xml.erb:1 - remove trailing whitespace

Please go to https://rails-bestpractices.com to see more useful Rails Best Practices.

Found 254 warnings.

######################################################################################################
#                                                                                                    #
#                                             RUBYCRITIC                                             #
#                                                                                                    #
######################################################################################################

running flay smells
.....................
running flog smells
................................................................................................................................................
running reek smells
................................................................................................................................................
running complexity
................................................................................................................................................
running attributes
................................................................................................................................................
running churn
................................................................................................................................................
running simple_cov
................................................................................................................................................
New critique at file:////Users/ewlarson/Rails/jhu-blacklight-rails/doc/rubycritic/overview.html
Score: 88.11

######################################################################################################
#                                                                                                    #
#                                              FASTERER                                              #
#                                                                                                    #
######################################################################################################

app/models/bento_article_decorator.rb:62 Using each_with_index is slower than while loop.

app/models/holding.rb:30 Use attr_writer for writing to ivars.
app/models/holding.rb:36 Use attr_writer for writing to ivars.
app/models/holding.rb:43 Hash#fetch with second argument is slower than Hash#fetch with block.
app/models/holding.rb:43 Hash#fetch with second argument is slower than Hash#fetch with block.
app/models/holding.rb:46 Hash#fetch with second argument is slower than Hash#fetch with block.
app/models/holding.rb:46 Hash#fetch with second argument is slower than Hash#fetch with block.

app/controllers/multi_search_controller.rb:50 Calling argumentless methods within blocks is slower than using symbol to proc.
app/controllers/multi_search_controller.rb:178 Calling argumentless methods within blocks is slower than using symbol to proc.

app/controllers/reserves_controller.rb:43 Calling argumentless methods within blocks is slower than using symbol to proc.

app/helpers/marc_heading_helper.rb:60 Calling argumentless methods within blocks is slower than using symbol to proc.
app/helpers/marc_heading_helper.rb:64 Calling argumentless methods within blocks is slower than using symbol to proc.
app/helpers/marc_heading_helper.rb:203 Calling argumentless methods within blocks is slower than using symbol to proc.

app/helpers/requests_helper.rb:66 Hash#fetch with second argument is slower than Hash#fetch with block.
app/helpers/requests_helper.rb:67 Hash#fetch with second argument is slower than Hash#fetch with block.

app/helpers/application_helper.rb:69 Calling blocks with call is slower than yielding.

config/application.rb:66 Hash#merge! with one argument is slower than Hash#[].

marc_display/app/models/marc_display/line.rb:98 Calling argumentless methods within blocks is slower than using symbol to proc.

marc_display/app/models/marc_display/field_presenter.rb:119 Calling argumentless methods within blocks is slower than using symbol to proc.

marc_display/app/helpers/marc_display_helper.rb:31 Calling argumentless methods within blocks is slower than using symbol to proc.

traject/simple_marc_import.rb:84 Calling argumentless methods within blocks is slower than using symbol to proc.
traject/simple_marc_import.rb:258 Calling argumentless methods within blocks is slower than using symbol to proc.
traject/simple_marc_import.rb:259 Calling argumentless methods within blocks is slower than using symbol to proc.

lib/hip_pilot.rb:85 Enumerable#sort is slower than Enumerable#sort_by.
lib/hip_pilot.rb:101 Enumerable#sort is slower than Enumerable#sort_by.
lib/hip_pilot.rb:365 Calling argumentless methods within blocks is slower than using symbol to proc.
lib/hip_pilot.rb:736 Use attr_reader for reading ivars.

lib/horizon_borrower_lookup.rb:86 Use attr_reader for reading ivars.

db/migrate/20131223191651_fix_character_encoding.rb:35 Calling argumentless methods within blocks is slower than using symbol to proc.
db/migrate/20131223191651_fix_character_encoding.rb:80 Calling argumentless methods within blocks is slower than using symbol to proc.

143 files inspected, 30 offenses detected

######################################################################################################
#                                                                                                    #
#                                              BRAKEMAN                                              #
#                                                                                                    #
######################################################################################################


== Brakeman Report ==

Application Path: /Users/ewlarson/Rails/jhu-blacklight-rails
Rails Version: 5.2.4.3
Brakeman Version: 4.8.2
Scan Date: 2020-07-22 10:57:04 -0500
Duration: 2.432696 seconds
Checks Run: BasicAuth, BasicAuthTimingAttack, ContentTag, CookieSerialization, CreateWith, CrossSiteScripting, DefaultRoutes, Deserialize, DetailedExceptions, DigestDoS, DynamicFinders, EscapeFunction, Evaluation, Execute, FileAccess, FileDisclosure, FilterSkipping, ForgerySetting, HeaderDoS, I18nXSS, JRubyXML, JSONEncoding, JSONEntityEscape, JSONParsing, LinkTo, LinkToHref, MailTo, MassAssignment, MimeTypeDoS, ModelAttrAccessible, ModelAttributes, ModelSerialize, NestedAttributes, NestedAttributesBypass, NumberToCurrency, PageCachingCVE, PermitAttributes, QuoteTableName, Redirect, RegexDoS, Render, RenderDoS, RenderInline, ResponseSplitting, RouteDoS, SQL, SQLCVEs, SSLVerify, SafeBufferManipulation, SanitizeMethods, SelectTag, SelectVulnerability, Send, SendFile, SessionManipulation, SessionSettings, SimpleFormat, SingleQuotes, SkipBeforeFilter, SprocketsPathTraversal, StripTags, SymbolDoSCVE, TranslateBug, UnsafeReflection, ValidationRegex, WithoutProtection, XMLDoS, YAMLParsing

== Overview ==

Controllers: 11
Models: 12
Templates: 63
Errors: 0
Security Warnings: 7

== Warning Types ==

Default Routes: 1
Dynamic Render Path: 1
Mass Assignment: 1
Remote Code Execution: 1
SSL Verification Bypass: 1
Session Setting: 2

== Warnings ==

Confidence: High
Category: Default Routes
Check: DefaultRoutes
Message: All public methods in controllers are available as actions in `routes.rb`
File: config/routes.rb
Line: 106

Confidence: High
Category: Mass Assignment
Check: MassAssignment
Message: Parameters should be whitelisted for mass assignment
Code: ActionController::Parameters.permit_all_parameters = true
File: app/controllers/application_controller.rb
Line: 28

Confidence: High
Category: SSL Verification Bypass
Check: SSLVerify
Message: SSL certificate verification was bypassed
Code: HTTPClient.new.ssl_config.verify_mode = OpenSSL::SSL::VERIFY_NONE
File: lib/hip_pilot.rb
Line: 445

Confidence: High
Category: Session Setting
Check: SessionSettings
Message: Session secret should not be included in version control
File: config/initializers/secret_token.rb
Line: 7

Confidence: High
Category: Session Setting
Check: SessionSettings
Message: Session secret should not be included in version control
File: config/initializers/secret_token.rb
Line: 8

Confidence: Medium
Category: Remote Code Execution
Check: CookieSerialization
Message: Use of unsafe cookie serialization strategy `:hybrid` might lead to remote code execution
Code: Rails.application.config.action_dispatch.cookies_serializer = :hybrid
File: config/initializers/cookies_serializer.rb
Line: 3

Confidence: Weak
Category: Dynamic Render Path
Check: Render
Message: Render path contains parameter value
Code: render(partial => BentoSearch.get_engine(params[:engine]).configuration.for_display.sidebar_partial, {})
File: app/views/multi_search/search.html.erb
Line: 5


######################################################################################################
#                                                                                                    #
#                                             TRACEROUTE                                             #
#                                                                                                    #
######################################################################################################

/Users/ewlarson/Rails/jhu-blacklight-rails/config/initializers/bento_search.rb:104: warning: already initialized constant BentoSearch::EbscoHostEngine::HttpTimeout
/Users/ewlarson/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/bento_search-1.7.0/app/search_engines/bento_search/ebsco_host_engine.rb:115: warning: previous definition of HttpTimeout was here
Unused routes (11):
  bookmarks#new
  bookmarks#edit
  /catalog/:id/track(.:format)
  /:asterisk(.:format)
  reserves#create
  reserves#new
  reserves#edit
  reserves#update
  reserves#update
  reserves#destroy
  "/:controller(/:action(/:id))(.:format)"  ⚠️  This is a legacy wild controller route that's not recommended for RESTful applications.
Unreachable action methods (774):
  application#search_state_class?
  application#current_or_guest_user
  application#search_state_class
  application#_run_logging_in_user_callbacks
  application#_logging_in_user_callbacks
  application#hip_disabled_message
  application#search_state_class=
  application#guest_user
  application#create_guest_user!
  application#current_user
  application#local_or_logged_in?
  application#search_field_def_for_key
  application#default_search_field
  application#search_field_list
  application#discard_flash_if_xhr
  application#search_facet_url
  application#default_catalog_controller
  application#blacklight_config
  catalog#bookmark
  catalog#refworks
  catalog#is_advanced_search?
  catalog#advanced_query
  catalog#librarian_view
  catalog#endnote
  catalog#search_results
  catalog#has_search_parameters?
  catalog#action_documents
  catalog#action_success_redirect_path
  catalog#facet_configuration_for_field
  catalog#facet_paginator
  catalog#facet_field_names
  catalog#facets_from_request
  catalog#facet_by_field_name
  catalog#render_sms_action?
  catalog#fetch
  catalog#repository
  catalog#grouped_key_for_results
  catalog#get_previous_and_next_documents_for_search
  catalog#get_facet_field_response
  catalog#get_opensearch_response
  catalog#repository_class
  catalog#previous_and_next_document_params
  catalog#solr_opensearch_params
  catalog#search_builder_class
  catalog#search_builder
  catalog#facet_limit_for
  catalog#blacklight_config=
  catalog#blacklight_config
  catalog#search_state_class?
  catalog#current_or_guest_user
  catalog#search_state_class
  catalog#_run_logging_in_user_callbacks
  catalog#_logging_in_user_callbacks
  catalog#hip_disabled_message
  catalog#show404
  catalog#search_state_class=
  catalog#guest_user
  catalog#create_guest_user!
  catalog#current_user
  catalog#local_or_logged_in?
  catalog#search_field_def_for_key
  catalog#default_search_field
  catalog#search_field_list
  catalog#discard_flash_if_xhr
  catalog#search_facet_url
  catalog#default_catalog_controller
  search_history#blacklight_config=
  search_history#blacklight_config
  search_history#search_state_class?
  search_history#current_or_guest_user
  search_history#search_state_class
  search_history#_run_logging_in_user_callbacks
  search_history#_logging_in_user_callbacks
  search_history#hip_disabled_message
  search_history#show404
  search_history#search_state_class=
  search_history#guest_user
  search_history#create_guest_user!
  search_history#current_user
  search_history#local_or_logged_in?
  search_history#search_field_def_for_key
  search_history#default_search_field
  search_history#search_field_list
  search_history#discard_flash_if_xhr
  search_history#search_facet_url
  search_history#default_catalog_controller
  saved_searches#blacklight_config=
  saved_searches#blacklight_config
  saved_searches#search_state_class?
  saved_searches#current_or_guest_user
  saved_searches#search_state_class
  saved_searches#_run_logging_in_user_callbacks
  saved_searches#_logging_in_user_callbacks
  saved_searches#hip_disabled_message
  saved_searches#show404
  saved_searches#search_state_class=
  saved_searches#guest_user
  saved_searches#create_guest_user!
  saved_searches#current_user
  saved_searches#local_or_logged_in?
  saved_searches#search_field_def_for_key
  saved_searches#default_search_field
  saved_searches#search_field_list
  saved_searches#discard_flash_if_xhr
  saved_searches#search_facet_url
  saved_searches#default_catalog_controller
  borrow_direct#search_state_class?
  borrow_direct#current_or_guest_user
  borrow_direct#search_state_class
  borrow_direct#_run_logging_in_user_callbacks
  borrow_direct#_logging_in_user_callbacks
  borrow_direct#hip_disabled_message
  borrow_direct#show404
  borrow_direct#search_state_class=
  borrow_direct#guest_user
  borrow_direct#create_guest_user!
  borrow_direct#current_user
  borrow_direct#local_or_logged_in?
  borrow_direct#search_field_def_for_key
  borrow_direct#default_search_field
  borrow_direct#search_field_list
  borrow_direct#discard_flash_if_xhr
  borrow_direct#search_facet_url
  borrow_direct#default_catalog_controller
  borrow_direct#blacklight_config
  info#unstemmed_desc
  info#libraries
  info#item_status
  info#links
  info#useful_links
  info#research_links
  info#credits
  info#search_state_class?
  info#current_or_guest_user
  info#search_state_class
  info#_run_logging_in_user_callbacks
  info#_logging_in_user_callbacks
  info#hip_disabled_message
  info#show404
  info#search_state_class=
  info#guest_user
  info#create_guest_user!
  info#current_user
  info#local_or_logged_in?
  info#search_field_def_for_key
  info#default_search_field
  info#search_field_list
  info#discard_flash_if_xhr
  info#search_facet_url
  info#default_catalog_controller
  info#blacklight_config
  map#search_state_class?
  map#current_or_guest_user
  map#search_state_class
  map#_run_logging_in_user_callbacks
  map#_logging_in_user_callbacks
  map#hip_disabled_message
  map#show404
  map#search_state_class=
  map#guest_user
  map#create_guest_user!
  map#current_user
  map#local_or_logged_in?
  map#search_field_def_for_key
  map#default_search_field
  map#search_field_list
  map#discard_flash_if_xhr
  map#search_facet_url
  map#default_catalog_controller
  map#blacklight_config
  user_sessions#search_state_class?
  user_sessions#current_or_guest_user
  user_sessions#search_state_class
  user_sessions#_run_logging_in_user_callbacks
  user_sessions#_logging_in_user_callbacks
  user_sessions#hip_disabled_message
  user_sessions#show404
  user_sessions#search_state_class=
  user_sessions#guest_user
  user_sessions#create_guest_user!
  user_sessions#current_user
  user_sessions#local_or_logged_in?
  user_sessions#search_field_def_for_key
  user_sessions#default_search_field
  user_sessions#search_field_list
  user_sessions#discard_flash_if_xhr
  user_sessions#search_facet_url
  user_sessions#default_catalog_controller
  user_sessions#blacklight_config
  suggest#fetch
  suggest#repository
  suggest#grouped_key_for_results
  suggest#get_previous_and_next_documents_for_search
  suggest#get_facet_field_response
  suggest#search_results
  suggest#get_opensearch_response
  suggest#repository_class
  suggest#previous_and_next_document_params
  suggest#solr_opensearch_params
  suggest#search_builder_class
  suggest#search_builder
  suggest#facet_limit_for
  suggest#blacklight_config=
  suggest#blacklight_config
  suggest#suggestions_service
  suggest#search_state_class?
  suggest#current_or_guest_user
  suggest#search_state_class
  suggest#_run_logging_in_user_callbacks
  suggest#_logging_in_user_callbacks
  suggest#hip_disabled_message
  suggest#show404
  suggest#search_state_class=
  suggest#guest_user
  suggest#create_guest_user!
  suggest#current_user
  suggest#local_or_logged_in?
  suggest#search_field_def_for_key
  suggest#default_search_field
  suggest#search_field_list
  suggest#discard_flash_if_xhr
  suggest#search_facet_url
  suggest#default_catalog_controller
  stackview_data#_config_for_types
  stackview_data#_config_for_types=
  stackview_data#_config_for_types?
  stackview_data#config_for_type
  stackview_data#search_state_class?
  stackview_data#current_or_guest_user
  stackview_data#search_state_class
  stackview_data#_run_logging_in_user_callbacks
  stackview_data#_logging_in_user_callbacks
  stackview_data#hip_disabled_message
  stackview_data#show404
  stackview_data#search_state_class=
  stackview_data#guest_user
  stackview_data#create_guest_user!
  stackview_data#current_user
  stackview_data#local_or_logged_in?
  stackview_data#search_field_def_for_key
  stackview_data#default_search_field
  stackview_data#search_field_list
  stackview_data#discard_flash_if_xhr
  stackview_data#search_facet_url
  stackview_data#default_catalog_controller
  stackview_data#blacklight_config
  bento_search/bento_search#search_state_class?
  bento_search/bento_search#current_or_guest_user
  bento_search/bento_search#search_state_class
  bento_search/bento_search#_run_logging_in_user_callbacks
  bento_search/bento_search#_logging_in_user_callbacks
  bento_search/bento_search#hip_disabled_message
  bento_search/bento_search#show404
  bento_search/bento_search#search_state_class=
  bento_search/bento_search#guest_user
  bento_search/bento_search#create_guest_user!
  bento_search/bento_search#current_user
  bento_search/bento_search#local_or_logged_in?
  bento_search/bento_search#search_field_def_for_key
  bento_search/bento_search#default_search_field
  bento_search/bento_search#search_field_list
  bento_search/bento_search#discard_flash_if_xhr
  bento_search/bento_search#search_facet_url
  bento_search/bento_search#default_catalog_controller
  bento_search/bento_search#blacklight_config
  blacklight_advanced_search/advanced#index
  blacklight_advanced_search/advanced#bookmark
  blacklight_advanced_search/advanced#citation
  blacklight_advanced_search/advanced#refworks
  blacklight_advanced_search/advanced#copy
  blacklight_advanced_search/advanced#sms_form
  blacklight_advanced_search/advanced#sms_send
  blacklight_advanced_search/advanced#email
  blacklight_advanced_search/advanced#shelfbrowse
  blacklight_advanced_search/advanced#shelfbrowse_item
  blacklight_advanced_search/advanced#sms
  blacklight_advanced_search/advanced#is_advanced_search?
  blacklight_advanced_search/advanced#advanced_query
  blacklight_advanced_search/advanced#cql_explain
  blacklight_advanced_search/advanced#librarian_view
  blacklight_advanced_search/advanced#endnote
  blacklight_advanced_search/advanced#search_results
  blacklight_advanced_search/advanced#track
  blacklight_advanced_search/advanced#facet
  blacklight_advanced_search/advanced#show
  blacklight_advanced_search/advanced#opensearch
  blacklight_advanced_search/advanced#has_search_parameters?
  blacklight_advanced_search/advanced#action_documents
  blacklight_advanced_search/advanced#action_success_redirect_path
  blacklight_advanced_search/advanced#facet_configuration_for_field
  blacklight_advanced_search/advanced#facet_paginator
  blacklight_advanced_search/advanced#facet_field_names
  blacklight_advanced_search/advanced#facets_from_request
  blacklight_advanced_search/advanced#facet_by_field_name
  blacklight_advanced_search/advanced#render_sms_action?
  blacklight_advanced_search/advanced#fetch
  blacklight_advanced_search/advanced#repository
  blacklight_advanced_search/advanced#grouped_key_for_results
  blacklight_advanced_search/advanced#get_previous_and_next_documents_for_search
  blacklight_advanced_search/advanced#get_facet_field_response
  blacklight_advanced_search/advanced#get_opensearch_response
  blacklight_advanced_search/advanced#repository_class
  blacklight_advanced_search/advanced#previous_and_next_document_params
  blacklight_advanced_search/advanced#solr_opensearch_params
  blacklight_advanced_search/advanced#search_builder_class
  blacklight_advanced_search/advanced#search_builder
  blacklight_advanced_search/advanced#facet_limit_for
  blacklight_advanced_search/advanced#blacklight_config=
  blacklight_advanced_search/advanced#blacklight_config
  blacklight_advanced_search/advanced#search_state_class?
  blacklight_advanced_search/advanced#current_or_guest_user
  blacklight_advanced_search/advanced#search_state_class
  blacklight_advanced_search/advanced#_run_logging_in_user_callbacks
  blacklight_advanced_search/advanced#_logging_in_user_callbacks
  blacklight_advanced_search/advanced#hip_disabled_message
  blacklight_advanced_search/advanced#show404
  blacklight_advanced_search/advanced#search_state_class=
  blacklight_advanced_search/advanced#guest_user
  blacklight_advanced_search/advanced#create_guest_user!
  blacklight_advanced_search/advanced#current_user
  blacklight_advanced_search/advanced#local_or_logged_in?
  blacklight_advanced_search/advanced#search_field_def_for_key
  blacklight_advanced_search/advanced#default_search_field
  blacklight_advanced_search/advanced#search_field_list
  blacklight_advanced_search/advanced#discard_flash_if_xhr
  blacklight_advanced_search/advanced#search_facet_url
  blacklight_advanced_search/advanced#default_catalog_controller
  disclaimer#bookmark
  disclaimer#citation
  disclaimer#refworks
  disclaimer#copy
  disclaimer#sms_form
  disclaimer#sms_send
  disclaimer#email
  disclaimer#shelfbrowse
  disclaimer#shelfbrowse_item
  disclaimer#sms
  disclaimer#is_advanced_search?
  disclaimer#advanced_query
  disclaimer#cql_explain
  disclaimer#librarian_view
  disclaimer#endnote
  disclaimer#search_results
  disclaimer#track
  disclaimer#facet
  disclaimer#show
  disclaimer#opensearch
  disclaimer#has_search_parameters?
  disclaimer#action_documents
  disclaimer#action_success_redirect_path
  disclaimer#facet_configuration_for_field
  disclaimer#facet_paginator
  disclaimer#facet_field_names
  disclaimer#facets_from_request
  disclaimer#facet_by_field_name
  disclaimer#render_sms_action?
  disclaimer#fetch
  disclaimer#repository
  disclaimer#grouped_key_for_results
  disclaimer#get_previous_and_next_documents_for_search
  disclaimer#get_facet_field_response
  disclaimer#get_opensearch_response
  disclaimer#repository_class
  disclaimer#previous_and_next_document_params
  disclaimer#solr_opensearch_params
  disclaimer#search_builder_class
  disclaimer#search_builder
  disclaimer#facet_limit_for
  disclaimer#blacklight_config=
  disclaimer#blacklight_config
  disclaimer#search_state_class?
  disclaimer#current_or_guest_user
  disclaimer#search_state_class
  disclaimer#_run_logging_in_user_callbacks
  disclaimer#_logging_in_user_callbacks
  disclaimer#hip_disabled_message
  disclaimer#show404
  disclaimer#search_state_class=
  disclaimer#guest_user
  disclaimer#create_guest_user!
  disclaimer#current_user
  disclaimer#local_or_logged_in?
  disclaimer#search_field_def_for_key
  disclaimer#default_search_field
  disclaimer#search_field_list
  disclaimer#discard_flash_if_xhr
  disclaimer#search_facet_url
  disclaimer#default_catalog_controller
  multi_search#bookmark
  multi_search#citation
  multi_search#refworks
  multi_search#copy
  multi_search#sms_form
  multi_search#sms_send
  multi_search#email
  multi_search#shelfbrowse
  multi_search#shelfbrowse_item
  multi_search#sms
  multi_search#is_advanced_search?
  multi_search#advanced_query
  multi_search#cql_explain
  multi_search#librarian_view
  multi_search#endnote
  multi_search#search_results
  multi_search#track
  multi_search#facet
  multi_search#show
  multi_search#opensearch
  multi_search#has_search_parameters?
  multi_search#action_documents
  multi_search#action_success_redirect_path
  multi_search#facet_configuration_for_field
  multi_search#facet_paginator
  multi_search#facet_field_names
  multi_search#facets_from_request
  multi_search#facet_by_field_name
  multi_search#render_sms_action?
  multi_search#fetch
  multi_search#repository
  multi_search#grouped_key_for_results
  multi_search#get_previous_and_next_documents_for_search
  multi_search#get_facet_field_response
  multi_search#get_opensearch_response
  multi_search#repository_class
  multi_search#previous_and_next_document_params
  multi_search#solr_opensearch_params
  multi_search#search_builder_class
  multi_search#search_builder
  multi_search#facet_limit_for
  multi_search#blacklight_config=
  multi_search#blacklight_config
  multi_search#search_state_class?
  multi_search#current_or_guest_user
  multi_search#search_state_class
  multi_search#_run_logging_in_user_callbacks
  multi_search#_logging_in_user_callbacks
  multi_search#hip_disabled_message
  multi_search#show404
  multi_search#search_state_class=
  multi_search#guest_user
  multi_search#create_guest_user!
  multi_search#current_user
  multi_search#local_or_logged_in?
  multi_search#search_field_def_for_key
  multi_search#default_search_field
  multi_search#search_field_list
  multi_search#discard_flash_if_xhr
  multi_search#search_facet_url
  multi_search#default_catalog_controller
  requests#bookmark
  requests#citation
  requests#refworks
  requests#copy
  requests#sms_form
  requests#sms_send
  requests#email
  requests#shelfbrowse
  requests#shelfbrowse_item
  requests#sms
  requests#is_advanced_search?
  requests#advanced_query
  requests#cql_explain
  requests#librarian_view
  requests#endnote
  requests#search_results
  requests#index
  requests#track
  requests#facet
  requests#show
  requests#opensearch
  requests#has_search_parameters?
  requests#action_documents
  requests#action_success_redirect_path
  requests#facet_configuration_for_field
  requests#facet_paginator
  requests#facet_field_names
  requests#facets_from_request
  requests#facet_by_field_name
  requests#render_sms_action?
  requests#fetch
  requests#repository
  requests#grouped_key_for_results
  requests#get_previous_and_next_documents_for_search
  requests#get_facet_field_response
  requests#get_opensearch_response
  requests#repository_class
  requests#previous_and_next_document_params
  requests#solr_opensearch_params
  requests#search_builder_class
  requests#search_builder
  requests#facet_limit_for
  requests#blacklight_config=
  requests#blacklight_config
  requests#search_state_class?
  requests#current_or_guest_user
  requests#search_state_class
  requests#_run_logging_in_user_callbacks
  requests#_logging_in_user_callbacks
  requests#hip_disabled_message
  requests#show404
  requests#search_state_class=
  requests#guest_user
  requests#create_guest_user!
  requests#current_user
  requests#local_or_logged_in?
  requests#search_field_def_for_key
  requests#default_search_field
  requests#search_field_list
  requests#discard_flash_if_xhr
  requests#search_facet_url
  requests#default_catalog_controller
  reserves#bookmark
  reserves#citation
  reserves#refworks
  reserves#copy
  reserves#sms_form
  reserves#sms_send
  reserves#email
  reserves#shelfbrowse
  reserves#shelfbrowse_item
  reserves#sms
  reserves#is_advanced_search?
  reserves#advanced_query
  reserves#cql_explain
  reserves#librarian_view
  reserves#endnote
  reserves#search_results
  reserves#track
  reserves#facet
  reserves#opensearch
  reserves#has_search_parameters?
  reserves#action_documents
  reserves#action_success_redirect_path
  reserves#facet_configuration_for_field
  reserves#facet_paginator
  reserves#facet_field_names
  reserves#facets_from_request
  reserves#facet_by_field_name
  reserves#render_sms_action?
  reserves#fetch
  reserves#repository
  reserves#grouped_key_for_results
  reserves#get_previous_and_next_documents_for_search
  reserves#get_facet_field_response
  reserves#get_opensearch_response
  reserves#repository_class
  reserves#previous_and_next_document_params
  reserves#solr_opensearch_params
  reserves#search_builder_class
  reserves#search_builder
  reserves#facet_limit_for
  reserves#blacklight_config=
  reserves#blacklight_config
  reserves#search_state_class?
  reserves#current_or_guest_user
  reserves#search_state_class
  reserves#_run_logging_in_user_callbacks
  reserves#_logging_in_user_callbacks
  reserves#hip_disabled_message
  reserves#show404
  reserves#search_state_class=
  reserves#guest_user
  reserves#create_guest_user!
  reserves#current_user
  reserves#local_or_logged_in?
  reserves#search_field_def_for_key
  reserves#default_search_field
  reserves#search_field_list
  reserves#discard_flash_if_xhr
  reserves#search_facet_url
  reserves#default_catalog_controller
  users#new
  users#renew
  users#create
  users#bookmark
  users#citation
  users#refworks
  users#copy
  users#sms_form
  users#sms_send
  users#email
  users#shelfbrowse
  users#shelfbrowse_item
  users#sms
  users#is_advanced_search?
  users#advanced_query
  users#cql_explain
  users#librarian_view
  users#endnote
  users#search_results
  users#index
  users#track
  users#facet
  users#opensearch
  users#has_search_parameters?
  users#action_documents
  users#action_success_redirect_path
  users#facet_configuration_for_field
  users#facet_paginator
  users#facet_field_names
  users#facets_from_request
  users#facet_by_field_name
  users#render_sms_action?
  users#fetch
  users#repository
  users#grouped_key_for_results
  users#get_previous_and_next_documents_for_search
  users#get_facet_field_response
  users#get_opensearch_response
  users#repository_class
  users#previous_and_next_document_params
  users#solr_opensearch_params
  users#search_builder_class
  users#search_builder
  users#facet_limit_for
  users#blacklight_config=
  users#blacklight_config
  users#search_state_class?
  users#current_or_guest_user
  users#search_state_class
  users#_run_logging_in_user_callbacks
  users#_logging_in_user_callbacks
  users#hip_disabled_message
  users#show404
  users#search_state_class=
  users#guest_user
  users#create_guest_user!
  users#current_user
  users#local_or_logged_in?
  users#search_field_def_for_key
  users#default_search_field
  users#search_field_list
  users#discard_flash_if_xhr
  users#search_facet_url
  users#default_catalog_controller
  bookmarks#action_documents
  bookmarks#action_success_redirect_path
  bookmarks#search_action_url
  bookmarks#bookmark
  bookmarks#refworks
  bookmarks#copy
  bookmarks#sms_form
  bookmarks#sms_send
  bookmarks#shelfbrowse
  bookmarks#shelfbrowse_item
  bookmarks#is_advanced_search?
  bookmarks#advanced_query
  bookmarks#cql_explain
  bookmarks#librarian_view
  bookmarks#endnote
  bookmarks#search_results
  bookmarks#track
  bookmarks#facet
  bookmarks#opensearch
  bookmarks#has_search_parameters?
  bookmarks#facet_configuration_for_field
  bookmarks#facet_paginator
  bookmarks#facet_field_names
  bookmarks#facets_from_request
  bookmarks#facet_by_field_name
  bookmarks#render_sms_action?
  bookmarks#fetch
  bookmarks#repository
  bookmarks#grouped_key_for_results
  bookmarks#get_previous_and_next_documents_for_search
  bookmarks#get_facet_field_response
  bookmarks#get_opensearch_response
  bookmarks#repository_class
  bookmarks#previous_and_next_document_params
  bookmarks#solr_opensearch_params
  bookmarks#search_builder_class
  bookmarks#search_builder
  bookmarks#facet_limit_for
  bookmarks#blacklight_config=
  bookmarks#blacklight_config
  bookmarks#search_state_class?
  bookmarks#current_or_guest_user
  bookmarks#search_state_class
  bookmarks#_run_logging_in_user_callbacks
  bookmarks#_logging_in_user_callbacks
  bookmarks#hip_disabled_message
  bookmarks#show404
  bookmarks#search_state_class=
  bookmarks#guest_user
  bookmarks#create_guest_user!
  bookmarks#current_user
  bookmarks#local_or_logged_in?
  bookmarks#search_field_def_for_key
  bookmarks#default_search_field
  bookmarks#search_field_list
  bookmarks#discard_flash_if_xhr
  bookmarks#search_facet_url
  bookmarks#default_catalog_controller
  advanced#index
  advanced#bookmark
  advanced#citation
  advanced#refworks
  advanced#copy
  advanced#sms_form
  advanced#sms_send
  advanced#email
  advanced#shelfbrowse
  advanced#shelfbrowse_item
  advanced#sms
  advanced#is_advanced_search?
  advanced#advanced_query
  advanced#cql_explain
  advanced#librarian_view
  advanced#endnote
  advanced#search_results
  advanced#track
  advanced#facet
  advanced#show
  advanced#opensearch
  advanced#has_search_parameters?
  advanced#action_documents
  advanced#action_success_redirect_path
  advanced#facet_configuration_for_field
  advanced#facet_paginator
  advanced#facet_field_names
  advanced#facets_from_request
  advanced#facet_by_field_name
  advanced#render_sms_action?
  advanced#fetch
  advanced#repository
  advanced#grouped_key_for_results
  advanced#get_previous_and_next_documents_for_search
  advanced#get_facet_field_response
  advanced#get_opensearch_response
  advanced#repository_class
  advanced#previous_and_next_document_params
  advanced#solr_opensearch_params
  advanced#search_builder_class
  advanced#search_builder
  advanced#facet_limit_for
  advanced#blacklight_config=
  advanced#blacklight_config
  advanced#search_state_class?
  advanced#current_or_guest_user
  advanced#search_state_class
  advanced#_run_logging_in_user_callbacks
  advanced#_logging_in_user_callbacks
  advanced#hip_disabled_message
  advanced#show404
  advanced#search_state_class=
  advanced#guest_user
  advanced#create_guest_user!
  advanced#current_user
  advanced#local_or_logged_in?
  advanced#search_field_def_for_key
  advanced#default_search_field
  advanced#search_field_list
  advanced#discard_flash_if_xhr
  advanced#search_facet_url
  advanced#default_catalog_controller
  bento_search/search#search_state_class?
  bento_search/search#current_or_guest_user
  bento_search/search#search_state_class
  bento_search/search#_run_logging_in_user_callbacks
  bento_search/search#_logging_in_user_callbacks
  bento_search/search#hip_disabled_message
  bento_search/search#show404
  bento_search/search#search_state_class=
  bento_search/search#guest_user
  bento_search/search#create_guest_user!
  bento_search/search#current_user
  bento_search/search#local_or_logged_in?
  bento_search/search#search_field_def_for_key
  bento_search/search#default_search_field
  bento_search/search#search_field_list
  bento_search/search#discard_flash_if_xhr
  bento_search/search#search_facet_url
  bento_search/search#default_catalog_controller
  bento_search/search#blacklight_config

######################################################################################################
#                                                                                                    #
#                                               STATS                                                #
#                                                                                                    #
######################################################################################################

+----------------------+--------+--------+---------+---------+-----+-------+
| Name                 |  Lines |    LOC | Classes | Methods | M/C | LOC/M |
+----------------------+--------+--------+---------+---------+-----+-------+
| Controllers          |   1818 |   1059 |      11 |      77 |   7 |    11 |
| Helpers              |    786 |    465 |       0 |      48 |   0 |     7 |
| Models               |    818 |    471 |      18 |      43 |   2 |     8 |
| JavaScripts          |    965 |    500 |       0 |      69 |   0 |     5 |
| Libraries            |   2226 |   1373 |      18 |      89 |   4 |    13 |
| System tests         |     20 |     12 |       2 |       2 |   1 |     4 |
| Views                |      0 |      0 |       0 |       0 |   0 |     0 |
| Spec: Requests       |     44 |     24 |       0 |       0 |   0 |     0 |
+----------------------+--------+--------+---------+---------+-----+-------+
| Total                |   6677 |   3904 |      49 |     328 |   6 |     9 |
+----------------------+--------+--------+---------+---------+-----+-------+
  Code LOC: 3868     Test LOC: 36     Code to Test Ratio: 1:0.0
